折れ線 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n)
実数 サイン 求める	math.sin(x)
データ 列 位 丸める	ds.round(-2)
カデット ブルー ヒストグラム 色 セット する	plt.hist(データ列, color='cadetblue')
負 数	n < 0
列 配列 する	df[column].values
配列 リスト 散布 図 カラー コード 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c=rgb)
文字 列 左寄せ する	s.ljust(文字列幅)
文字 列 開始 位置 終了 位置 範囲 部分 文字 列 カウント する	s.count(sub, start, end)
オプション グラフ 線 種 実線 設定 する	linestyle = 'solid'
二つ 列 用い 破壊 的 データ フレーム 昇順 ソート する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データ フレーム カラム 何 年 調べる	df[col].dt.year
カンマ 文字 列 分割 し 列挙 する	s.split(',')
ケン ドール 相関 係数 データ フレーム リスト 列 相関 行列	df[aList].corr(method='kendall')
イテラブル 配列 散布 図 黒い 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c='k')
データ フレーム 各 列 列 組み合わせ 毎 分類 し 最大 値 求める	df.groupby([column, column2], as_index=False).max()
折れ線 グラフ 三角 印 線 幅 セット する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
実数 複素数 変換 する	complex(x)
二つ 変数 それぞれ 定義 する	x, y = i, j
折れ線 グラフ 星 印 サイズ 設定 する	plt.plot(データ列, データ列2, marker='*', markersize=n)
散布 図 赤い マーカー 使う	plt.plot(xdata, ydata, marker='^', c='r')
データ フレーム インデックス 昇順 整列 する	df.sort_index(ascending=True)
データ フレーム 欠損 値 置換 する	df.fillna(x)
ヒストグラム 描画 し その 色 ライト シアン する	plt.hist(データ列, color='lightcyan')
折れ線 グラフ 描画 し その 色 アクア 設定 する	plt.plot(データ列, データ列2, color='aqua')
オプション ライト コーラル 色 セット する	color = 'lightcoral'
重 見やすく リスト データ 列 散布 図 濃い 色 描画 する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
折れ線 グラフ 描画 し その 色 カーキ 変更 する	plt.plot(データ列, データ列2, color='khaki')
文字 化け し ない よう 読み込む	pd.read_csv(filename, encoding='shift_jis')
配列 リスト 青い 淡い グラフ 描く	plt.plot(xdata, ydata, linestyle='muted', color='b')
オプション セパレータ カンマ する	sep = ','
浮動 小数点 数 型 する	float(x)
文字 列 青色 出力 する	print(f'\033[34m{value}\033[0m')
ヒストグラム 色 ゴースト ホワイト セット する	plt.hist(データ列, color='ghostwhite')
黒い 菱形 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D', c='k')
データ フレーム 表示 する とき データ フレーム 行 表示 できる よう する	pd.set_option('display.max_rows', n)
ファイル ファイル 名	filename.endswith('.csv')
プロット 色 色 差別 なく する	sns.set(pallete='colorblind')
グラフ 目的 論文 設定 する	sns.set(context='paper')
カラム 欠損 値 設定 する	ds.fillna(x)
数列 リスト 折れ線 グラフ 描画 し その 色 カラー コード セット する	plt.plot(xdata, ydata, color=rgb)
イテラブル イミュータブル な 集合 する	frozenset(iterable)
データ フレーム 列 集計 し それぞれ グループ 毎 分散 計算 する	df.groupby(column).var()
散布 図 カラー コード マーカー 用いる	plt.plot(xdata, ydata, marker='^', c=rgb)
データ フレーム 列 各 データ 何 回 出現 する 見る	df[col].value_counts()
折れ線 グラフ 丸 マーカー 青く する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
データ 列 どの 程度 分散 し いる 確認 する	ds.var()
ファイル パス 文字 列 示す エン コーディング 書き込み 用 オープン する	open(filepath, mode='w', encoding=s)
ヒストグラム 色 ライト イエロー 設定 する	plt.hist(データ列, color='lightyellow')
データ 列 欠損 値 パーセンタイル 埋める	ds.fillna(ds.median())
黒い バツ マーカー リスト データ 列 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='k')
オプション グラフ 色 ダークターコイズ する	color = 'darkturquoise'
折れ線 グラフ 描画 し その 色 ダーク オレンジ 設定 する	plt.plot(データ列, データ列2, color='darkorange')
ヒストグラム 描画 し 色 ダークオーキッド 設定 する	plt.hist(データ列, color='darkorchid')
折れ線 グラフ スタイル 一 点 鎖線 設定 する	plt.plot(データ列, データ列2, linestyle='dashbot')
データ フレーム 先頭 行 抽出 する	df.head(n)
データ フレーム 中 列 ビン 数 用い ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
赤色 右 三 角 マーカー データ 列 イテラブル 散布 図 描く	plt.plot(xdata, ydata, marker='>', c='r')
リスト リスト 加え 拡張 する	aList.extend(aList2)
線 グラフ 色 アリスブルー 設定 する	plt.plot(データ列, データ列2, color='aliceblue')
配列 列方向 連結 する	np.concatenate([aArray, aArray2], axis=0)
赤い ポイント マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
集合 イミュータブル 変換 する	frozenset(aSet)
配列 行 ごと 最大 値	np.max(aArray, axis=1)
プラットホーム ウィンドウズ	sys.platform.startswith('win32')
空 両端 キュー	collections.deque()
辞書 項目 名 値 エラー なく 参照 する	aDict.get(key, None)
データ 列 リスト 散布 図 描画 し マーカー 設定 する	plt.plot(xdata, ydata, marker='^')
折れ線 グラフ 右 三 角 印 赤く する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
配列 リスト 散布 図 カラー コード 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c=rgb)
オブジェクト メモリビュー	memoryview(obj)
折れ線 グラフ 描画 し その 色 ダーク ブルー 設定 する	plt.plot(データ列, データ列2, color='darkblue')
日付 データ 木曜日 どう 調べる	aDate.weekday() == 3
文字 列 先頭 余分 な 空白 取り除く	s.lstrip()
実数 数 除する	x / y
データ フレーム 重複 する 行 残さ ず 消す	df.drop_duplicates(keep=False)
カウンタ 同士 交わり 求める	aCounter & aCounter2
多い 順番 カウンタ 列挙 する	aCounter.most_common()
リスト ヒストグラム 使っ 可視 化 する	plt.hist(aList)
二つ 文字 列 タブ 区切っ プリント する	print(value, value2, sep='\t')
リスト 配列 散布 図 描画 する	plt.scatter(xdata, ydata)
カラー コード 星 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c=rgb)
黒い 上 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='k')
データ フレーム 名前 リスト 指定 さ れ た 列 削除 する	df.drop(columns, axis=1)
プロット 色 全般 的 色 差別 なく する	sns.set(pallete='colorblind')
データ 列 最大 値 埋める	ds.fillna(ds.max())
二つ 辞書 階層 化 する	collections.ChainMap(aDict, aDict2)
整数 リスト どれ	n in aList
リスト 数列 色 差別 ない グラフ 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
リスト イテラブル ペア リスト 変換 する	itertools.zip_longest(iterable, iterable2)
データ フレーム リスト カラム 位 丸め 整数 型 する	df[aList].round(-1).astype(int)
ベクトル 次元 数	aArray.ndim
分子 分母 有理数 作る	fractions.Fraction(numerator=n, denominator=m)
大きい テスト する	n > n2
リスト 文字 列 リスト 変換 し 空白 連結 する	' '.join(map(str, iterable))
データ 列 データ 列 破線 描画 し その 色 暗い 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
辞書 チェーン マップ 変換 する	collections.ChainMap(aDict)
ヒストグラム 描画 し 色 マゼンタ 設定 する	plt.hist(データ列, color='magenta')
カラム 各 データ 値 出現 回数 求める	df[col].value_counts()
リスト リスト 破線 グラフ 描画 し その 色 淡い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
数列 リスト 明るい グラフ 描画 し 線 幅 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
グラフ パレット 全般 的 淡く する	sns.set(pallete='muted')
折れ線 グラフ 描画 し その 色 ライト サーモン 設定 する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線 グラフ 三角 印 線 幅 変更 する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
文字 列 改行 分割 し 文字 列 リスト 変換 する	s.splitlines()
文字 列 先頭 使う	s[0]
文字 列 全体 大文字 小文字 無視 し 正規 表現 マッチ さ せる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
ヒストグラム 色 スカイ ブルー 設定 する	plt.hist(データ列, color='skyblue')
折れ線 グラフ 描画 し 色 カデット ブルー 設定 する	plt.plot(データ列, データ列2, color='cadetblue')
ヒストグラム 描画 し その 色 ライト コーラル する	plt.hist(データ列, color='lightcoral')
行列 間 要素 ごと 最大公約数	np.gcd(aArray, aArray2)
折れ線 グラフ 色 ホワイト 指定 する	plt.plot(データ列, データ列2, color='white')
オプション タブ 区切り 使用 する	sep = '\t'
折れ線 グラフ 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightgreen')
ヒストグラム 色 オレンジ 設定 する	plt.hist(データ列, color='orange')
小さい 順 データ フレーム 列 列 用い ソート し 更新 する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データ フレーム 列 要約 統計 量	df[col].describe()
オプション ディープスカイブルー グラフ 色 指定 する	color = 'deepskyblue'
色 差別 ない 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
グラフ 描画 淡い 色 使う	sns.set(pallete='muted')
ミディアムオーキッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='mediumorchid')
真紅 色 ヒストグラム 描画 する	plt.hist(データ列, color='crimson')
散布 図 赤色 大 バツ マーカー 用いる	plt.plot(xdata, ydata, marker='X', c='r')
グラフ カラー パレット 淡く する	sns.set(pallete='muted')
もしくは 調べる	x == 1 or x == 2
イテラブル 重複 取り除く	set(iterable)
ファイル 名 ファイル 調べる	filename.endswith('.csv')
オプション シエナ 色 変更 する	color = 'sienna'
文字 列 平仮名 調べる	('ぁ' <= ch <= 'ん')
実行 結果 黄色 する	f'\033[33m{value}\033[0m'
データ フレーム 列 と列 ドロップ する	df.drop([column, column2], axis=1)
ヒストグラム 色 ミディアムシアグリーン 設定 する	plt.hist(データ列, color='mediumseagreen')
オプション グラフ 色 青 緑 設定 する	color = 'teal'
ヒストグラム 描画 し その 色 ダークターコイズ 指定 する	plt.hist(データ列, color='darkturquoise')
オプション 文字 コード 付き セット する	encoding = 'utf_8_sig'
パステル 調 折れ線 グラフ 色 赤色 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
カラー コード 棒グラフ 色 設定 する	plt.bar(ラベル列, データ列, color=rgb)
折れ線 ラベル 付ける	plt.plot(xdata, ydata, label=untitled)
折れ線 グラフ 透明 度 設定 する	plt.plot(xdata, ydata, alpha=alpha)
二つ 関係 真 部分 集合 調べる	aSet < aSet2
フォーマット データ 列 日付 データ 変換 する	pd.to_datetime(ds, format=fmt)
文字 列 示す 文字 コード 既存 ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding=s)
文字 列 部分 文字 列 区切っ 文字 列 リスト する	s.split(sub)
カウンタ シーケンス カウント し 引く	aCounter.subtract(iterable)
折れ線 グラフ 描画 し 色 淡い ピンク色 設定 する	plt.plot(データ列, データ列2, color='lightpink')
文字 列 空白 区切っ 文字 列 リスト 変換 する	s.split()
折れ線 グラフ 色 グリーン 設定 する	plt.plot(データ列, データ列2, color='green')
赤い 淡い 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
オプション グラフ 色 チョコレート 設定 する	color = 'chocolate'
オプション パールバイオレットレッド 色 使う	color = 'palevioletred'
フォーマット データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], format=fmt)
ゲインズボロ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='gainsboro')
行列 同じ 大き さ 空 行列 作成 する	np.empty_like(aArray)
二つ 文字 列 文字 列 区切っ プリント する	print(value, value2, sep=s)
淡い グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
データ フレーム ランダム 一行 取り出す	df.sample()
非 小文字 文字 列 中 含ま れる	any(not c.islower() for c in s)
ヒストグラム 描画 し その 色 ホット ピンク 設定 する	plt.hist(データ列, color='hotpink')
文字 列 全て 英数字 確認 する	s.isalnum()
折れ線 グラフ 描画 し その 色 ライト コーラル 設定 する	plt.plot(データ列, データ列2, color='lightcoral')
リスト 配列 散布 図 黒い 左 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='<', c='k')
データ フレーム 二つ 列 値 グループ 化 する	df.groupby(['A', 'B'])
深紅 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='crimson')
モジュール 検索 する パス	sys.path
線 グラフ 描画 し 色 サーモン セット する	plt.plot(データ列, データ列2, color='salmon')
ヒストグラム 色 ミディアムブルー 設定 する	plt.hist(データ列, color='mediumblue')
オプション グラフ 色 ダークシアグリーン 変更 する	color = 'darkseagreen'
ミディアムパープル 色 ヒストグラム 描画 する	plt.hist(データ列, color='mediumpurple')
ふたつ 関係 真 サブ セット どう	aSet < aSet2
文字 列 走査 し 正規 表現 大文字 小文字 無視 し マッチ する 見る	re.search(pattern, s, flags=re.IGNORECASE)
データ フレーム 列 各 データ 値 出現 回数 求める	df[col].value_counts()
データ フレーム 中 列 と列 重複 あれ 削除 する	df.drop_duplicates(subset=[column, column2])
プロット 描画 パステル 調 色 用いる	sns.set(pallete='pastel')
赤い 大 バツ マーカー リスト イテラブル 散布 図 描画 する	plt.plot(xdata, ydata, marker='X', c='r')
データ 列 十 位 四捨五入 する	ds.round(-1)
データ 列 値 変更 する	ds.replace(ValueMap)
標準 入力 行 読み込む	sys.stdin.readline()
折れ線 グラフ 描画 し その 色 ミディアムパープル 設定 する	plt.plot(データ列, データ列2, color='mediumpurple')
オプション 区切り 使わ ない	sep = ''
データ フレーム 読む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
データ フレーム カラム 未 入力 値 最小 値 置換 する	df[col].fillna(df[col].min())
文字 列 部分 文字 列 終了 する 調べる	s.endswith(sub)
リスト リスト 破線 グラフ 描画 し その 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
ヒストグラム 色 ライト シアン 変更 する	plt.hist(データ列, color='lightcyan')
データ 列 未 入力 値 平均 値 埋める	ds.fillna(ds.mean())
データ フレーム 各 次元 大き さ 調べる	df.shape
列 累積 し た 列	itertools.accumulate(iterable, operator.mul)
グラフ 中 日本語 フォント 利用 可能 する	sns.set(font='IPAexGothic')
リスト 一つ 調べる	n in aList
文字 列 文字 列 リスト いづれ 調べる	s in aStringList
等しい	n == n2
折れ線 グラフ 描画 し 色 ダークオーキッド 指定 する	plt.plot(データ列, データ列2, color='darkorchid')
データ フレーム カラム 空文字 ドロップ する	df[col].replace('', np.nan).dropna()
オブジェクト フィールド 存在 する 確認 する	hasattr(obj, プロパティ名)
オプション グラフ 色 ミッドナイト ブルー 指定 する	color = 'midnightblue'
オプション シャルトリューズ 色 使う	color = 'chartreuse'
複数 行 対応 パターン 文字 列 先頭 マッチ さ せる	re.match(pattern, s, flags=re.MULTILINE)
データ フレーム 形式 ファイル 読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
プログラム 実行 異常 終了 する	sys.exit(1)
小数点 数	math.cos(x)
ダークゴールデンロッド ヒストグラム 色 設定 する	plt.hist(データ列, color='darkgoldenrod')
カーキ 色 ヒストグラム 描画 する	plt.hist(データ列, color='khaki')
ヒストグラム 色 ダーク グレー 変更 する	plt.hist(データ列, color='darkgray')
データ 列 未 入力 値 最大 値 設定 する	ds.fillna(ds.max())
データ 列 欠損 値 中央 値 埋める	ds.fillna(ds.median())
真 なら ない シーケンス 要素	itertools.dropwhile(predicateFunc, iterable)
折れ線 グラフ 描画 し その 色 ライト ブルー 設定 する	plt.plot(データ列, データ列2, color='lightblue')
オプション グラフ 色 タン 設定 する	color = 'tan'
日付 データ 火曜日 調べる	aDate.weekday() == 1
折れ線 グラフ 左 三 角 マーカー 黄色く する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
文字 列 両端 空白 取り除く	s.strip()
カウンタ 全数	aCounter.total()
ヒストグラム 描画 し その 色 ライム グリーン 変更 する	plt.hist(データ列, color='limegreen')
既存 配列 ベース し 全 要素 初期 値 配列 作成 する	np.full_like(aArray, 初期値)
オプション トマト 使用 する	color = 'tomato'
文字 列 赤色 プリント できる 文字 列 変換 する	f'\033[31m{value}\033[0m'
二つ データ フレーム 縦 一つ する	pd.concat([df, df2], axis=0)
二つ 変数 順に プリント する	print(value, value2)
データ フレーム 型 取り出す	df.select_dtypes(ty)
データ 列 中央 値 ビンニング する	pd.qcut(ds, 2)
コマンド 引数 列挙 する	sys.argv[1:]
リスト 末尾 要素 取り除く	aList.pop()
明るい グラフ 数列 データ 列 プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
オプション 線 種 破線 変更 する	linestyle = 'dashed'
三 ビット 整数 型 ゼロ 埋め さ れ た 配列 作る	np.zeros(要素数, dtype=np.int16)
データ 列 データ 列 散布 図 描画 し 右 三 角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='>', c=rgb)
倍数	n % 5 == 0
オプション グラフ 色 ミディアムシアグリーン 設定 する	color = 'mediumseagreen'
和	n + n2
キュー 空	len(deq) == 0
データ フレーム 列 位 四捨五入 する	df[col].round(-2)
文字 列 黄色 プリント できる 文字 列 変換 する	f'\033[33m{value}\033[0m'
折れ線 グラフ 描画 し 印 印 する	plt.plot(データ列, データ列2, marker='^')
ヒストグラム 描画 し その 色 ダーク オリーブ グリーン 設定 する	plt.hist(データ列, color='darkolivegreen')
重複 し た 行 抽出 する	df[df.duplicated(keep=False)]
文字 列 タプル 要素 で ない 調べる	element not in aTuple
ヒストグラム 色 パールゴールデンロッド 変更 する	plt.hist(データ列, color='palegoldenrod')
散布 図 赤い 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='r')
カウンタ 最 頻出 な 値	aCounter.most_common()[0]
文字 列 全て 大文字	s.isupper()
スノー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='snow')
ヒストグラム 描画 し その 色 イエロー グリーン 設定 する	plt.hist(データ列, color='yellowgreen')
データ 列 何 曜日 見る	ds.dt.weekday_name
値 太字 プリント する	print(f'\033[1m{value}\033[0m')
集合 全て 要素 取り除く	aSet.clear()
ヒストグラム 描画 し 色 ライトグリーン 指定 する	plt.hist(データ列, color='lightseagreen')
改行 文字 列 区切り 文字 列 リスト 変換 する	s.splitlines()
最大 長 双方向 キュー 作る	collections.deque(maxlen=n)
データ フレーム 列 正規 表現 まとめ 置き換える	df[col].replace(pattern, repl, regex=True)
複数 カラム 散布 図 一 度 描画 する	sns.pairplot(df[[column, column2, column3]])
文字 列 正規 表現 マッチ さ せる	re.match(pattern, s)
折れ線 グラフ 赤い 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線 グラフ 印 大 バツ する	plt.plot(データ列, データ列2, marker='X')
折れ線 グラフ 描画 し その 色 コーンズシルク 指定 する	plt.plot(データ列, データ列2, color='cornsilk')
ヒストグラム 描画 し 色 ダーク サーモン する	plt.hist(データ列, color='darksalmon')
日付 時刻 データ 時間 減算 する	aDatetime - datetime.timedelta(hours=n)
自分 自身 モジュール	sys.modules[__name__]
文字 列 開始 位置 終了 位置 範囲 部分 文字 列 含ま れる 調べる	s.find(sub, start, end) != -1
文字 列 中 大文字 小文字 する	s.lower()
線 グラフ 描画 し 色 オリベドラブ 設定 する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線 グラフ 色 パープル 変更 する	plt.plot(データ列, データ列2, color='purple')
ファイル 存在 する	os.path.exists(filepath)
データ フレーム カラム 何 分 確認 する	df[col].dt.minute
等しい 値	None
小数点 数 二 進 対数	math.log2(x)
数列 座標 数列 横 軸 指定 し 折れ線 グラフ プロット する	plt.plot(xdata, ydata)
実数 乗 求める	x ** n
実数 斜辺	math.hypot(x, y)
リスト リスト 濃い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
データ フレーム カラム 分 位 数	df[col].quantile(percent/100)
データ 列 折れ線 グラフ 描画 し 印 四角 する	plt.plot(データ列, データ列2, marker='s')
折れ線 グラフ 描画 し その 色 トマト 変更 する	plt.plot(データ列, データ列2, color='tomato')
集合 更新 不能 な 集合 変換 する	frozenset(aSet)
ヒストグラム 描画 し その 色 ミディアムブルー する	plt.hist(データ列, color='mediumblue')
ファイル ファイル 名 調べる	filename.endswith('.json')
オプション グラフ 色 インディゴ 設定 する	color = 'indigo'
第 引数 ファイル 名前	sys.argv[1]
折れ線 グラフ 描画 し その 色 レベッカパープル 設定 する	plt.plot(データ列, データ列2, color='rebeccapurple')
タイム スタンプ 使う	import time
個 整数 リスト	list(range(n))
ヒストグラム 描画 し その 色 サンディーブラウン 設定 する	plt.hist(データ列, color='sandybrown')
要素 辞書 値 含ま れ い ない	element not in aDict.values()
データ フレーム 各 グループ 標準 偏差	df.groupby(column).std()
線 グラフ 描画 し 色 ディムグレー 設定 する	plt.plot(データ列, データ列2, color='dimgray')
折れ線 グラフ 描画 し 色 ダーク グレー 指定 する	plt.plot(データ列, データ列2, color='darkgray')
折れ線 グラフ 色 タン セット する	plt.plot(データ列, データ列2, color='tan')
文字 列 中 ケース 無視 し パターン 全て マッチ 求める	re.findall(pattern, s, flags=re.IGNORECASE)
オプション 文字 コード 使う	encoding = text
データ フレーム 中 存在 する 日付 データ 文字 列 合計 数える	df.isin([value, value2]).sum()
データ フレーム 中 列 と列 重複 あれ 取り除く	df.drop_duplicates(subset=column)
エポック 秒 データ 列 日付 データ 変換 する	pd.to_datetime(ds, unit='s', utc=True)
タプル 最後 番目 以前 部分 取り出す	aTuple[:-n]
変数 マイナス 無限 大 近づく 場合 数式 極限 値 算出 する	sympy.limit(e, z, -oo)
ファイル バイナリ 用 オープン し する	f = open(filepath, mode='rb')
文字 列 末尾 タブ 消す	s.rstrip('\t')
文字 列 右側 空白 取り除く	s.rstrip(' ')
タプル 反転 する	reversed(aTuple)
プロット 凡例 位置 指定 する	plt.legend(loc=(x, y))
明るい 折れ線 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
データ 列 中 存在 する 文字 列 合計 求める	ds.isin([value]).sum()
データ フレーム 列 並べ 先頭 来る よう する	df.sort_values(by='A', na_position='first')
折れ線 グラフ マーカー 印 する	plt.plot(データ列, データ列2, marker='v')
セット エラー なく 要素 取り除く	aSet.discard(element)
ヒストグラム 描画 し 色 ダークスラテグレー 設定 する	plt.hist(データ列, color='darkslategray')
イテラブル 新しい カウンタ 作成 する	collections.Counter(iterable)
オプション 暗い 赤色 使う	color = 'darkred'
オプション スレート ブルー グラフ 色 設定 する	color = 'slateblue'
文字 列 白色 プリント する	print(f'\033[37m{value}\033[0m')
データ フレーム カラム 何 曜日 見る	df[col].dt.weekday_name
グラフ パステル 調 する	sns.set(pallete='pastel')
ヒストグラム 色 ダーク グレー 設定 する	plt.hist(データ列, color='darkgray')
データ フレーム リスト 列 欠損 値 最小 値 変更 する	df[aList].fillna(df[aList].min())
リスト 横 軸 指定 し 折れ線 グラフ 描画 する	plt.plot(range(len(xdata)), xdata)
列 等量 個 ビニング する	pd.qcut(ds, n)
データ フレーム 各 列 毎 グループ 化 し 文字 列 グループ 個数 求める	df.groupby(column).size()[s]
データ フレーム 値 正規 表現 変更 する	df.replace(pattern, repl, regex=True)
ガンマ 関数 値	math.gamma(x)
折れ線 グラフ 色 シャルトリューズ 指定 する	plt.plot(データ列, データ列2, color='chartreuse')
シーケンス イミュータブル な セット	frozenset(iterable)
オプション エン コーディング 設定 する	encoding = 'shift_jis'
データ フレーム 列 集計 し 分散 求める	df.groupby(column).var()
線 グラフ 描画 し その 色 スラグレー 設定 する	plt.plot(データ列, データ列2, color='slategrey')
文字 列 空白 文字	s.isspace()
文字 列 太 文字 プリント できる 文字 列 する	f'\033[1m{value}\033[0m'
配列 次元 行 変形 する	aArray.reshape(1, -1)
折れ線 グラフ 描画 し その 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightgreen')
オプション スチール ブルー 色 使う	color = 'steelblue'
パステル 調 色 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, c='pastel')
オプション ダーク カーキ 色 使用 する	color = 'darkkhaki'
折れ線 グラフ 色 グレー 設定 する	plt.plot(データ列, データ列2, color='grey')
こんにちは 世界 出力 する	print('Hello World')
小さい	n < n2
データ 列 リスト 散布 図 描画 し ダイアモンドマーカー 色 カラー コード 変更 する	plt.plot(xdata, ydata, marker='D', c=rgb)
日付 データ 週間 分 減算 する	aDate - datetime.timedelta(weeks=n)
集合 別 集合 要素 全て 取り除く	aSet.difference_update(aSet2)
データ 列 未 入力 値 直後 値 指定 する	ds.fillna(method='bfill')
日付 データ 日 分 加算 する	aDate + datetime.timedelta(days=n)
カウンタ 値 増やす	aCounter[element] += 1
棒グラフ 積み上げ する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
項目 名 マップ 存在 し ない 時 要素 追加 する	aDict.setdefault(key, element)
アリス ブルー ヒストグラム 色 する	plt.hist(データ列, color='aliceblue')
散布 図 赤い 大 バツ マーカー 描く	plt.plot(xdata, ydata, marker='X', c='r')
変数 名 キー 辞書	dict(name=element)
線 グラフ 描画 し 色 コーンズシルク 変更 する	plt.plot(データ列, データ列2, color='cornsilk')
マップ 内部 複製 する	{k: copy.copy(v) for k, v in aDict.items()}
データ フレーム リスト 列 相関 行列	df[aList].corr()
データ フレーム 欠損 値 後 行 値 変更 する	df.fillna(method='bfill')
データ フレーム 列 文字 列 含ま れる 行 取り出す	df[df[column].str.contains(s)]
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 最大 値 算出 する	df.groupby([column, column2], as_index=False).max()
折れ線 グラフ 下 三角 マーカー 緑色 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
小数点 数 自然 対数	math.log(x)
オブジェクト イテレータ	iter(obj)
クラス 名前 付き タプル 調べる	issubclass(C, tuple)
スピアマン 相関 係数 データ フレーム 相関 行列	df.corr(method='spearman')
折れ線 グラフ 色 ホット ピンク 設定 する	plt.plot(データ列, データ列2, color='hotpink')
二つ 列 値 データ フレーム グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(['A', 'B'])]
ヒストグラム 区間 描画 する	plt.hist(データ列, range=(start, end))
ファイル バイナリ モード オープン する	open(filepath, mode='rb')
オプション グラフ 色 ミント クリーム 設定 する	color = 'mintcream'
データ フレーム 列 欠損 値 最 頻 値 埋める	df[col].fillna(df[col].mode().iloc[0])
リスト 番目 文字 列 挿入 する	aList.insert(n, element)
文字 列 先頭 空白 取り除く	s.lstrip()
列 キー し 二つ データ フレーム 内部 結合 する	pd.merge(df, df2, on=column, how='inner')
オプション 菱形 マーカー 描画 する	marker = 'D'
線 グラフ 描画 し 色 ライトゴールドロディイエロー 変更 する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
列 集合 追加 する	aSet.update(iterable)
文字 列 色 リスト リスト 折れ線 グラフ プロット する	plt.plot(xdata, ydata, color=s)
オプション グラフ 色 暗い 赤 指定 する	color = 'darkred'
ヒストグラム 実線 用い 描画 する	plt.hist(データ列, linestyle='solid')
オプション ロージーブラウン グラフ 色 設定 する	color = 'rosybrown'
折れ線 グラフ バツ マーカー 黄色く する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
二つ データ フレーム 異なる 列 キー 左 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
データ フレーム 位 丸め 整数 する	df.round(-3).astype(int)
マップ 項目 名 列挙 する	aDict.keys()
リスト リスト 散布 図 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>')
フローラルホワイト ヒストグラム 色 設定 する	plt.hist(データ列, color='floralwhite')
線 グラフ 描画 し その 色 サドル ブラウン 指定 する	plt.plot(データ列, データ列2, color='saddlebrown')
データ フレーム カラム 時	df[col].dt.hour
データ 列 四捨五入 し 整数 する	ds.round().astype(int)
日付 時刻 データ 日付 時刻 データ 前	aDatetime < aDatetime2
データ 列 欠損 値 最小 値 埋める	ds.fillna(ds.min())
実数 逆 正接 求める	math.atan(x)
縦 方向 二つ データ フレーム 合体 さ せる	pd.concat([df, df2], axis=0)
オプション グラフ 色 淡い 茶色 設定 する	color = 'tan'
列 イテラブル 続ける	itertools.chain(iterable, iterable2)
文字 列 中 部分 文字 列 含ま れる 調べる	sub in s
範囲	range(n, n2)
データ フレーム 列 大きく 小さい 行 抽出 する	df[(x < df[column]) & (df[column] < x2)]
実数 浮動 小数点 数 割っ 切り捨てる	x // y
数値 プリント する	print(value, value2, value3)
集合 すべて 要素 別 集合 含ま れる 調べる	aSet.issubset(aSet2)
折れ線 グラフ 描画 し その 色 ラベンダー 設定 する	plt.plot(データ列, データ列2, color='lavender')
ダーク オレンジ 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkorange')
破線 色 色 差別 ない 変更 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
数列 イテラブル 暗い 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
今日 月曜日 調べる	datetime.datetime.today().weekday() == 0
値 集合 取り除く	aSet.remove(element)
文字 列 タプル 要素 で ない どう	element not in aTuple
値 集合 メンバー どう	element in aSet
タイムスタンプデータ 土曜日	aDatetime.weekday() == 5
キュー 中 数値 インデックス	deq.index(element)
リスト リスト 散布 図 淡い 色 描画 する	plt.plot(xdata, ydata, c='muted')
データ フレーム 列 未 入力 値 最小 値 設定 する	df[col].fillna(df[col].min())
オプション オリーブ グラフ 色 設定 する	color = 'olive'
折れ線 グラフ 色 インディゴ 変更 する	plt.plot(データ列, データ列2, color='indigo')
横 棒グラフ 色 カラー コード する	plt.barh(ラベル列, データ列, color=rgb)
データ フレーム 表示 する とき 折り返し オフ 設定 する	pd.set_option('expand_frame_repr', False)
折れ線 グラフ 描画 し その 色 オールド レース 指定 する	plt.plot(データ列, データ列2, color='oldlace')
二つ オブジェクト 等しい 調べる	obj == obj2
データ フレーム リスト カラム 分散 求める	df[aList].var()
折れ線 グラフ 描画 し 色 パープル 変更 する	plt.plot(データ列, データ列2, color='purple')
線 グラフ 描画 し その 色 ロージーブラウン 設定 する	plt.plot(データ列, データ列2, color='rosybrown')
二つ 集合 共通 要素 持た ない どう テスト する	aSet.isdisjoint(aSet2)
オプション 改行 コード 設定 する	newline = '\n'
データ フレーム カラム モード	df[col].mode()
データ フレーム ファイル 保存 する	df.to_csv(filename, sep='\t')
文字 列 中 部分 文字 列 いくつ 存在 する カウント する	s.count(sub)
タプル キー 値 エラー なく 得る	aDict.get(key, None)
要素 一つ タプル 得る	(element,)
イテラブル 文字 列 リスト 変換 し タブ つなげる	'\t'.join(map(str, iterable))
整数 進 表現 見る	hex(n)
イテラブル 重複 なく 個 ランダム 選ぶ	random.sample(iterable, k=n)
マッピング 要素 キー 加える	aDict[key] = element
列 値 データ フレーム グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby('A')]
データ 列 折れ線 グラフ 描画 し マーカー 印 する	plt.plot(データ列, データ列2, marker='v')
データ 列 値	ds.isna()
リスト 合計 値	sum(aList)
データ フレーム どの 値 頻出 確認 する	df.mode()
濃い 描画 し 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
オプション ディープスカイブルー グラフ 色 変更 する	color = 'deepskyblue'
データ 列 何時 調べる	ds.dt.hour
イテラブル リスト 散布 図 黒い 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c='k')
配列 行 ごと 平均	np.mean(aArray, axis=1)
データ 列 中 文字 列 存在 する どう	ds.isin([value])
リスト リスト 散布 図 ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D')
文字 列 内 ひとつ 英字 含ま れる どう	any(c.isalpha() for c in s)
データ フレーム リスト カラム 欠損 値 平均 値 設定 する	df[aList].fillna(df[aList].mean())
既存 ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding='euc_jp')
折れ線 グラフ 色 チョコレート 設定 する	plt.plot(データ列, データ列2, color='chocolate')
配列 平坦 化 する	aArray.flatten()
両端 キュー 要素 右 個 分 ロー テンション する	deq.rotate(n)
オプション ラベンダー グラフ 色 設定 する	color = 'lavender'
オプション グリーン イエロー グラフ 色 指定 する	color = 'greenyellow'
保存 する カンマ 区切り ファイル 小数点 以下 桁 数 設定 する	df.to_csv(filename, float_format='%.3f')
線 グラフ 描画 し 色 ダークスラテグレー 設定 する	plt.plot(データ列, データ列2, color='darkslategray')
列 分散	ds.var()
折れ線 グラフ 描画 し 色 茶色 指定 する	plt.plot(データ列, データ列2, color='brown')
オブジェクト 数値 調べる	isinstance(obj, (int,float))
文字 列 中 複数 行 対応 正規 表現 すべて マッチ 見る	re.findall(pattern, s, flags=re.MULTILINE)
データ フレーム 列 列 相関 行列 ヒートマップ 描画 する	sns.heatmap(df[[column, column2]].corr())
整数 ゼロ 埋め し た 文字 列 する	str(n).zfill(文字列幅)
ヒストグラム 色 ダークゴールデンロッド 設定 する	plt.hist(データ列, color='darkgoldenrod')
オプション ホット ピンク グラフ 色 セット する	color = 'hotpink'
折れ線 グラフ マーカー する	plt.plot(データ列, データ列2, marker='^')
折れ線 グラフ サイズ 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
日付 時刻 データ 何 月 知る	aDatetime.month
折れ線 グラフ 大 バツ マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線 グラフ ポイント マーカー 使う	plt.plot(データ列, データ列2, marker='.')
折れ線 グラフ 色 ライト ブルー 変更 する	plt.plot(データ列, データ列2, color='lightblue')
柱状 図 描画 し 正規 化 する	plt.hist(データ列, density=True)
イテラブル データ 列 散布 図 文字 列 データ ラベル 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
マップ 項目 名 一覧 得る	list(aDict)
データ フレーム 正規 分布 どの 程度 尖っ いる 見る	df.skew()
データ フレーム リスト 列 位 丸め 整数 型 する	df[aList].round(-2).astype(int)
実線 ヒストグラム 線 スタイル 設定 する	plt.hist(データ列, linestyle='solid')
辞書 キー 一覧	aDict.keys()
辞書 キー その 値 ペア 取り出す	aDict.items()
リスト データ 列 用い パステル 調 の 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
オプション ディープスカイブルー 色 使う	color = 'deepskyblue'
データ フレーム 複数 列 ソート し 更新 する	df.sort_values(by=column, inplace=True)
ダークシアグリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkseagreen')
リスト 移り変わり 折れ線 プロット する	plt.plot(range(len(xdata)), xdata)
タプル コピー	dict(aDict)
線 グラフ 描画 し 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線 グラフ 色 スラグレー 設定 する	plt.plot(データ列, データ列2, color='slategrey')
実行 結果 青色 プリント できる 文字 列 する	f'\033[34m{value}\033[0m'
日付 時刻 データ 火曜日 確認 する	aDatetime.weekday() == 1
要素 マップ 値 含ま れ いる	element in aDict.values()
オプション グリーン イエロー 色 使う	color = 'greenyellow'
表 データ 複数 列 破壊 的 並べる	df.sort_values(by=column, inplace=True)
整数 分の 一 する	n //= n2
折れ線 グラフ 右 三 角 マーカー 赤く する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
線 グラフ 色 ブランチドアーモンド 設定 する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線 グラフ 描画 し その 色 オレンジ レッド 指定 する	plt.plot(データ列, データ列2, color='orangered')
ヒストグラム 色 リネン 設定 する	plt.hist(データ列, color='linen')
両端 キュー 右側 イテラブル 各 要素 追加 する	deq.extend(iterable)
オプション ターコイズ グラフ 色 設定 する	color = 'turquoise'
折れ線 グラフ 緑色 ポイント マーカー 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
ファイル 書き込み 用 オープン する	open(filepath, mode='w', encoding='euc_jp')
日付 データ 日付 データ 早い 調べる	aDate < aDate2
整数 セット ひとつ	n in aSet
ファイル 読み込む	pd.read_csv(filename, sep='\t')
文字 列 内 ひとつ 大文字 含ま れる 調べる	any(c.isupper() for c in s)
リスト 四 分 位 数 ごと ビニング する	pd.qcut(aList, 4)
ヒストグラム 色 パレットトルコイズ セット する	plt.hist(データ列, color='paleturquoise')
辞書 キー その 項目 列挙 する	aDict.items()
データ フレーム リスト カラム 中 日付 データ ある どう	df[aList].isin([value])
折れ線 グラフ 黄色い 右 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
リスト 変化 折れ線 グラフ 描画 する	plt.plot(range(len(xdata)), xdata)
行列 行 ごと 最大 値	np.max(aArray, axis=1)
破線 グラフ 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
ヒストグラム 描画 し その 色 ブランチドアーモンド セット する	plt.hist(データ列, color='blanchedalmond')
データ フレーム ファイル 付き 保存 する	df.to_csv(filename, encoding='utf_8_sig')
線 グラフ 描画 し 色 青 設定 する	plt.plot(データ列, データ列2, color='blue')
リスト リスト パステル 調 の 描い 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
折れ線 グラフ 線 幅 クロス マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
データ フレーム 列 昇順 ソート し 更新 する	df.sort_values(by='A', ascending=True, inplace=True)
文字 列 最後 部分 文字 列 二分 し 前半 文字 列 使う	s.rpartition(sub)[0]
配列 リスト 散布 図 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X')
空 セット	set()
ポイント マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='.')
オプション グリーン イエロー 色 用いる	color = 'greenyellow'
データ フレーム リスト 列 標本 標準 偏差	df[aList].std()
散布 図 下 三角 マーカー 使う	plt.plot(xdata, ydata, marker='v')
折れ線 グラフ 赤い ダイアモンドマーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線 グラフ 描画 し その 色 ミディアムスプリンググリーン 設定 する	plt.plot(データ列, データ列2, color='mediumspringgreen')
文字 列 太字 プリント する	print(f'\033[1m{value}\033[0m')
バイナリ モード ファイル 開く	open(filepath, mode='rb')
データ フレーム 各 列 毎 グループ 化 し 列 最大 値 求める	df.groupby(column)[column2].max()
データ フレーム リスト カラム 最小 値 埋める	df[aList].fillna(df[aList].min())
暗い 色 マーカー 散布 図 重なり 見やすく プロット する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
データ フレーム カラム 列 ヒートマップ 描画 する	sns.heatmap(df[[column, column2]].corr())
データ 列 何 日 見る	ds.dt.day
データ フレーム 直後 値 置換 する	df.fillna(method='bfill')
ケン ドール 相関 係数 データ フレーム 相関 行列	df.corr(method='kendall')
文字 列 シンボル 化 し 変数 する	z = sympy.Symbol(s)
オプション 色 スレート ブルー 指定 する	color = 'slateblue'
グラフ 用いる タイトル 設定 する	plt.title(untitled)
行列 演算 行う	import numpy as np
星 マーカー 散布 図 使用 する	plt.plot(xdata, ydata, marker='*')
ベクトル 累積 和	np.cumsum(aArray)
名前 シート エクセルデータファイル データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
数式 簡単 化 行う	sympy.sympify(e)
オプション 先頭 カラム インデックス セット する	index_col = 0
データ フレーム リスト カラム 欠損 値 パーセンタイル 設定 する	df[aList].fillna(df[aList].median())
ファイル バイト 読み込む	f.read(n)
タブ 区切り ファイル データ フレーム 読む	pd.read_csv(filename, sep='\t')
リスト リスト 散布 図 描画 し マーカー 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, c='pastel')
ヒストグラム 色 コーンフラワーブルー セット する	plt.hist(データ列, color='cornflowerblue')
折れ線 グラフ 描画 し その 色 ダーク バイオレット 設定 する	plt.plot(データ列, データ列2, color='darkviolet')
線 グラフ 描画 し その 色 ライトスチールブルー 設定 する	plt.plot(データ列, データ列2, color='lightsteelblue')
日付 時刻 データ 週間 分 加算 する	aDatetime + datetime.timedelta(weeks=n)
個 数値 イテラブル	range(n)
度数 分布 図 データ フレーム 列 可視 化 する	plt.hist(df[column])
ヒストグラム 色 アリスブルー 設定 する	plt.hist(データ列, color='aliceblue')
辞書 項目 名 一覧 得る	aDict.keys()
オプション マーカー バツ 変更 する	marker = 'x'
線 グラフ 描画 し 色 グリーン 設定 する	plt.plot(データ列, データ列2, color='green')
最初 カテゴリー 無視 し データ フレーム 列 ダミー 変数 変換 する	pd.get_dummies(df[column], drop_first=True)
データ フレーム 表示 する とき ヘッダー 行 右寄せ 設定 する	pd.set_option('colheader_justify', 'right')
文字 列 バイト 列 変換 する	s.encode(encoding='sjis', errors='ignore')
ひとつ 非 空白 文字 列 中 含ま れる 調べる	any(not c.isspace() for c in s)
線 グラフ 色 モカシン 指定 する	plt.plot(データ列, データ列2, color='moccasin')
オプション サーモン グラフ 色 指定 する	color = 'salmon'
文字 列 小文字 判定 する	s.islower()
データ フレーム カラム 選択 する	df[[column, column2, column3, column4]]
ヒストグラム 描画 し その 色 ダークオーキッド 変更 する	plt.hist(データ列, color='darkorchid')
カレントワーキングディレクトリ	os.getcwd()
リスト 数列 リスト 値 応じ 散布 図 色 変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
オプション スチール ブルー 色 用いる	color = 'steelblue'
淡い 色 マーカー 散布 図 使う	plt.plot(xdata, ydata, c='muted')
散布 図 カラー コード 丸 マーカー 使用 する	plt.plot(xdata, ydata, marker='o', c=rgb)
線 グラフ 描画 し 色 ホット ピンク 指定 する	plt.plot(データ列, データ列2, color='hotpink')
部分 文字 列 文字 列 中 探す	s.find(sub)
黒い ポイント マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c='k')
ヒストグラム 描画 し 色 ライム 指定 する	plt.hist(データ列, color='lime')
データ フレーム 行 範囲 指定 し 抽出 する	df[start:end]
データ フレーム カラム 欠損 値 設定 する	df[col].fillna(x)
データ フレーム 列 列 値 グループ 化 し 記述 統計 量 求める	df.groupby(['A', 'B']).describe()
値 出力 改行 し ない 行う	print(value, end='')
散布 図 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X')
実数 乗 する	x ** n
オプション ピーチ パフ グラフ 色 設定 する	color = 'peachpuff'
緑色 右 三 角 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
既存 行列 元 全 要素 ベクトル 作成 する	np.ones_like(aArray)
切り捨て 半分 する	n //= 2
異なる 列 キー つ 表 左 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
データ フレーム 列 昇順 ソート する	df.sort_values(by=column, ascending=True)
ヒストグラム 描画 し その 色 スラグレー 指定 する	plt.hist(データ列, color='slategrey')
ヒストグラム 描画 し 色 真紅 設定 する	plt.hist(データ列, color='crimson')
カラム 中 日付 データ 含ま れる 調べる	ds.isin([value])
文字 列 文字 列 リスト 含ま れる 調べる	s in aStringList
折れ線 グラフ 色 ブランチドアーモンド 設定 する	plt.plot(データ列, データ列2, color='blanchedalmond')
パステル 調 色 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, c='pastel')
数列 リスト 明るい グラフ 描い 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
配列 ヒストグラム 描く	plt.hist(aArray)
表 データ 複数 列 並べる	df.sort_values(by=column)
文字 列 内 ひとつ 大文字 含ま れる どう	any(c.isupper() for c in s)
タプル 項目 数	len(aDict)
折れ線 グラフ 描画 し 色 フクシア 指定 する	plt.plot(データ列, データ列2, color='fuchsia')
レモン シフォン ヒストグラム 色 設定 する	plt.hist(データ列, color='lemonchiffon')
データ フレーム 関数 値 分類 し 列挙 する	[(name, group) for name, group in df.groupby(関数)]
リスト イテラブル 散布 図 描画 し 色 暗い 設定 する	plt.plot(xdata, ydata, c='dark')
平均 カラム 置き換える	ds.fillna(ds.mean())
イテラブル タプル デカルト 積	itertools.product(iterable, iterable2)
部分 文字 列 文字 列 開始 位置 終了 位置 間 含ま れる	s.find(sub, start, end) != -1
オプション グラフ 色 マゼンタ 設定 する	color = 'magenta'
オプション 色 ライト シアン 指定 する	color = 'lightcyan'
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep=',')
十 六 進 数字 全部 求める	string.hexdigits
データ フレーム 列 整列 する	df.sort_values(by=column)
データ フレーム どの 程度 分散 し いる 見る	df.var()
折れ線 グラフ 描画 し 色 パールゴールデンロッド 設定 する	plt.plot(データ列, データ列2, color='palegoldenrod')
文字 列 全て 十 進 数字 どう	s.isdecimal()
正規 表現 あらかじめ コンパイル する	re.compile(pattern)
折れ線 グラフ 描画 し その 色 ミスティローズ する	plt.plot(データ列, データ列2, color='mistyrose')
データ フレーム グループ 化 し それぞれ 列 平均 値 求める	df.groupby(column)[column2].mean()
ファイル パス 入力 ストリーム 使う	open(filepath)
浮動 小数点 数 型 変換 する	float(x)
ヒストグラム 色 ホット ピンク 設定 する	plt.hist(データ列, color='hotpink')
リスト リスト 散布 図 黒い 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c='k')
データ フレーム 列 列 昇順 破壊 的 ソート する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
折れ線 グラフ 色 ミディアムシアグリーン 設定 する	plt.plot(データ列, データ列2, color='mediumseagreen')
データ フレーム 表示 する とき 表示 する 行 数 設定 する	pd.set_option('display.max_rows', n)
折れ線 ラベル 設定 する	plt.plot(xdata, ydata, label=untitled)
データ フレーム 第 三 四 分 位 数	df.quantile(0.75)
行列 演算 する	import numpy as np
オブジェクト リスト クラス	isinstance(obj, list)
つ 文字 列 ケース 無視 し 比較 する	s.casefold() < s2.casefold()
折れ線 グラフ 描画 し その 色 ロイヤル ブルー 指定 する	plt.plot(データ列, データ列2, color='royalblue')
赤い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
オプション グラフ 色 バリーウッド 設定 する	color = 'burlywood'
文字 列 タイトル ケース	s.istitle()
折れ線 グラフ 描画 し 色 スラグレー 指定 する	plt.plot(データ列, データ列2, color='slategray')
折れ線 グラフ 色 ダークターコイズ 指定 する	plt.plot(データ列, データ列2, color='darkturquoise')
フクシア 色 ヒストグラム 描画 する	plt.hist(データ列, color='fuchsia')
配列 リスト 色 差別 ない 色 折れ線 グラフ プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
配列 配列 破線 グラフ 描画 し 色 濃い 変更 する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リスト 内 要素 全て 真	all(aList)
データ フレーム 列 どの 程度 分散 し いる 見る	df[col].var()
折れ線 グラフ ポイント マーカー 黒く する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
年 月 日 時 タイム スタンプ 変換 する	datetime.datetime(year=year, month=month, day=day, hour=hour)
オプション インデックス 連 番 減らす	index_col = None
列 データ フレーム ソート し 先頭 来る よう する	df.sort_values(by=column, na_position='first')
オプション スラグレー 色 使用 する	color = 'slategray'
全 要素 初期 化 し た 行列	np.ones(行数, 列数, dtype=np.int)
割り切れる	n % 3 == 0
ティール 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='teal')
ファイル 文字 コード 開く	open(filepath, encoding=text)
本日 タイム スタンプ	datetime.datetime.today()
折れ線 グラフ 描画 し その 色 ラベンダー 設定 する	plt.plot(データ列, データ列2, color='lavender')
折れ線 グラフ 四角 マーカー サイズ 設定 する	plt.plot(データ列, データ列2, marker='s', markersize=n)
データ フレーム 中 列 個 ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
青色 パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
データ フレーム インデックス 降順 ソート する	df.sort_index(ascending=False)
データ 列 データ 列 散布 図 描画 し マーカー 右 三 角 変更 する	plt.plot(xdata, ydata, marker='>')
データ フレーム カラム どの 値 頻出 見る	df[col].mode()
データ フレーム 破壊 的 重複 し た データ 削除 する	df.drop_duplicates(inplace=True)
ヒストグラム 描画 し 合計 する	plt.hist(データ列, density=True)
データ フレーム 重複 削除 する	df.drop_duplicates()
赤い マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='^', c='r')
折れ線 グラフ 描画 し その 色 スラグレー 設定 する	plt.plot(データ列, データ列2, color='slategrey')
明るい 色 リスト ヒストグラム 描く	plt.hist(xdata, color='bright')
折れ線 グラフ 上 三 角 マーカー 赤色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
オプション マーカー 使う	marker = '^'
パウダー ブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='powderblue')
リスト 文字 列 変換 し 改行 結合 する	'\n'.join(map(str, iterable))
散布 図 明るい 色 マーカー 用いる	plt.plot(xdata, ydata, c='bright')
	n / n2
データ フレーム 列 小さい 順 ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
リスト リスト カラー コード 淡い 描画 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
行列 次元 数	aArray.ndim
データ フレーム カラム 何時 確認 する	df[col].dt.hour
文字 列 改行 分割 する	s.splitlines()
データ フレーム カラム 中 いくつ 欠損 値 ある 数える	df[col].isna().sum()
データ フレーム つ 列 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(['A', 'B'])]
乗	n ** n2
データ フレーム ファイル 付き 書き込む	df.to_csv(filename, encoding='utf_8_sig')
部分 文字 列 文字 列 開始 位置 終了 位置 範囲 含ま れ ない どう	s.find(sub, start, end) == -1
ヒストグラム 描画 し その 色 黄 緑 設定 する	plt.hist(データ列, color='chartreuse')
行列 行 ごと 最小	np.min(aArray, axis=1)
文字 列 中 大文字 小文字 無視 し 正規 表現 マッチ し た すべて 文字 列 リスト 変換 する	re.findall(pattern, s, flags=re.IGNORECASE)
リスト リスト 破線 グラフ プロット し その 色 明るい 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
文字 列 左端 部分 文字 列 取り除く	s.lstrip(sub)
リスト イテラブル 破線 グラフ 描画 し 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
リスト ビン 数 使っ ビン 分割 する	pd.cut(aList, n)
ライム グリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='limegreen')
実数 実数 割る	x / y
部分 文字 列 文字 列 開始 位置 番目 終了 位置 番目 間 存在 し ない どう 調べる	s.find(sub, start, end) == -1
文字 列 部分 文字 列 二分 する	s.partition(sub)
オブジェクト 数値	isinstance(obj, (int,float))
ヒストグラム 描画 し その 色 ゴールデン ロッド セット する	plt.hist(データ列, color='goldenrod')
散布 図 黒い 大 バツ マーカー 使う	plt.plot(xdata, ydata, marker='X', c='k')
年 月 日付 時刻	datetime.datetime(year=year, month=month, day=1)
クリムゾン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='crimson')
双方向 キュー 右 使う	deq[-1]
八 進 文字 列 整数 する	int(s, 8)
データ 列 各 データ 何 回 出現 する 見る	ds.value_counts()
列 値 データ フレーム グループ 化 し 要約 統計 量 計算 する	df.groupby('A').describe()
オプション ゲインズボロ 色 用いる	color = 'gainsboro'
ヒストグラム 描画 し その 色 ペルー 変更 する	plt.hist(データ列, color='peru')
データ 列 リスト 明るい グラフ プロット し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
オプション ダークゴールデンロッド 色 用いる	color = 'darkgoldenrod'
散布 図 カラー コード 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c=rgb)
データ フレーム 列 種類	df.info()
オプション シャルトリューズ 色 用いる	color = 'chartreuse'
オプション 茶色 色 用いる	color = 'brown'
散布 図 暗い 色 描画 する	plt.plot(xdata, ydata, c='dark')
ヒストグラム 描画 し その 色 ダーク ブルー 設定 する	plt.hist(データ列, color='darkblue')
使える 色 名 一覧 使う	matplotlib.colors.cnames
色 差別 ない 色 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, c='colorblind')
ダークターコイズ ヒストグラム 色 設定 する	plt.hist(データ列, color='darkturquoise')
イテラブル 集合 使う	set(iterable)
折れ線 グラフ 描画 し その 色 オレンジ 変更 する	plt.plot(データ列, データ列2, color='orange')
正規 表現 使用 する	import re
数式 変数 代入 する	e.subs(z, n)
ファイル バイナリ ストリーム オープン し する	f = open(filepath, mode='rb')
数式 積分 求める	sympy.integrate(e)
ファイル 書き込み 用 オープン する	open(filepath, mode='w', encoding='shift_jis')
データ フレーム リスト 列 欠損 値 直前 値 埋める	df[aList].fillna(method='ffill')
等量 分割 数 配列 分割 する	pd.qcut(aArray, n)
データ フレーム カラム 何 年 見る	df[col].dt.year
リスト リスト 散布 図 黒い 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c='k')
赤い 左 三 角 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c='r')
明るい 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
カウンタ 下位 列挙 する	aCounter.most_common()[:-n-1:-1]
パラメータ 近づく とき 数値 極限 値 求める	sympy.limit(e, z, 0)
折れ線 グラフ 三角 印 緑色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
イテラブル 文字 列 変換 し タブ 連結 する	'\t'.join(map(str, iterable))
オプション 線 種 点線 設定 する	linestyle = 'dotted'
リスト リスト 散布 図 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s')
シード 初期 化 する	random.seed()
線 グラフ 描画 し 色 青く する	plt.plot(データ列, データ列2, color='b')
ファイル 文字 コード オープン する	open(filepath, encoding=text)
小数点 以下 桁 データ フレーム ファイル 保存 する	df.to_csv(filename, float_format='%.3f')
タブ 区切り ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
辞書 キー 列挙 する	aDict.keys()
列 位 丸める	ds.round(-3)
黒い 大 バツ マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='X', c='k')
オプション グラフ 色 ライトグリーン 設定 する	color = 'lightgreen'
文字 列 先頭 正規 表現 大文字 小文字 無視 し マッチ する 見る	re.match(pattern, s, flags=re.IGNORECASE)
折れ線 グラフ 描画 し 色 ミディアムスプリンググリーン 設定 する	plt.plot(データ列, データ列2, color='mediumspringgreen')
星 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='*')
データ フレーム それぞれ グループ 最小 値 求める	df.groupby(column).min()
オプション 未 入力 値 先頭 する	na_position = 'first'
黒い 三角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='^', c='k')
ヒストグラム 描画 し その 色 ラベンダー ブラッシュ 設定 する	plt.hist(データ列, color='lavenderblush')
二 進 対数	math.log2(x)
リスト 配列 散布 図 描画 し 左 三 角 マーカー 色 カラー コード 変更 する	plt.plot(xdata, ydata, marker='<', c=rgb)
グラフ 淡く する	sns.set(pallete='muted')
ヒストグラム 描画 し その 色 ライトスレイグレー 設定 する	plt.hist(データ列, color='lightslategrey')
暗い 色 マーカー 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
青色 淡い グラフ プロット する	plt.plot(xdata, ydata, linestyle='muted', color='b')
浮動 小数点 数 数 掛ける	x * y
リネン 色 ヒストグラム 描画 する	plt.hist(データ列, color='linen')
空 スタック	collections.deque()
オプション グリーン 使う	color = 'green'
日付 時刻 データ タイムスタンプデータ あと どう	aDatetime > aDatetime2
ファイル パス バイナリ 書き込み ストリーム オープン し する	f = open(filepath, mode='wb')
データ フレーム 列 文字 列 長 列 使う	df[col].str.len()
折れ線 グラフ 描画 し その 色 マゼンタ 設定 する	plt.plot(データ列, データ列2, color='magenta')
赤い 左 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c='r')
リスト シアン する	f'\033[36m{value}\033[0m'
文字 列 全体 正規 表現 複数 行 対応 マッチ する 見る	re.fullmatch(pattern, s, flags=re.MULTILINE)
数列 数列 散布 図 プロット し バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='x', c=rgb)
文字 列 内 ひとつ アスキー 文字 含ま れる 調べる	any(c.isascii() for c in s)
リスト 数列 色 差別 ない 色 折れ線 グラフ 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
折れ線 グラフ 色 スレート ブルー する	plt.plot(データ列, データ列2, color='slateblue')
変数 下線 付き プリント する	print(f'\033[4m{value}\033[0m')
ヒストグラム 描画 し 色 珊瑚 設定 する	plt.hist(データ列, color='coral')
文字 列 中 部分 文字 列 新しい 文字 列 置き換える	s.replace(sub, newsub)
折れ線 グラフ 描画 し その 色 アクアマリン 変更 する	plt.plot(データ列, データ列2, color='aquamarine')
オプション ライトスレイグレー 使う	color = 'lightslategrey'
サブ クラス	issubclass(サブクラス, クラス)
文字 列 日付 時刻 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
点線 ヒストグラム 描画 する	plt.hist(データ列, linestyle='dotted')
折れ線 グラフ 上 三 角 マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
データ 列 個 ビン 分割 する	pd.cut(ds, n)
文字 列 先頭 パターン 限定 マッチ する 調べる	re.match(pattern, s, flags=re.ASCI)
ベクトル 各 要素 積	np.multiply(aArray, aArray2)
オプション 三角 マーカー 使う	marker = '^'
点線 設定 する	plt.axhline(y=0, linestyle='dotted')
データ フレーム それぞれ グループ 毎 最大 値 計算 する	df.groupby(column).max()
貝殻 ヒストグラム 色 設定 する	plt.hist(データ列, color='seashell')
ライトスカイブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightskyblue')
イテラブル 配列 淡い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='muted')
プロット 大き さ 横 縦 設定 する	plt.figure(figsize=(width, height))
散布 図 カラー コード 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c=rgb)
平方根	math.sqrt(x)
リスト 数列 散布 図 星 マーカー 描く	plt.plot(xdata, ydata, marker='*')
倍数 で ない どう 調べる	n % n2 != 0
リスト リスト 破線 グラフ 描画 し その 色 濃い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リスト ひとつ 置き 取り出す	aList[::2]
線 グラフ 描画 し その 色 ミディアムバイオレットレッド 設定 する	plt.plot(データ列, データ列2, color='mediumvioletred')
タプル 浅い コピー 作る	aDict.copy()
数列 配列 青い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
本日 何 日 知る	datetime.datetime.today().day
折れ線 グラフ クロス マーカー 黄色く する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
小文字 全て 見る	string.ascii_lowercase
正 数	n > 0
組 内 要素 全て 真 どう	all(aTuple)
浮動 小数点 数 有理数 近似	q.limit_denominator(max_denominator=1000000)
リスト 黄色 プリント できる 文字 列 変換 する	f'\033[33m{value}\033[0m'
データ フレーム カラム 種類 見る	df.info()
進 文字 列 バイナリ 変換 する	int(s, n).to_bytes(length=bytesize, byteorder='big')
エクセルファイルファイル 番目 シート データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
文字 標準 入力 読む	sys.stdin.read(1)
線 グラフ 描画 し その 色 ライト シアン 設定 する	plt.plot(データ列, データ列2, color='lightcyan')
オプション 色 ミスティローズ 指定 する	color = 'mistyrose'
適用 し た とき 真 なら ない イテラブル 部分	itertools.dropwhile(predicateFunc, iterable)
ファイル ディレクトリ 名	os.path.dirname(filepath)
オプション グラフ 色 ライト サーモン 設定 する	color = 'lightsalmon'
オブジェクト 浮動 小数点 数 クラス どう	isinstance(obj, float)
底 する 実数 対数	math.log10(x)
文字 列 紫色 プリント できる 文字 列 する	f'\033[35m{value}\033[0m'
タプル タプル 結合 する	aTuple + aTuple2
形式 データ 変換 する	json.load(fin)
両端 キュー 末尾 要素 取り除く	deq.pop()
データ フレーム リスト 列 相関 行列 ヒートマップ 描画 する	sns.heatmap(df[aList].corr())
ヘッダ 付け ず ファイル データ フレーム 保存 する	df.to_csv(filename, header=None)
リスト イテラブル 散布 図 描い マーカー 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, c='pastel')
キー タプル 存在 し いる どう 確認 する	key in aDict
データ 列 時刻	ds.dt.hour
ヒストグラム 色 シアン セット する	plt.hist(データ列, color='cyan')
文字 列 接尾 辞 部分 文字 列 どう 調べる	s.endswith(sub)
線 グラフ 描画 し その 色 マゼンタ 設定 する	plt.plot(データ列, データ列2, color='magenta')
ヒストグラム 描画 し その 色 アクアマリン 設定 する	plt.hist(データ列, color='aquamarine')
ヒストグラム 色 モカシン 設定 する	plt.hist(データ列, color='moccasin')
日付 データ 分 後 進める	aDate + datetime.timedelta(minutes=n)
ヒストグラム 描画 し 色 スレート ブルー 設定 する	plt.hist(データ列, color='slateblue')
グラフ フォント 日本語 表示 設定 する	sns.set(font='IPAexGothic')
データ フレーム カテゴリ データ カラム 名 一覧 見る	df.select_dtypes('object').columns
オプション 色 ミディアムアクアマリン 設定 する	color = 'mediumaquamarine'
黒色 パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
タプル 展開 し 出力 する	print(*aTuple)
ヒストグラム 色 ライト コーラル 変更 する	plt.hist(データ列, color='lightcoral')
折れ線 グラフ 描画 し その 色 シルバー 指定 する	plt.plot(データ列, データ列2, color='silver')
ファイル 追加 モード オープン し する	f = open(filepath, mode='a')
文字 列 番目 見る	s[n]
等差 数列 整数 乱数 算出 する	random.randrange(start, end, step)
データ フレーム 中 いくつ 文字 列 ある 数える	df.isin([value]).sum()
配列 リスト 散布 図 描画 し 左 三 角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='<', c=rgb)
オプション 色 ライトスカイブルー 設定 する	color = 'lightskyblue'
ライト イエロー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightyellow')
ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding='euc_jp')
濃い 色 リスト ヒストグラム プロット する	plt.hist(xdata, color='deep')
本日 日数	datetime.datetime.today().day
データ フレーム 列 値 グループ 化 し 要約 統計 量 求める	df.groupby(column).describe()
倍数 調べる	n % 5 == 0
データ フレーム ファイル 小数点 以下 桁 保存 する	df.to_csv(filename, float_format='%.3f')
小数点 数 実数 割っ た 剰余	math.remainder(x, x2)
線 グラフ 描画 し 色 レモン シフォン 設定 する	plt.plot(データ列, データ列2, color='lemonchiffon')
全 要素 初期 値 初期 化 し た 配列	np.full(要素数, 初期値, dtype=np.int)
折れ線 グラフ 青い 大 バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線 グラフ 描画 し その 色 紺 変更 する	plt.plot(データ列, データ列2, color='darkblue')
ふたつ 集合 和 集合	aSet.union(aSet2)
ファイル 番目 シート データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
データ フレーム カラム 中 日付 データ 文字 列 存在 する 調べる	df[col].isin([value, value2])
ペールグリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='palegreen')
線 グラフ 色 ライト サーモン 設定 する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線 グラフ 色 ローン グリーン 変更 する	plt.plot(データ列, データ列2, color='lawngreen')
リスト 最初 取り除く	aList[1:]
二 ビット 整数 型 全 要素 初期 化 さ れ た 行列	np.zeros(行数, 列数, dtype=np.int16)
オプション 淡い ピンク色 色 使う	color = 'lightpink'
ヒストグラム 描画 し その 色 オリーブ 指定 する	plt.hist(データ列, color='olive')
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 分散 求める	df.groupby([column, column2], as_index=False).var()
データ 列 折れ線 グラフ 描画 し 印 ダイアモンド 印 する	plt.plot(データ列, データ列2, marker='D')
二つ 文字 列 等しく ない 調べる	s != s2
折れ線 グラフ 描画 し その 色 ゴールド 指定 する	plt.plot(データ列, データ列2, color='gold')
オプション ダーク シアン 使う	color = 'darkcyan'
プロット 目盛り 線 入れる	plt.grid(True)
折れ線 グラフ 黒い 上 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
数値 赤色 プリント する	print(f'\033[31m{value}\033[0m')
バツ マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='x')
データ 列 何 年 見る	ds.dt.year
ゼロ 埋め さ れ た ベクトル	np.zeros(要素数)
モカシン 色 ヒストグラム 描画 する	plt.hist(データ列, color='moccasin')
データ フレーム 未 入力 値 後 値 指定 する	df.fillna(method='bfill')
ふたつ 集合 差 集合 見る	aSet.difference(aSet2)
文字 列 内 小文字 含ま れる テスト する	any(c.islower() for c in s)
リスト リスト 破線 グラフ 描い その 色 暗い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
データ フレーム 列 未 入力 値 中央 値 設定 する	df[col].fillna(df[col].median())
リスト リスト 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n)
数列 データ 列 明るい 描画 し 色 青 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
暗い グラフ 色 赤 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
文字 列 部分 文字 列 二分 し 後半 文字 列 求める	s.partition(sub)[-1]
以上 以下	-9 <= n <= 9
変数 マイナス 無限 大 近づく とき 数値 極限 値 求める	sympy.limit(e, z, -oo)
データ 列 中 いくつ 文字 列 ある 数える	ds.isin([value]).sum()
データ フレーム ファイル 保存 する	df.to_csv(filename, encoding='shift_jis')
文字 列 コロン 分割 し 列挙 する	s.split(':')
日付 データ データ フレーム カラム データ フレーム インデックス する	df.index = pd.DatetimeIndex(df[col])
データ 列 未 入力 値 前 行 値 設定 する	ds.fillna(method='ffill')
データ 列 小数点 以下 桁 丸める	ds.round(n)
ファイル パス 読み込み ストリーム オープン し する	f = open(filepath, mode='r')
スプリング グリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='springgreen')
コマンド 引数 一覧	sys.argv[1:]
オプション エン コーディング 文字 列 示す エン コーディング する	encoding = s
リスト リスト 散布 図 描画 し 三角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='^', c=rgb)
データ フレーム 指定 し た データ 型 列 名 一覧	df.select_dtypes(型).columns
ヒストグラム 描画 し その 色 シルバー 変更 する	plt.hist(データ列, color='silver')
折れ線 グラフ 色 オールド レース 設定 する	plt.plot(データ列, データ列2, color='oldlace')
プロット 見栄え いい 感じ 設定 する	sns.set()
エン コーディング 文字 列 バイト 列 する	s.encode(encoding=encoding)
データ フレーム 表示 する とき 最大 行 数 設定 する	pd.set_option('display.max_rows', n)
乗数	math.exp(x)
列 用い データ フレーム 並べ 先頭 する	df.sort_values(by=['A', 'B'], na_position='first')
線 グラフ 描画 し 色 ライトスレイグレー 指定 する	plt.plot(データ列, データ列2, color='lightslategray')
リスト リスト 破線 グラフ 描画 し その 色 暗い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
ファイル パス バイナリ できる よう 開く	open(filepath, mode='rb')
データ 列 淡い 色 ヒストグラム 描画 する	plt.hist(xdata, color='muted')
配列 リスト 散布 図 描画 し マーカー 左 三 角 セット する	plt.plot(xdata, ydata, marker='<')
ヒストグラム 描画 し その 色 ダークオーキッド する	plt.hist(データ列, color='darkorchid')
日付 時刻 データ 日付	aDatetime.date()
暗い グラフ 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
線 グラフ 描画 し 色 レモン シフォン 設定 する	plt.plot(データ列, データ列2, color='lemonchiffon')
イテラブル 明るい 色 ヒストグラム 描画 する	plt.hist(xdata, color='bright')
データ フレーム 列 値 グループ 化 する	df.groupby(column)
データ フレーム 中 列 列 重複 落とす	df.drop_duplicates(subset=[column, column2])
散布 図 濃い 色 使っ 描画 する	plt.plot(xdata, ydata, c='deep')
折れ線 グラフ 描画 し その 色 パパイヤウィップ 設定 する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線 グラフ 色 スラグレー 設定 する	plt.plot(データ列, データ列2, color='slategray')
折れ線 グラフ 色 ライト グレー 変更 する	plt.plot(データ列, データ列2, color='lightgrey')
それぞれ する	x, y, z = n, n2, n3
形式 文字 列 データ 変換 する	json.loads(b.decode('unicode-escape'))
モジュール イン ポート する	import math
データ 列 欠損 値 最 頻 値 設定 する	ds.fillna(ds.mode().iloc[0])
集合 要素 追加 する	aSet.add(element)
浮動 小数点 数 最大 値 求める	sys.float_info.max
日付 時刻 データ タイムスタンプデータ 時間 差 秒 数 算出 する	(aDatetime - aDatetime2).total_seconds()//60
ゲインズボロ ヒストグラム 色 変更 する	plt.hist(データ列, color='gainsboro')
論理 和 求める	n | n2
データ フレーム 中 カラム ビン 分割 する	pd.cut(df[col], aList)
キー 辞書 存在 し ない とき 要素 追加 する	aDict.setdefault(key, element)
ヒストグラム 描画 し 色 レモン シフォン 設定 する	plt.hist(データ列, color='lemonchiffon')
明るい 色 プロット 描画 使う	sns.set(pallete='bright')
ケンドール 用い データ フレーム 相関 行列	df.corr(method='kendall')
黒色 左 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c='k')
黒い ダイアモンドマーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='D', c='k')
リスト 配列 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n)
配列 転置 する	aArray.T
ゼロ 埋め さ れ た ビット 整数 型 配列	np.zeros(要素数, dtype=np.int8)
データ フレーム 秒 日付 データ 変換 する	pd.to_datetime(df[col], unit='s', utc=True)
データ 列 折れ線 グラフ 描画 し マーカー 左 三 角 する	plt.plot(データ列, データ列2, marker='<')
線 グラフ 描画 し その 色 青 する	plt.plot(データ列, データ列2, color='blue')
カラム 最大 幅 設定 する	pd.set_option('max_colwidth', n)
以下 または 以上	n <= n2 or n >= n3
オプション 色 グレー 設定 する	color = 'grey'
ファイル パス 書き込み 用 オープン する	open(filepath, mode='w')
破線 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, linestyle='dashed')
データ フレーム ファイル ファイル 保存 する	df.to_csv(filename, sep='\t')
破線 グラフ 色 パステル 調 の 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
ダーク グレー ヒストグラム 色 変更 する	plt.hist(データ列, color='darkgrey')
スノー ヒストグラム 色 セット する	plt.hist(データ列, color='snow')
オプション エラー ある とき 例外 発生 さ せる よう 変更 する	errors = 'strict'
項目 名 辞書 上 定義 済み 調べる	key in aDict
列 各 値 何 回 出現 する 調べる	ds.value_counts()
ふたつ リスト インター セクション	list(set(aList) & set(aList2))
オプション グラフ 線 幅 設定 する	linewidth = n
破線 グラフ 色 暗い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
オレンジ ヒストグラム 色 変更 する	plt.hist(データ列, color='orange')
データ フレーム ある 部分 色付け する	df.style.highlight_null()
データ フレーム リスト カラム 欠損 値 最 頻 値 埋める	df[aList].fillna(df[aList].mode().iloc[0])
複数 カラム 散布 図 まとめ プロット する	sns.pairplot(df[[column, column2, column3]])
文字 列 バイト 列 変換 する	s.encode(encoding='utf-8', errors='strict')
グラフ ポスター 用 する	sns.set(context='poster')
ヒストグラム 色 ナバホホワイト 設定 する	plt.hist(データ列, color='navajowhite')
淡い 折れ線 グラフ 数列 リスト 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
折れ線 グラフ 赤い 下 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
カラー コード 四角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='s', c=rgb)
もしくは 判定 する	x == 1 or x == 2
カラム 尖 度	ds.skew()
三 変数 最も 大きい 値	max(x, y, z)
オブジェクト 名前 付き タプル	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
折れ線 グラフ 実線 描画 する	plt.plot(データ列, データ列2, linestyle='solid')
少ない 順 カウンタ 列挙 する	aCounter.most_common()[::-1]
表 列 文字 列 終わら ない 行 抽出 する	df[not df[column].str.endswith(s)]
配列 リスト 散布 図 描き 四角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='s', c=rgb)
データ フレーム 列 グループ 分け し それぞれ グループ 最大 値 算出 する	df.groupby(column).max()
タプル 最後 番目 以前 部分 抽出 する	aTuple[:-n]
マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='^')
真 なる イテラブル 部分	itertools.takewhile(predicateFunc, iterable)
イテラブル データ 列 散布 図 赤い 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<', c='r')
表 データ 列 以下 データ 抽出 する	df[df[column] <= x]
ファイル データ フレーム 保存 する	df.to_csv(filename, encoding='shift_jis')
数 二乗 算出 する	x ** 2
二つ リスト 辞書 作る	dict(zip(aList, aList2))
オプション コロン 分割 記号 使用 する	sep = ':'
カウンタ イテラブル カウント し 引く	aCounter.subtract(iterable)
データ フレーム インデックス 一覧 見る	df.index
現在 曜日 整数 見る	datetime.datetime.today().weekday()
濃い 色 用い 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
データ 列 データ 列 散布 図 カラー コード 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<', c=rgb)
データ 列 リスト 散布 図 描画 し マーカー 三角 指定 する	plt.plot(xdata, ydata, marker='^')
データ フレーム どの 程度 分散 し いる 見る	df.var()
整数 集合 どれ	n in aSet
折れ線 グラフ 描画 し その 色 スノー 変更 する	plt.plot(データ列, データ列2, color='snow')
軸 ラベル 付ける	plt.ylabel(untitled)
データ フレーム 行 目 以降 選択 する	df[n:]
折れ線 グラフ スタイル 実線 設定 する	plt.plot(データ列, データ列2, linestyle='solid')
上位 集合 もしくは 等しい 調べる	aSet > aSet2
データ フレーム グループ 化 し 各 列 分散 算出 する	df.groupby(column)[column2].var()
プラットフォーム 符号 付き 整数 最大 値	sys.maxsize
線 グラフ 描画 し 色 フォレストグリーン 設定 する	plt.plot(データ列, データ列2, color='forestgreen')
数列 配列 散布 図 描画 し 四角 マーカー 色 カラー コード する	plt.plot(xdata, ydata, marker='s', c=rgb)
リスト 要素 追加 する	aList.append(element)
疑似 乱数 生成 する	random.random()
黒い ポイント マーカー データ 列 リスト 散布 図 描く	plt.plot(xdata, ydata, marker='.', c='k')
データ フレーム 四捨五入 し 整数 型 する	df.round().astype(int)
数値 変数 数式 代入 する	e.subs(z, e2)
データ フレーム カラム 何 分 見る	df[col].dt.minute
重 見やすく パステル 調 色 配列 配列 散布 図 描画 する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
文字 列 リスト 区切り つなげる	sep.join(aStringList)
データ フレーム 正規 表現 まとめ 置き換える	df.replace(pattern, repl, regex=True)
データ フレーム リスト カラム 欠損 値 直前 値 埋める	df[aList].fillna(method='ffill')
ヘッダー 行 右寄せ 指定 する	pd.set_option('colheader_justify', 'right')
数列 リスト カラー コード 淡い グラフ プロット する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
ダークスラテグレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkslategray')
ファイル オープン し 書き込み ストリーム 見る	open(filepath, mode='w')
オプション ファイル 出力 する	file = sys.open(filename, 'w')
配列 等間隔 個 ビン 分割 する	pd.cut(aArray, n)
標準 入力 文字 読む	sys.stdin.read(1)
タイムスタンプデータ 日付 時刻 データ 時間 差 秒 求める	(aDatetime - aDatetime2).total_seconds()//60
データ フレーム 列 ソート し 新しい インデックス 振り 直す	df.sort_values(columns).reset_index()
配列 配列 淡い グラフ プロット し その 色 青 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
リスト 縦 軸 リスト 横 軸 指定 し 折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
数式 方程式 解く	sympy.solve(e)
ヒストグラム 色 グリーン イエロー 変更 する	plt.hist(データ列, color='greenyellow')
タイムスタンプデータ 形式 文字 列 変換 する	aDatetime.isoformat()
オプション ゲインズボロ 色 セット する	color = 'gainsboro'
ヒストグラム 描画 し その 色 ダーク バイオレット 設定 する	plt.hist(データ列, color='darkviolet')
データ フレーム 複数 列 並べ 直し 更新 する	df.sort_values(by=column, inplace=True)
淡い 色 折れ線 描画 し その 線 幅 セット する	plt.plot(xdata, ydata, linewidth=n, color='muted')
データ フレーム エクセルデータ 読む	pd.read_excel(filename)
四角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='s')
オプション グラフ 色 ダークスレートブルー 設定 する	color = 'darkslateblue'
配列 分割 数 使っ ビン 分割 し ラベル つける	pd.cut(aArray, n, labels=names)
小数点 以下 桁 ファイル データ フレーム 書き込む	df.to_csv(filename, float_format='%.3f')
データ フレーム リスト カラム 値 正規 表現 まとめ 置き換える	df[aList].replace(pattern, repl, regex=True)
黒い 淡い 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
文字 列 空白 用い 区切り 整数 リスト する	map(int, s.split())
オプション バイナリ 書き込み モード 設定 する	mode = 'wb'
つ 整数 最小公倍数	math.lcm(n, n2)
ヒストグラム 描画 し その 色 淡い 茶色 設定 する	plt.hist(データ列, color='tan')
整数 進数 表記 変換 する	hex(n)
データ フレーム 列 ヒストグラム 使っ 可視 化 する	plt.hist(df[column])
データ フレーム 百 位 丸める	df.round(-2)
文字 列 無限 イテラブル	itertools.repeat(element)
時間 使う	import time
日付 データ 日曜日 調べる	aDate.weekday() == 6
ルート	math.sqrt(x)
リスト リスト 明るい 折れ線 グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
折れ線 グラフ マーカー 使う	plt.plot(データ列, データ列2, marker='v')
日付 時刻 データ 時間 分 減算 する	aDatetime - datetime.timedelta(hours=n)
オプション 色 パールバイオレットレッド 変更 する	color = 'palevioletred'
折れ線 グラフ 赤い ポイント マーカー 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
オプション ダークスレートブルー 色 使う	color = 'darkslateblue'
イテラブル 配列 変換 する	np.array(iterable)
イテラブル 数列 散布 図 明るい 色 描く	plt.plot(xdata, ydata, c='bright')
データ フレーム 複数 列 値 グループ 化 する	df.groupby(columns)
データ フレーム 表示 する とき 表示 可能 な 最大 行 数 変更 する	pd.set_option('display.max_rows', n)
オプション 色 紺碧 設定 する	color = 'azure'
折れ線 グラフ 四角 印 使用 する	plt.plot(データ列, データ列2, marker='s')
ファイル 追加 ストリーム 開き する	f = open(filepath, mode='a')
線 グラフ 描画 し その 色 パパイヤウィップ 設定 する	plt.plot(データ列, データ列2, color='papayawhip')
ヒストグラム 描画 し その 色 ミディアムターコイズ 設定 する	plt.hist(データ列, color='mediumturquoise')
オプション グリーン 色 指定 する	color = 'green'
赤色 四角 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='s', c='r')
タプル 要素 昇順 並べ 直す	sorted(aTuple, reverse=False)
パステル 調 色 配列 ヒストグラム プロット する	plt.hist(xdata, color='pastel')
文字 列 プリント する	print(value)
データ フレーム リスト 列 丸め 整数 型 する	df[aList].round().astype(int)
小数点 数 常用 対数	math.log10(x)
折れ線 グラフ 描画 し その 色 ミディアムバイオレットレッド 設定 する	plt.plot(データ列, データ列2, color='mediumvioletred')
エクセルファイルファイル 複数 シート 読み込む	pd.read_excel(filename, sheet_name=[n, n2])
リスト 配列 明るい プロット し その 色 青 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
折れ線 グラフ 描画 し その 色 ゴールデン ロッド 変更 する	plt.plot(データ列, データ列2, color='goldenrod')
ふたつ 関係 真 スーパー セット 調べる	aSet > aSet2
ヒストグラム 色 カデット ブルー 設定 する	plt.hist(データ列, color='cadetblue')
オプション エラー ある とき 例外 発生 さ せる よう 設定 する	errors = 'strict'
データ フレーム 各 列 列 組み合わせ 毎 集約 し 最小 値 求める	df.groupby([column, column2], as_index=False).min()
オプション スキップ する フッタ 増やす	skipfooter = n
オプション 茶色 色 使う	color = 'brown'
プラットフォーム 整数 最大 値	sys.maxsize
実数 逆 正弦	math.asin(x)
データ フレーム 表示 する とき 小数点 以下 表示 精度 桁 セット する	pd.set_option('precision', n)
読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
オプション グラフ 色 ライト イエロー 設定 する	color = 'lightyellow'
二つ オブジェクト 等しい どう	obj == obj2
マップ キー 指定 さ れ た 項目 ポップ する	aDict.pop(key)
明るい カラー パレット グラフ 描画 使う	sns.set(pallete='bright')
ヒストグラム 色 マルーン する	plt.hist(データ列, color='maroon')
リスト データ 列 散布 図 描画 し 文字 列 凡例 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
文字 列 最後 部分 文字 列 分割 し た とき 最初 文字 列	s.rpartition(sub)[0]
小数点 数 指数 部	math.frexp(x)[1]
データ フレーム 列 と列 削除 する	df.drop([column, column2], axis=1)
ヒストグラム 描画 し その 色 ラベンダー ブラッシュ セット する	plt.hist(データ列, color='lavenderblush')
キーワード 引数 タプル 更新 する	aDict.update(**kwargs)
折れ線 グラフ 描画 し その 色 ミッドナイト ブルー 設定 する	plt.plot(データ列, データ列2, color='midnightblue')
一 桁 数	-9 <= n <= 9
小数点 数 逆数	math.asinh(x)
リスト リスト 散布 図 濃い 色 用い 描く	plt.plot(xdata, ydata, c='deep')
ヒストグラム 描画 し その 色 レベッカパープル 設定 する	plt.hist(データ列, color='rebeccapurple')
ヒストグラム 線 スタイル 点線 セット する	plt.hist(データ列, linestyle='dotted')
折れ線 グラフ 描画 し 色 オリベドラブ 設定 する	plt.plot(データ列, データ列2, color='olivedrab')
タンジェント 逆数	math.atan(x)
ファイル 読み込み ストリーム 使う	open(filepath)
割っ た 余り	n % n2
カウンタ キー カウント 列挙 する	aCounter.items()
折れ線 グラフ 黄色い 下 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線 グラフ 描画 し その 色 ライトスチールブルー 設定 する	plt.plot(データ列, データ列2, color='lightsteelblue')
データ 列 リスト パステル 調 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
リスト リスト 暗い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
配列 累積 積 求める	np.cumprod(aArray)
キュー 要素 インプレース 逆順 する	deq.reverse()
オプション 色 ライトスレイグレー 変更 する	color = 'lightslategray'
集合 空 確認 する	len(aSet) == 0
赤い バツ マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='x', c='r')
データ 列 カテゴリ データ 変換 する	ds.astype(object)
折れ線 グラフ 大き さ 大 バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線 グラフ 色 オーキッド セット する	plt.plot(データ列, データ列2, color='orchid')
シンボル 計算 使う	import sympy
カウンタ 共通 する 要素 算出 する	aCounter & aCounter2
ヒストグラム 描画 し 色 ディムグレー 設定 する	plt.hist(データ列, color='dimgray')
ダークシアグリーン ヒストグラム 色 セット する	plt.hist(データ列, color='darkseagreen')
線 グラフ 描画 し その 色 アクアマリン 指定 する	plt.plot(データ列, データ列2, color='aquamarine')
ヒストグラム 描画 し その 色 ライトゴールドロディイエロー 設定 する	plt.hist(データ列, color='lightgoldenrodyellow')
線 グラフ 描画 し その 色 スラグレー 変更 する	plt.plot(データ列, データ列2, color='slategrey')
折れ線 グラフ 星 マーカー サイズ 設定 する	plt.plot(データ列, データ列2, marker='*', markersize=n)
リスト 末尾 要素 除く	aList.pop()
折れ線 グラフ 色 サンディーブラウン 設定 する	plt.plot(データ列, データ列2, color='sandybrown')
データ フレーム 欠損 値 平均 値 する	df.fillna(df.mean())
データ フレーム 複数 列 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(columns)]
データ フレーム 列 値 未 入力 値 含め 集計 する	df.groupby(column, dropna=False)
折れ線 グラフ 印 緑色 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
ヒストグラム 色 シルバー 指定 する	plt.hist(データ列, color='silver')
折れ線 グラフ 大 バツ マーカー 用いる	plt.plot(データ列, データ列2, marker='X')
グラフ いい 感じ 設定 する	sns.set()
乱数 生成 する	random.random()
リスト リスト 散布 図 描画 し その 大き さ 設定 する	plt.scatter(xdata, ydata, s=n)
カウンタ いずれ 含ま れる 値 求める	aCounter | aCounter2
ヒストグラム 色 レベッカパープル 設定 する	plt.hist(データ列, color='rebeccapurple')
線 グラフ 色 フォレストグリーン する	plt.plot(データ列, データ列2, color='forestgreen')
ヒストグラム 描画 し その 色 青 緑 設定 する	plt.hist(データ列, color='turquoise')
アイボリー 色 ヒストグラム 描画 する	plt.hist(データ列, color='ivory')
折れ線 グラフ 黒い 右 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
折れ線 グラフ 色 シスル 設定 する	plt.plot(データ列, データ列2, color='thistle')
データ フレーム 列 列 用い 並べ 直す	df.sort_values(by=['A', 'B'])
数列 リスト 淡い グラフ 描い 色 黒 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
右 三 角 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='>')
最初 要素 キュー 取り除く	deq.remove(element)
オブジェクト 固有 求める	id(obj)
改行 なし 文字 列 出力 する	print(value, value2, end='')
配列 リスト 散布 図 描画 し マーカー 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, c='pastel')
リスト リスト 散布 図 描画 し マーカー ポイント 設定 する	plt.plot(xdata, ydata, marker='.')
データ フレーム 使用 する	import pandas as pd
タプル 番目 番目	aTuple[n:n2]
ヒストグラム 色 グリーン 設定 する	plt.hist(データ列, color='green')
折れ線 グラフ 色 ハニーデュー 変更 する	plt.plot(データ列, データ列2, color='honeydew')
ヒストグラム 描画 し その 色 シスル 設定 する	plt.hist(データ列, color='thistle')
追加 できる よう 文字 コード 既存 ファイル オープン する	open(filepath, mode='a', encoding=text)
現在 年 使う	datetime.datetime.today().year
散布 図 赤色 四角 マーカー 使う	plt.plot(xdata, ydata, marker='s', c='r')
表 データ 列 名前 付け 直す	df.rename(columns={column: name})
白色 値 プリント する	print(f'\033[37m{value}\033[0m')
マッピング 項目 名 値 エラー なく 得る	aDict.get(key, None)
整数 八 進 文字 列 する	oct(n)[2:]
線 幅 丸 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線 グラフ 透明 度 セット する	plt.plot(xdata, ydata, alpha=alpha)
オプション パープル グラフ 色 変更 する	color = 'purple'
データ フレーム カラム 曜日 何 日 目 見る	df[col].dt.dayofweek
オプション スノー 色 使う	color = 'snow'
小数点 数 無限 大 どう 確認 する	math.isinf(x)
ヒストグラム 色 紺 設定 する	plt.hist(データ列, color='darkblue')
濃い 色 折れ線 グラフ 描き その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
ヒストグラム 描画 し その 色 ライトスカイブルー 設定 する	plt.hist(データ列, color='lightskyblue')
棒グラフ 描画 し 中央 寄せ する	plt.bar(ラベル列, データ列, align='center')
文字 列 終了 位置 部分 文字 列 探す	s.find(sub, 0, end)
ヒストグラム 色 アイボリー 変更 する	plt.hist(データ列, color='ivory')
データ フレーム カラム 中 含ま れる 文字 列 合計 求める	df[col].isin([value, value2]).sum()
折れ線 グラフ 描画 し その 色 クリムゾン 設定 する	plt.plot(データ列, データ列2, color='crimson')
文字 列 先頭 部分 文字 列 取り除く	s.lstrip(sub)
折れ線 グラフ 描画 し その 色 ダークゴールデンロッド 設定 する	plt.plot(データ列, データ列2, color='darkgoldenrod')
線 グラフ 色 フローラルホワイト 設定 する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線 グラフ 描画 し その 色 オレンジ 指定 する	plt.plot(データ列, データ列2, color='orange')
オプション レベッカパープル 色 用いる	color = 'rebeccapurple'
年月日 時刻 日付 時刻 作成 する	datetime.datetime(年, 月, 日, 時, 分, 秒)
散布 図 赤い ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D', c='r')
点 間 ユークリッド 距離	math.dist(point, point2)
オプション 紺碧 色 使う	color = 'azure'
行列 標準 偏差	np.std(aArray)
つ 文字 列 等しく ない	s != s2
オプション グラフ 色 ティール 変更 する	color = 'teal'
リスト イテラブル 直積 得る	itertools.product(iterable, iterable2)
パス 追加 する	sys.path.append(dir)
文字 列 最初 空白 タブ 消す	s.lstrip()
ヒストグラム 描画 し その 色 ミディアムオーキッド 設定 する	plt.hist(データ列, color='mediumorchid')
行列 列	aArray[:, 列番号]
日付 時刻 データ 日 前 戻す	aDatetime - datetime.timedelta(days=n)
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 分散 計算 する	df.groupby([column, column2], as_index=False).var()
データ フレーム カラム どの 程度 分散 し いる 見る	df[col].var()
変数 近づく とき 数式 極限 値 求める	sympy.limit(e, z, 0)
両端 キュー 先頭 イテラブル 各 要素 追加 する	deq.extendleft(iterable)
ヒストグラム 色 ロイヤル ブルー 指定 する	plt.hist(データ列, color='royalblue')
オプション グラフ 種類 点線 変更 する	linestyle = 'dotted'
データ フレーム カラム 正規 分布 どの 程度 歪ん いる 確認 する	df[col].kurt()
配列 ユニーク な 要素	np.unique(aArray)
日付 データ 金曜日 どう 調べる	aDate.weekday() == 4
部分 文字 列 最後 文字 列 区切る	s.rsplit(sub)
文字 ユニ コード する	ord(ch)
グラフ 凡例 場所 設定 する	plt.legend(loc=(x, y))
配列 個 ビン 分割 する	pd.cut(aArray, n)
ヒストグラム 描画 し 色 グリーン 指定 する	plt.hist(データ列, color='green')
オプション グラフ 色 オレンジ 設定 する	color = 'orange'
ヒストグラム 描画 し その 色 スチール ブルー 指定 する	plt.hist(データ列, color='steelblue')
リスト データ 列 黒色 パステル 調 グラフ 描く	plt.plot(xdata, ydata, linestyle='pastel', color='k')
小数点 数 乗	math.exp(x)
オプション 濃い シアン 色 使う	color = 'darkcyan'
ヒストグラム 描画 し 色 ターコイズ 設定 する	plt.hist(データ列, color='turquoise')
赤色 星 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c='r')
散布 図 黒い 四角 マーカー 使う	plt.plot(xdata, ydata, marker='s', c='k')
文字 列 緑色 プリント する	print(f'\033[32m{value}\033[0m')
二つ データ フレーム 列 キー し 左 結合 する	pd.merge(df, df2, on=column, how='left')
データ 列 中 文字 列 文字 列 存在 する どう 調べる	ds.isin([value, value2])
オブジェクト 浮動 小数点 数 クラス 判定 する	isinstance(obj, float)
データ 列 値 未 入力 値 調べる	ds.isna()
整数 符号 付き バイナリ 変換 する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
オプション レベッカパープル 色 使う	color = 'rebeccapurple'
明るい 柱状 グラフ プロット する	plt.hist(xdata, color='bright')
折れ線 グラフ 描画 し 色 ダークゴールデンロッド 変更 する	plt.plot(データ列, データ列2, color='darkgoldenrod')
ふたつ 集合 共通 要素 更新 する	aSet.intersection_update(aSet2)
列 名 リスト データ フレーム 分類 し 列挙 する	[(name, group) for name, group in df.groupby(columns)]
オプション カラム 名前 自動的 な 連 番 設定 する	header = None
折れ線 グラフ 黄色い 左 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
データ フレーム カテゴリ データ 抽出 する	df.select_dtypes('object')
文字 列 シンボル 変換 する	sympy.Symbol(s)
ベクトル 平坦 化 する	aArray.flatten()
セット 別 セット 要素 全て 除く	aSet.difference_update(aSet2)
データ フレーム 破壊 的 重複 する 行 削除 する	df.drop_duplicates(inplace=True)
オプション グラフ 色 カデット ブルー セット する	color = 'cadetblue'
ヒストグラム 描画 し 色 ダークスラテグレー 変更 する	plt.hist(データ列, color='darkslategray')
ヒストグラム 色 ライト グレー する	plt.hist(データ列, color='lightgray')
ヒストグラム 描画 し その 色 モカシン 変更 する	plt.hist(データ列, color='moccasin')
ヒストグラム 描画 し その 色 オリーブ 変更 する	plt.hist(データ列, color='olive')
淡い グラフ 色 黒 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
日付 データ 日付 データ 時間 差 何 秒 知る	(aDate - aDate2).total_seconds()
オプション 出力 先 標準 エラー 指定 する	file = sys.stderr
オプション グラフ 色 スチール ブルー 設定 する	color = 'steelblue'
ゼロ 埋め さ れ た 整数 型 行列	np.zeros(要素数, dtype=np.int)
オブジェクト 属性 削除 する	delattr(obj, プロパティ名)
単位 行列	np.eye(行数, 列数)
浮動 小数点 数 二 乗	x ** 2
二つ 文字 列 カンマ 区切っ 出力 する	print(value, value2, sep=',')
データ フレーム 列 正規 表現 文字 列 マッチ する 行 選択 する	df[df[column].str.match(s)]
折れ線 グラフ 描画 し その 色 オリーブ 設定 する	plt.plot(データ列, データ列2, color='olive')
文字 列 文字 列 リスト いづれ どう 調べる	s in aStringList
ベクトル 間 要素 ごと 最小公倍数 求める	np.lcm(aArray, aArray2)
データ 列 欠損 値 最大 値 埋める	ds.fillna(ds.max())
日付 時刻 データ 分	aDatetime.minute
数値 簡略 化 する	sympy.sympify(e)
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 平均 値 計算 する	df.groupby([column, column2], as_index=False).mean()
濃い グラフ 色 黒 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
オブジェクト 属性 持つ	hasattr(obj, プロパティ名)
データ フレーム 列 大きい 順 破壊 的 並べ 直す	df.sort_values(by=column, ascending=False, inplace=True)
第 二 引数 指定 さ れ た ファイル 名前	sys.argv[1]
文字 列 黒色 する	f'\033[30m{value}\033[0m'
データ ラベル 最適 な 位置 入れる	plt.legend(loc='best')
データ フレーム 複数 列 並べ 更新 する	df.sort_values(by=column, inplace=True)
フクシア 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='fuchsia')
日付 データ 火曜日	aDate.weekday() == 1
配列 配列 濃い 色 折れ線 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
リスト リスト パステル 調 グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
データ 列 中 文字 列 存在 する どう 調べる	ds.isin([value, value2])
行列 列 ごと 合計 値 求める	np.sum(aArray, axis=0)
日付 データ 曜日 整数 求める	aDate.weekday()
配列 データ 列 青い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
赤い 四角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='s', c='r')
折れ線 グラフ 色 茶色 指定 する	plt.plot(データ列, データ列2, color='brown')
データ フレーム 中 列 ビン 数 ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
要素 集合	element not in aSet
ライトスレイグレー ヒストグラム 色 設定 する	plt.hist(データ列, color='lightslategray')
リスト 黒色 表示 する	print(f'\033[30m{value}\033[0m')
データ フレーム 複数 列 昇順 破壊 的 ソート する	df.sort_values(by=column, ascending=True, inplace=True)
データ フレーム グループ 化 し それぞれ 列 最小 値 求める	df.groupby(column)[column2].min()
線 グラフ 描画 し その 色 ライトスチールブルー 設定 する	plt.plot(データ列, データ列2, color='lightsteelblue')
等しい 量 なる よう 分割 数 リスト 分割 する	pd.qcut(aList, n)
線 グラフ 描画 し その 色 ライム 変更 する	plt.plot(データ列, データ列2, color='lime')
折れ線 グラフ 描画 し その 色 パールゴールデンロッド セット する	plt.plot(データ列, データ列2, color='palegoldenrod')
データ 列 正規 分布 どの 程度 歪ん いる 見る	ds.kurt()
オプション ダーク バイオレット 色 用いる	color = 'darkviolet'
パス	sys.path
オプション 黄色 使う	color = 'yellow'
データ フレーム 列 用い 並べ 直し 上位 件 取り出す	df.sort_values(columns).head(n)
文字 列 型 する	pd.to_datetime(s)
各 列 毎 データ フレーム 集約 し 列 最大 値 求める	df.groupby(column)[column2].max()
ヒストグラム 描画 し 色 アクア 設定 する	plt.hist(データ列, color='aqua')
リスト 配列 散布 図 三角 マーカー プロット する	plt.plot(xdata, ydata, marker='^')
ヒストグラム 描画 し その 色 ローン グリーン 設定 する	plt.hist(データ列, color='lawngreen')
文字 列 全て アスキー 文字	s.isascii()
ヒストグラム 描画 し その 色 ミディアムブルー 設定 する	plt.hist(データ列, color='mediumblue')
ファイル 改行 取り除い 一 行 読み込む	f.readline()
ふたつ 関係 サブ セット どう 確認 する	aSet.issubset(aSet2)
オプション 色 スノー する	color = 'snow'
ヒストグラム 色 ラベンダー ブラッシュ 指定 する	plt.hist(データ列, color='lavenderblush')
データ フレーム 標本 標準 偏差	df.std()
配列 リスト 破線 グラフ 描き その 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
パステル 調 色 リスト ヒストグラム 描画 する	plt.hist(xdata, color='pastel')
データ フレーム 平均 埋める	df.fillna(df.mean())
リスト リスト 折れ線 グラフ ラベル付け し 描く	plt.plot(xdata, ydata, label=untitled)
データ 列 リスト 散布 図 プロット し ダイアモンドマーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='D', c=rgb)
グラフ 使う タイトル 指定 する	plt.title(untitled)
オプション アクアマリン 用いる	color = 'aquamarine'
データ フレーム リスト カラム 欠損 値 直後 値 する	df[aList].fillna(method='bfill')
グラフ 見栄え 良く する	import seaborn as sns
最小 値 データ フレーム リスト 列 欠損 値 補う	df[aList].fillna(df[aList].min())
パステル 調 グラフ 色 黒く する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
折れ線 グラフ ポイント マーカー 黄色く する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
番目 要素 取り除く	aList.pop(n)
両端 キュー 要素 使う	collections.deque(itertools.islice(deq, start, end))
折れ線 グラフ 描画 し その 色 コーンズシルク 指定 する	plt.plot(データ列, データ列2, color='cornsilk')
データ フレーム それぞれ グループ 最小 値	df.groupby(column).min()
散布 図 黒い 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='k')
もしくは もしくは 等しい	n == 1 or n == 2 or n == 3
パパイヤウィップ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線 グラフ 黄色い 三角 印 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
最大 長 ある デック	collections.deque(maxlen=n)
原点 小数点 数 距離	math.hypot(x, y)
文字 列 カンマ 分割 し 文字 列 リスト 変換 する	s.split(',')
折れ線 グラフ 色 赤 変更 する	plt.plot(データ列, データ列2, color='red')
変数 黒色 する	f'\033[30m{value}\033[0m'
折れ線 グラフ 緑色 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
空 組 作る	()
オプション セパレータ スラッシュ する	sep = '/'
データ フレーム パーセンタイル	df.quantile(0.25)
ライト シアン ヒストグラム 色 設定 する	plt.hist(データ列, color='lightcyan')
再帰 最大 回数 上げる	sys.setrecursionlimit(1000000)
文字 列 新しい 文字 列 置き換える	s.replace(sub, newsub)
文字 列 中 パターン 限定 マッチ する 位置 探す	re.search(pattern, s, flags=re.ASCI)
適用 し た とき 真に なる イテラブル 要素 除去 する	itertools.dropwhile(predicateFunc, iterable)
ヒストグラム 描画 し その 色 ダーク シアン 変更 する	plt.hist(データ列, color='darkcyan')
リスト イテラブル 散布 図 描画 し マーカー 四角 設定 する	plt.plot(xdata, ydata, marker='s')
カラー コード バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c=rgb)
データ フレーム 列 破壊 的 削除 する	df.drop(column, axis=1, inplace=True)
データ フレーム リスト カラム 未 入力 値 最小 値 設定 する	df[aList].fillna(df[aList].min())
カラム 記述 統計 量 求める	ds.describe()
オプション インディゴ グラフ 色 設定 する	color = 'indigo'
データ フレーム カラム 最大 値 変更 する	df[col].fillna(df[col].max())
データ フレーム 要約 統計 量 求める	df.describe()
ヒストグラム 描画 し その 色 スレート ブルー 設定 する	plt.hist(データ列, color='slateblue')
正 数 どう 調べる	n > 0
行列 合計 値	np.sum(aArray)
データ フレーム ファイル ファイル 保存 する	df.to_csv(filename, sep='\t')
ファイル カラム 名前 指定 せ ず 読み込む	pd.read_csv(filename, header=None)
文字 列 文字 リスト する	list(s)
オプション 番目 列 インデックス 設定 する	index_col = n
空白 文字 全部 使う	string.whitespace
柱状 図 プロット し アルファ 設定 する	plt.hist(データ列, alpha=x)
リスト 中 最小 値	min(aList)
タプル 末尾	aTuple[-1]
キュー 要素 数	len(deq)
ファイル 読み込み モード 使っ オープン する	open(filepath, mode='r')
リスト 等しい 量 なる よう 個 ビン 分割 する	pd.qcut(aList, n)
実数 負 数 どう	x < 0
データ フレーム 中 いくつ 未 入力 値 ある 数える	df.isna().sum()
黒い 四角 マーカー リスト データ 列 散布 図 描画 する	plt.plot(xdata, ydata, marker='s', c='k')
行列 累積 和	np.cumsum(aArray)
タイムスタンプデータ 時間 数 求める	aDatetime.hour
ヒストグラム 描画 し その 色 ミント クリーム 指定 する	plt.hist(データ列, color='mintcream')
追加 モード ファイル オープン する	open(filepath, mode='a')
イテラブル シーケンス ペア リング する	itertools.zip_longest(iterable, iterable2)
二つ 浮動 小数点 数 十分 近い 調べる	math.isclose(x, x2)
データ フレーム リスト カラム 丸め 整数 型 する	df[aList].round().astype(int)
データ フレーム 列 と列 キー 外部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
折れ線 グラフ 描画 し その 色 アリスブルー 設定 する	plt.plot(データ列, データ列2, color='aliceblue')
データ フレーム リスト 列 欠損 値 平均 値 設定 する	df[aList].fillna(df[aList].mean())
折れ線 グラフ 色 イエロー グリーン 設定 する	plt.plot(データ列, データ列2, color='yellowgreen')
ピアソン 相関 係数 データ フレーム 相関 行列	df.corr(method='pearson')
ユニ コード 対応 する 文字 使う	chr(unicode)
折れ線 グラフ ダイアモンドマーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='D', markersize=n)
データ 列 文字 列 欠損 値 変換 する	ds.replace(s, np.nan)
オプション コーンフラワーブルー グラフ 色 設定 する	color = 'cornflowerblue'
インプレイス データ フレーム 重複 削除 する	df.drop_duplicates(inplace=True)
フォーマット データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], format='%Y-%m-%d')
線 グラフ 色 スレート ブルー 変更 する	plt.plot(データ列, データ列2, color='slateblue')
オプション 改行 コード 設定 する	newline = '\r\n'
昇順 データ フレーム 列 破壊 的 並べる	df.sort_values(by=column, ascending=True, inplace=True)
データ 列 配列 散布 図 赤色 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c='r')
破線 グラフ 色 色 差別 ない 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
オプション 色 ホワイト 指定 する	color = 'white'
カラー コード 右 三 角 マーカー リスト リスト 散布 図 描く	plt.plot(xdata, ydata, marker='>', c=rgb)
配列 データ 列 リスト 値 応じ 散布 図 色 変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
オプション ゴールド 用いる	color = 'gold'
データ フレーム 列 パーセンタイル 計算 する	df[col].quantile(percent/100)
濃い 色 折れ線 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
ヒストグラム 描画 し その 色 パールゴールデンロッド 設定 する	plt.hist(データ列, color='palegoldenrod')
二 数 最大 値	max(x, y)
色 差別 ない 色 黒 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
オプション 青 緑 使用 する	color = 'turquoise'
データ フレーム 中 消す	df.dropna()
平仮名 カタカナ 変換 する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
データ フレーム 二つ 列 大きい 順 ソート する	df.sort_values(by=['A', 'B'], ascending=False)
ヒストグラム 色 ライトスレイグレー 設定 する	plt.hist(データ列, color='lightslategrey')
赤い 濃い 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
リスト 行列 する	np.array(aList)
リスト 数列 散布 図 描画 し マーカー 大 バツ 指定 する	plt.plot(xdata, ydata, marker='X')
線 グラフ 色 ミスティローズ 設定 する	plt.plot(データ列, データ列2, color='mistyrose')
以上 以下	-9 <= x <= 9
文字 列 全て 数値	s.isnumeric()
ファイル 開き バイナリ ストリーム 使う	open(filepath, mode='rb')
各 列 毎 データ フレーム 集約 し 列 分散 求める	df.groupby(column)[column2].var()
オブジェクト 属性 削除 する	delattr(obj, プロパティ名)
配列 合計 計算 する	np.sum(aArray)
変数 紫色 プリント する	print(f'\033[35m{value}\033[0m')
列 キー し 二つ データ フレーム 左 ジョイン する	pd.merge(df, df2, on=column, how='left')
線 グラフ 描画 し 色 ダーク カーキ 設定 する	plt.plot(データ列, データ列2, color='darkkhaki')
要素 マッピング 値 含ま れ い ない	element not in aDict.values()
赤色 星 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c='r')
折れ線 グラフ 丸 マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
列 と列 キー つ データ フレーム 右 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
スラッシュ 区切っ 二つ 文字 列 表示 する	print(value, value2, sep='/')
スレート ブルー ヒストグラム 色 指定 する	plt.hist(データ列, color='slateblue')
データ フレーム 列 名 リスト 値 グループ 化 し 基本 統計 量 求める	df.groupby(columns).describe()
二つ 文字 列 カンマ 区切っ プリント する	print(value, value2, sep=',')
折れ線 グラフ 下 三角 印 緑色 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
データ フレーム 中 列 等間隔 個 ビン 分割 する	pd.cut(df[col], n)
ふたつ 集合 ユニオン	aSet.union(aSet2)
ベクトル 列	aArray[:, 列番号]
変数 名 キー 辞書 作る	dict(name=element)
データ フレーム カラム カテゴリ データ 変換 する	df[col].astype(object)
ヒストグラム カラー マップ 描画 する	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
オプション プラム 使用 する	color = 'plum'
現在 時間 数	datetime.date.today().hour
データ フレーム リスト 列 位 丸め 整数 する	df[aList].round(-2).astype(int)
折れ線 グラフ 青い ポイント マーカー 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
プログラム 即座 終了 する	sys.exit()
ヒストグラム 色 青 紫 する	plt.hist(データ列, color='violet')
オプション 大 バツ 印 使う	marker = 'X'
文字 列 セパレータ 分割 し 文字 列 リスト 変換 する	s.split(sep)
データ フレーム 列 列 並べ 直し 更新 する	df.sort_values(by=['A', 'B'], inplace=True)
ファイル 名 ファイル	filename.endswith('.csv')
ヒストグラム 色 ライム グリーン 設定 する	plt.hist(データ列, color='limegreen')
平均 値 データ 列 未 入力 値 補う	ds.fillna(ds.mean())
度数 分布 図 する	plt.hist(データ列, range=(start, end))
折れ線 グラフ 色 文字 列 設定 する	plt.plot(xdata, ydata, color=s)
データ 列 配列 色 差別 ない 色 折れ線 グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
オブジェクト 集合 クラス 調べる	isinstance(obj, set)
つ オブジェクト 同一 調べる	obj is obj2
線 グラフ 色 ミッドナイト ブルー 設定 する	plt.plot(データ列, データ列2, color='midnightblue')
列 無限 繰り返す	itertools.cycle(iterable)
ヒストグラム 描画 し その 色 ダーク グリーン 指定 する	plt.hist(データ列, color='darkgreen')
ミディアムオーキッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mediumorchid')
データ フレーム 表示 する とき 折り返し オフ 設定 する	pd.set_option('expand_frame_repr', False)
オブジェクト リスト タプル 調べる	isinstance(obj, (list)
両端 キュー 部分 取り出す	collections.deque(itertools.islice(deq, start, end))
イテラブル ひとつ ランダム 選ぶ	random.choice(iterable)
データ フレーム 列 値 グループ 化 する	df.groupby('A')
日付 時刻 データ 月数 使う	aDatetime.month
改行 なし 数値 出力 する	print(value, end='')
リスト 要素 並べ 直す	sorted(aList)
ダークゴールデンロッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkgoldenrod')
二つ カラム 並べ 箱 ひ げ 図 する	plt.boxplot([df[column], df[column2]])
イテラブル 文字 列 変換 し 空白 結合 する	' '.join(map(str, iterable))
データ フレーム リスト カラム 空文字 欠損 値 変換 し ドロップ する	df[aList].replace('', np.nan).dropna()
一 点 鎖線 つける	plt.axvline(x=0, linestyle='dashbot')
折れ線 グラフ 描画 し その 色 耐火 レンガ 設定 する	plt.plot(データ列, データ列2, color='firebrick')
つ オブジェクト 等しい 調べる	obj == obj2
データ フレーム 中 列 四 分 位 数 ごと 分割 する	pd.qcut(df[col], 4)
データ フレーム 列 列 相関 行列 求める	df[[column, column2]].corr()
折れ線 グラフ 描画 し その 色 ライトグリーン する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線 グラフ 色 ゴールド 設定 する	plt.plot(データ列, データ列2, color='gold')
タプル 番目 以降 部分 得る	aTuple[n:]
オプション ダーク オレンジ 色 用いる	color = 'darkorange'
オプション カーキ 色 設定 する	color = 'khaki'
折れ線 グラフ 星 マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='*', markersize=n)
グラフ 鉛直 方向 点線 つける	plt.axvline(x=0, linestyle='dotted')
オプション グラフ 色 濃い 青 セット する	color = 'darkblue'
進数 文字 列 バイナリ 変換 する	int(s, n).to_bytes(length=bytesize, byteorder='big')
行 降順 データ フレーム 全体 ソート する	df.sort_index(ascending=False)
折れ線 グラフ 描画 し 色 黄色 変更 する	plt.plot(データ列, データ列2, color='yellow')
第 二 コマンド 引数	sys.argv[1]
リスト リスト 黒色 パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
折れ線 グラフ 色 ダーク カーキ セット する	plt.plot(データ列, データ列2, color='darkkhaki')
ヒストグラム 描画 し 色 スチール ブルー 変更 する	plt.hist(データ列, color='steelblue')
グラフ 使う 縦 軸 軸 名 付ける	plt.ylabel(untitled)
モード データ フレーム 欠損 値 埋める	df.fillna(df.mode().iloc[0])
リスト 回 接続 する	aList * n
要素 集合 メンバー 含ま れ ない 調べる	element not in aSet
列 列 続ける	itertools.chain(iterable, iterable2)
折れ線 グラフ 描画 し その 色 小麦色 セット する	plt.plot(データ列, データ列2, color='wheat')
ヒストグラム 描画 し その 色 ダーク サーモン 設定 する	plt.hist(データ列, color='darksalmon')
折れ線 透明 度 設定 する	plt.plot(xdata, ydata, alpha=alpha)
ヒストグラム 描画 し その 色 紺碧 設定 する	plt.hist(データ列, color='azure')
文字 列 平仮名 片仮名 変換 する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
キー タプル ある どう	key not in aDict
変数 名 キー 辞書 生成 する	dict(name=element)
折れ線 グラフ 描画 し 色 ダーク グリーン 指定 する	plt.plot(データ列, データ列2, color='darkgreen')
散布 図 赤い 菱形 マーカー 使う	plt.plot(xdata, ydata, marker='D', c='r')
青い 三角 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
線 グラフ 色 ライトスチールブルー 設定 する	plt.plot(データ列, データ列2, color='lightsteelblue')
配列 リスト 散布 図 カラー コード 星 マーカー 描く	plt.plot(xdata, ydata, marker='*', c=rgb)
データ フレーム リスト カラム 千 位 四捨五入 し 整数 型 する	df[aList].round(-3).astype(int)
データ フレーム カラム 四捨五入 し 整数 型 する	df[col].round().astype(int)
リスト リスト 折れ線 グラフ 描画 し 色 文字 列 設定 する	plt.plot(xdata, ydata, color=s)
カラム 中 未 入力 値 数 数える	ds.isna().sum()
折れ線 グラフ 実線 用い 描画 する	plt.plot(データ列, データ列2, linestyle='solid')
オプション ライム グリーン 色 用いる	color = 'limegreen'
カウンタ 最も 頻出 項目	aCounter.most_common()[0]
リスト 度数 分布 図 淡い 描く	plt.hist(xdata, color='muted')
回 文字 列 置き換える	s.replace(sub, newsub, n)
折れ線 グラフ 描画 し その 色 黄色 設定 する	plt.plot(データ列, データ列2, color='yellow')
リスト 末尾 リスト 追加 する	aList.extend(aList2)
折れ線 グラフ 描画 し その 色 ロイヤル ブルー 設定 する	plt.plot(データ列, データ列2, color='royalblue')
使う	import numpy as np
ヒストグラム 描画 し その 色 ピンク する	plt.hist(データ列, color='pink')
線 グラフ 描画 し その 色 シーグリーン 設定 する	plt.plot(データ列, データ列2, color='seagreen')
配列 リスト 散布 図 プロット し 上 三 角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='^', c=rgb)
オプション 星 マーカー 使用 する	marker = '*'
データ フレーム カラム 欠損 値 中央 値 埋める	df[col].fillna(df[col].median())
大 バツ マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='X')
線 グラフ 色 コーンズシルク 設定 する	plt.plot(データ列, データ列2, color='cornsilk')
列 データ フレーム 降順 破壊 的 ソート する	df.sort_values(by='A', ascending=False, inplace=True)
ヒストグラム データ 列 可視 化 する	plt.hist(ds)
積み上げ 横 棒 描画 する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
リスト リスト 折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
キュー 先頭 要素 追加 する	deq.appendleft(element)
ファイル 読み込む	pd.read_excel(filename)
リスト リスト 暗い グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
データ フレーム 数値 データ 抽出 する	df.select_dtypes('number')
自然 対数 底	math.e
破壊 的 二つ 列 で データ フレーム 並べ 直す	df.sort_values(by=['A', 'B'], inplace=True)
データ フレーム カラム パーセンタイル	df[col].quantile(percent/100)
日付 時刻 データ 時間 後 進める	aDatetime + datetime.timedelta(hours=n)
配列 ユニーク な 要素 その 個数	u, counts = np.unique(aArray, return_counts=True)
常用 対数	math.log10(x)
オプション グラフ 色 黄 緑 設定 する	color = 'chartreuse'
複数 列 破壊 的 データ フレーム 大きい 順 整列 する	df.sort_values(by=column, ascending=False, inplace=True)
二 数 最小 値 求める	min(x, y)
オプション アクア 色 設定 する	color = 'aqua'
進数 文字 列 バイト バイト 列 変換 する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
データ 列 母 標準 偏差	ds.std(ddof=0)
等間隔 データ フレーム 中 列 個 ビン 分割 する	pd.cut(df[col], n)
リスト 反転 する	reversed(aList)
表 中 列 重複 見る	df.duplicated(subset=column)
線 グラフ 色 トマト 変更 する	plt.plot(データ列, データ列2, color='tomato')
折れ線 グラフ 描画 し その 色 ライトスカイブルー 設定 する	plt.plot(データ列, データ列2, color='lightskyblue')
リスト 配列 散布 図 明るい 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
文字 列 シアン プリント できる 文字 列 変換 する	f'\033[36m{value}\033[0m'
データ フレーム 欠損 値 直前 値 変更 する	df.fillna(method='ffill')
線 グラフ 描画 し その 色 アリスブルー 設定 する	plt.plot(データ列, データ列2, color='aliceblue')
整数 十 六 進 リテラル	hex(n)
オプション スラグレー 色 使う	color = 'slategray'
整数 ビット 長 確認 する	n.bit_length()
ヒストグラム 描画 し その 色 青 緑 変更 する	plt.hist(データ列, color='teal')
日付 時刻 データ 日付 時刻 データ 時間 差 何 分 知る	(aDatetime - aDatetime2).total_seconds()//60
異なる 列 キー し データ フレーム 左 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
ロイヤル ブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='royalblue')
ヒストグラム 色 ゴースト ホワイト 設定 する	plt.hist(データ列, color='ghostwhite')
二つ 浮動 小数点 数 近似 値 調べる	math.isclose(x, x2)
データ フレーム 破壊 的 重複 する データ 削除 する	df.drop_duplicates(inplace=True)
グラフ 鉛直 方向 一 点 鎖線 つける	plt.axvline(x=0, linestyle='dashbot')
リスト 配列 散布 図 暗い 色 用い 描画 する	plt.plot(xdata, ydata, c='dark')
折れ線 グラフ 描画 し その 色 デピンク 指定 する	plt.plot(データ列, データ列2, color='deeppink')
ヒストグラム 描画 し その 色 淡い ピンク色 設定 する	plt.hist(データ列, color='lightpink')
オプション ピンク 使う	color = 'pink'
大きい テスト する	n > n2
オプション 色 レモン シフォン 設定 する	color = 'lemonchiffon'
セット 浅い コピー	aSet.copy()
折れ線 グラフ 大き さ 上 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
文字 列 全体 パターン 複数 行 対応 マッチ さ せる	re.fullmatch(pattern, s, flags=re.MULTILINE)
折れ線 グラフ 色 オレンジ レッド 設定 する	plt.plot(データ列, データ列2, color='orangered')
淡い 色 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
オプション タブ セパレータ 使う	sep = '\t'
オプション 欠損 値 無視 し ない	dropna = True
変数 最大 値	max(x, y, z)
ヒストグラム 描画 し 色 ゲインズボロ 指定 する	plt.hist(データ列, color='gainsboro')
折れ線 グラフ 描画 し その 色 スカイ ブルー 設定 する	plt.plot(データ列, データ列2, color='skyblue')
文字 列 全体 正規 表現 マッチ する 確認 する	re.fullmatch(pattern, s)
両端 キュー 最大 長	deq.maxlen
データ フレーム 欠損 値 中央 値 埋める	df.fillna(df.median())
散布 図 黒い ダイアモンドマーカー 使う	plt.plot(xdata, ydata, marker='D', c='k')
ふたつ 集合 共通 要素 持た ない 調べる	aSet.isdisjoint(aSet2)
イテラブル リスト 折れ線 グラフ プロット し 色 文字 列 指定 する	plt.plot(xdata, ydata, color=s)
整数 組 ひとつ どう 判定 する	n in aTuple
線 グラフ 描画 し その 色 ロイヤル ブルー 設定 する	plt.plot(データ列, データ列2, color='royalblue')
オプション 星 マーカー 使う	marker = '*'
データ フレーム リスト カラム 尖 度 計算 する	df[aList].skew()
オプション タン グラフ 色 設定 する	color = 'tan'
オプション ダーク グリーン 用いる	color = 'darkgreen'
データ フレーム 列 用い 昇順 整列 する	df.sort_values(by='A', ascending=True)
小数点 数 アーク コサイン 求める	math.acos(x)
ヒストグラム 描画 し その 色 青 緑 変更 する	plt.hist(データ列, color='teal')
部分 文字 列 文字 列 区切っ 列挙 する	s.split(sub)
折れ線 グラフ 色 レベッカパープル する	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線 グラフ 色 ダークターコイズ 設定 する	plt.plot(データ列, データ列2, color='darkturquoise')
数字 見る	string.digits
ヒストグラム 色 小麦色 設定 する	plt.hist(データ列, color='wheat')
ヒストグラム 色 ブランチドアーモンド 設定 する	plt.hist(データ列, color='blanchedalmond')
ヒストグラム 描画 し その 色 ペルー 設定 する	plt.hist(データ列, color='peru')
データ フレーム 行 抽出 する	df[:n]
折れ線 グラフ 色 パールゴールデンロッド セット する	plt.plot(データ列, データ列2, color='palegoldenrod')
大文字 小文字 逆 する	s.swapcase()
デック 最初 要素 取り除く	deq.popleft()
文字 列 走査 し パターン 大文字 小文字 無視 し マッチ する 見る	re.search(pattern, s, flags=re.IGNORECASE)
文字 列 ひ ら なを カタカナ 変換 する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
全 要素 初期 化 し た 行列	np.ones(要素数, dtype=np.int)
データ フレーム 列 小さい 順 破壊 的 並べる	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
ビン 数 設定 し 度数 分布 図 プロット する	plt.hist(データ列, bins=n)
日付 時刻 データ エポック 秒 する	aDatetime.timestamp()
シルバー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='silver')
データ フレーム 中 列 列 重複 見る	df.duplicated(subset=[column, column2])
オプション ファイル 出力 する	file = sys.open(filename, 'w')
ヒストグラム 描画 し 色 レベッカパープル 指定 する	plt.hist(データ列, color='rebeccapurple')
折れ線 グラフ 色 アンティーク ホワイト 指定 する	plt.plot(データ列, データ列2, color='antiquewhite')
文字 列 コロン 使っ 区切っ 列挙 する	s.split(':')
横 棒グラフ 描い 中央 寄せ する	plt.barh(ラベル列, データ列, align='center')
文字 列 右側 部分 文字 列 取り除く	s.rstrip(sub)
二 数 最小 値	min(x, y)
折れ線 グラフ 描画 し その 色 イエロー グリーン 指定 する	plt.plot(データ列, データ列2, color='yellowgreen')
リスト リスト 散布 図 黒色 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c='k')
データ フレーム 指定 さ れ た 列 抽出 する	df[[column]]
散布 図 赤い 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c='r')
データ 列 標本 標準 偏差	ds.std()
データ フレーム 列 文字 列 文字 列 終わら ない データ 抽出 する	df[not df[column].str.endswith(s)]
データ フレーム カラム 下位	df[col].quantile(0.75)
リスト 配列 散布 図 カラー コード 丸 マーカー プロット する	plt.plot(xdata, ydata, marker='o', c=rgb)
リスト リスト 散布 図 カラー コード マーカー 描く	plt.plot(xdata, ydata, marker='^', c=rgb)
エクセルファイルファイル 読む	pd.read_excel(filename)
文字 列 開始 位置 以降 部分 文字 列 含ま れ ない どう 調べる	s.find(sub, start) == -1
絶対 値	abs(x)
データ フレーム 列 並べ 直す	df.sort_values(by=['A', 'B'])
データ フレーム データ 列 横 方向 連結 する	pd.concat([df, ds], axis=1)
実数 天井 求める	math.ceil(x)
未 初期 化 配列	np.empty(要素数, dtype=np.int)
文字 列 コロン 分割 し 文字 列 リスト する	s.split(':')
実数 逆 正接	math.atan(x)
ファイル 存在 し ない 調べる	not os.path.exists(filepath)
折れ線 グラフ 右 三 角 印 黄色 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
マップ マッピング 値 更新 する	aDict.update(aDict2)
文字 列 開始 位置 終了 位置 範囲 部分 文字 列 出現 回数 カウント する	s.count(sub, start, end)
オプション 印 三角 変更 する	marker = '^'
書式 辞書 フォーマット する	formatText.format_map(aDict)
折れ線 グラフ 描画 し その 色 スレート ブルー 設定 する	plt.plot(データ列, データ列2, color='slateblue')
折れ線 グラフ 大き さ 三角 印 描画 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
リスト 先頭 値	aList[0]
連立 方程式 解く	sympy.solve([e, e2])
文字 列 セパレータ 区切っ 列挙 する	s.split(sep)
線 グラフ 描画 し その 色 モカシン 設定 する	plt.plot(データ列, データ列2, color='moccasin')
文字 列 ゼロ 埋め する	s.zfill(文字列幅)
データ フレーム カラム 未 入力 値 平均 値 設定 する	df[col].fillna(df[col].mean())
データ 列 小数点 以下 桁 四捨五入 する	ds.round(n)
グラフ カラー パレット 色 差別 なく する	sns.set(pallete='colorblind')
カラム 平均 値	ds.mean()
数値 双方向 キュー 番目 差し込む	deq.insert(n, element)
タプル 先頭 要素	aTuple[0]
マッピング 項目 名 値 もしくは 要素 参照 する	aDict.get(key, element)
限定 正規 表現 コンパイル する	re.compile(pattern, flag=re.ASCI)
折れ線 グラフ 緑色 四角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
ホット ピンク色 ヒストグラム 描画 する	plt.hist(データ列, color='hotpink')
配列 数列 散布 図 文字 列 データ ラベル 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
データ 双方向 キュー 番目 挿入 する	deq.insert(n, element)
イテラブル と列 チェイン する	itertools.chain(iterable, iterable2)
折れ線 グラフ 星 マーカー 黄色く する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
数 負 数 調べる	x < 0
ヒストグラム 色 グレー 設定 する	plt.hist(データ列, color='grey')
ワーキング ディレクトリ 変更 する	os.chdir(os.dirname(filepath))
オプション 先頭 カラム インデックス 増やす	index_col = 0
データ フレーム 表示 する とき カラム 最大 幅 指定 する	pd.set_option('max_colwidth', n)
ベージュ 色 ヒストグラム 描画 する	plt.hist(データ列, color='beige')
データ 列 折れ線 グラフ 描画 し 印 大 バツ 印 する	plt.plot(データ列, データ列2, marker='X')
文字 列 色 データ 列 リスト 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, color=s)
ヒストグラム 描画 し その 色 小麦色 設定 する	plt.hist(データ列, color='wheat')
ハッシュ 値 求める	hash(x)
ファイル ディレクトリ 名 ファイル 名 分割 する	os.path.split(filepath)
文字 列 開始 位置 以降 部分 文字 列 ない	s.find(sub, start) == -1
散布 図 カラー コード クロス マーカー 描く	plt.plot(xdata, ydata, marker='x', c=rgb)
組 要素 昇順 並べる	sorted(aTuple, reverse=False)
オプション ブルー バイオレット 色 使う	color = 'blueviolet'
オプション グラフ 色 アリスブルー セット する	color = 'aliceblue'
フォーマット データ 列 日付 データ する	pd.to_datetime(ds, format='%Y-%m-%d')
ヒストグラム 描画 し その 色 グリーン イエロー 変更 する	plt.hist(データ列, color='greenyellow')
ヒストグラム 描画 し その 色 ピンク 設定 する	plt.hist(データ列, color='pink')
実線 つける	plt.axhline(y=0, linestyle='solid')
異なる 列 キー データ フレーム 右 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
色 差別 ない 色 リスト 配列 散布 図 描画 する	plt.plot(xdata, ydata, c='colorblind')
データ フレーム 列 値 グループ 化 し それぞれ グループ 毎 標準 偏差 求める	df.groupby(column).std()
文字 列 中 ひとつ 非 アスキー 文字 ある 調べる	any(not c.isascii() for c in s)
データ フレーム カラム 文字 列 欠損 値 変換 する	df[col].replace(s, np.nan)
文字 列 番目 文字 使う	s[n]
線 グラフ 描画 し その 色 コーンフラワーブルー 設定 する	plt.plot(データ列, データ列2, color='cornflowerblue')
文字 列 漢字 テスト する	('\u4E00' <= ch <= '\u9FD0')
配列 リスト 散布 図 カラー コード ポイント マーカー 描く	plt.plot(xdata, ydata, marker='.', c=rgb)
ヒストグラム 描画 し その 色 パウダー ブルー 変更 する	plt.hist(データ列, color='powderblue')
オブジェクト リスト 含ま れ ない	element not in aList
キュー 中 値 インデックス 使う	deq.index(element)
カウンタ 項目 増やす	aCounter[element] += 1
データ フレーム 数値 まとめ 整数 丸める	df.round()
ファイル パス バイナリ 書き込み モード 使っ オープン する	open(filepath, mode='wb')
データ フレーム 行 目 行 目 取り出す	df[start:end]
データ フレーム 値 まとめ 置き換える	df.replace(ValueMap)
ヒストグラム 描画 し 色 ラベンダー ブラッシュ 設定 する	plt.hist(データ列, color='lavenderblush')
リスト 各 要素 関数 適用 し た 結果 ソート する	sorted(aList, key=func)
真 上位 集合 どう 調べる	aSet > aSet2
赤い ポイント マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='.', c='r')
シルバー 色 ヒストグラム 描画 する	plt.hist(データ列, color='silver')
二つ 文字 列 等しい	s == s2
オプション マゼンタ グラフ 色 変更 する	color = 'magenta'
	' '
文字 列 空白 分割 し 文字 列 リスト する	s.split()
データ フレーム リスト 列 モード	df[aList].mode()
リスト リスト 散布 図 描画 し マーカー 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, c='colorblind')
オプション 黄色 グラフ 色 変更 する	color = 'yellow'
自然 数 個 個 取り出し た 時 並べ方 総数 求める	math.perm(n, k)
折れ線 グラフ 色 ダーク グレー 変更 する	plt.plot(データ列, データ列2, color='darkgrey')
グラフ 横 軸 軸 名 付ける	plt.xlabel(untitled)
データ フレーム カラム 最 頻 値 設定 する	df[col].fillna(df[col].mode().iloc[0])
ヒストグラム 描画 し その 色 ダーク グレー 指定 する	plt.hist(データ列, color='darkgray')
データ 列 欠損 値 最小 値 補う	ds.fillna(ds.min())
ユニーク な 要素 ごと 頻度	np.unique(aArray, return_counts=True)
昇順 データ フレーム 列 整列 する	df.sort_values(by='A', ascending=True)
グラフ 描画 見やすく する	import seaborn as sns
折れ線 グラフ 色 ライト イエロー 変更 する	plt.plot(データ列, データ列2, color='lightyellow')
オプション グラフ 色 ダーク バイオレット 設定 する	color = 'darkviolet'
データ フレーム 列 値 大きい 行 抽出 する	df[df[column] > x]
ヒストグラム 描画 し 色 ミディアムブルー 設定 する	plt.hist(データ列, color='mediumblue')
データ フレーム つ 列 値 グループ 化 し 要約 統計 量 算出 する	df.groupby(['A', 'B']).describe()
双方向 キュー 番目 要素 挿入 する	deq.insert(n, element)
パールバイオレットレッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='palevioletred')
イテラブル 文字 列 リスト 変換 し 空白 連結 する	' '.join(map(str, iterable))
オプション ミディアムアクアマリン 色 使う	color = 'mediumaquamarine'
折れ線 グラフ 描画 し 色 シルバー セット する	plt.plot(データ列, データ列2, color='silver')
ヒストグラム 描画 し その 色 ミディアムオーキッド 設定 する	plt.hist(データ列, color='mediumorchid')
日付 データ 日 前 戻す	aDate - datetime.timedelta(days=n)
オプション グラフ 色 ゴールド 設定 する	color = 'gold'
データ 列 イテラブル 青色 暗い グラフ プロット する	plt.plot(xdata, ydata, linestyle='dark', color='b')
折れ線 グラフ マーカー 青く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
データ フレーム 列 集約 し それぞれ グループ ごと 平均 値 求める	df.groupby(column).mean()
オプション データ 型 指定 する	dtype = np.int32
ヒストグラム 用い 配列 可視 化 する	plt.hist(aArray)
レベッカパープル 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='rebeccapurple')
文字 列 中 部分 文字 列 探す	s.find(sub)
カウンタ 和 集合 演算 する	aCounter | aCounter2
線 グラフ 色 黄色 設定 する	plt.plot(データ列, データ列2, color='yellow')
列 イミュータブル な 集合	frozenset(iterable)
線 グラフ 色 ライトゴールドロディイエロー 変更 する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
線 グラフ 描画 し その 色 オレンジ レッド 変更 する	plt.plot(データ列, データ列2, color='orangered')
ファイル パス ディレクトリ 名 取り出す	os.path.dirname(filepath)
データ フレーム それぞれ グループ ごと 標準 偏差	df.groupby(column).std()
データ 列 使う	import pandas as pd
全 要素 初期 化 さ れ た 行列	np.ones(行数, 列数, dtype=np.int)
行列 値	aArray[行番号, 列番号]
ファイル 追加 用 オープン し する	f = open(filepath, mode='a')
両端 キュー イテラブル 作る	collections.deque(iterable)
データ フレーム 各 列 毎 グループ 化 し 列 標準 偏差 求める	df.groupby(column)[column2].std()
日付 時刻 データ 日	aDatetime.day
データ フレーム 丸める	df.round()
異なる カラム キー つ データ フレーム 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
リスト リスト 散布 図 描画 し マーカー 丸 設定 する	plt.plot(xdata, ydata, marker='o')
ファイル 書き込み 用 オープン する	open(filepath, mode='w', encoding='shift_jis')
タプル 文字 列 最初 見つかる インデックス	aTuple.index(element)
オプション 色 ダーク カーキ セット する	color = 'darkkhaki'
オプション 小麦色 色 用いる	color = 'wheat'
カラム 丸め 整数 型 する	ds.round().astype(int)
オプション グラフ 色 トマト 設定 する	color = 'tomato'
データ フレーム カラム 欠損 値 指定 する	df[col].fillna(x)
データ フレーム カラム 位 丸め 整数 型 する	df[col].round(-3).astype(int)
ファイル パス 書き込み モード オープン し する	f = open(filepath, mode='w')
折れ線 グラフ 黒い クロス マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
タプル 先頭	aTuple[0]
オプション グラフ 色 コーンズシルク 変更 する	color = 'cornsilk'
データ フレーム 表示 する とき 列 データ フレーム 表示 可能 な よう する	pd.set_option('display.max_columns', n)
要素 セット 要素 含ま れる 判定 する	element in aSet
ヒストグラム 描画 し 色 ドジャーブルー する	plt.hist(データ列, color='dodgerblue')
オプション グラフ 色 スラグレー 設定 する	color = 'slategray'
データ フレーム 各 列 列 組み合わせ 毎 集約 し 最大 値 求める	df.groupby([column, column2], as_index=False).max()
データ フレーム 百 位 四捨五入 し 整数 型 する	df.round(-2).astype(int)
破線 折れ線 グラフ スタイル 設定 する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線 グラフ 色 ローン グリーン 設定 する	plt.plot(データ列, データ列2, color='lawngreen')
配列 リスト 黒い 明るい プロット する	plt.plot(xdata, ydata, linestyle='bright', color='k')
折れ線 グラフ 色 ダーク カーキ 変更 する	plt.plot(データ列, データ列2, color='darkkhaki')
日付 時刻 データ 日 減算 する	aDatetime - datetime.timedelta(days=n)
全て 句読点 文字	string.punctuation
データ 列 中 文字 列 文字 列 ある 調べる	ds.isin([value, value2])
列 データ フレーム グループ 化 し 各 グループ 毎 平均 値 求める	df.groupby(column).mean()
茶色 色 ヒストグラム 描画 する	plt.hist(データ列, color='brown')
オプション モカシン 色 設定 する	color = 'moccasin'
今日 タイム スタンプ	datetime.datetime.now()
オプション アンティーク ホワイト 使用 する	color = 'antiquewhite'
リスト 配列 破線 グラフ プロット し その 色 パステル 調 の 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
ヒストグラム 描画 し 色 イエロー グリーン 設定 する	plt.hist(データ列, color='yellowgreen')
ヒストグラム 描画 し その 色 ライト イエロー 変更 する	plt.hist(データ列, color='lightyellow')
線 グラフ 描画 し その 色 オリベドラブ 設定 する	plt.plot(データ列, データ列2, color='olivedrab')
オプション トマト 色 設定 する	color = 'tomato'
本日 日付 時刻 使う	datetime.datetime.today()
イテラブル リスト 淡い プロット し その 色 黒く する	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ フレーム 欠損 値 設定 する	df.fillna(x)
文字 列 中 部分 文字 列 文字 列 置換 する	s.replace(sub, newsub)
散布 図 カラー コード 菱形 マーカー 描画 する	plt.plot(xdata, ydata, marker='D', c=rgb)
文字 列 全体 パターン 限定 マッチ する 調べる	re.fullmatch(pattern, s, flags=re.ASCI)
データ フレーム リスト 列 正規 分布 どの 程度 歪ん いる 見る	df[aList].kurt()
データ フレーム リスト 列 中 未 入力 値 数 求める	df[aList].isna().sum()
ユーザ 整数 入力 する	int(input())
タプル 倍する	aTuple * n
カンマ 文字 列 分割 し 文字 列 リスト する	s.split(',')
列 上限 両端 キュー 作る	collections.deque(iterable, maxlen=n)
行列 最大 値	np.max(aArray)
リスト リスト 色 差別 ない 色 折れ線 グラフ プロット し その 線 幅 セット する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
異なる 列 キー データ フレーム 右 ジョイン する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なる 列 キー つ データ フレーム 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
オプション タン 用いる	color = 'tan'
折れ線 グラフ 色 ダークマゼンタ 変更 する	plt.plot(データ列, データ列2, color='darkmagenta')
データ フレーム 表示 する とき データ フレーム 行 表示 できる よう する	pd.set_option('display.max_rows', n)
淡い リスト 柱状 図 描画 する	plt.hist(xdata, color='muted')
ファイル ファイル 名 使う	os.path.basename(filepath)
一 桁 数 どう	-9 <= x <= 9
データ 列 未 入力 値 最大 値 指定 する	ds.fillna(ds.max())
折れ線 グラフ 色 サドル ブラウン 設定 する	plt.plot(データ列, データ列2, color='saddlebrown')
中央 値 データ フレーム 中 カラム ビンニング する	pd.qcut(df[col], 2)
カラー コード 棒 色 変更 する	plt.bar(ラベル列, データ列, color=rgb)
リスト リスト 色 差別 ない グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
折れ線 グラフ 描画 し マーカー ポイント 印 する	plt.plot(データ列, データ列2, marker='.')
データ 列 ラベル 列 指定 し 横 棒 描画 する	plt.barh(ラベル列, データ列)
ライトスカイブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightskyblue')
文字 列 先頭 大文字 化 する	s.capitalize()
ファイル 存在 する 調べる	os.path.exists(filepath)
オプション グラフ 色 茶色 設定 する	color = 'brown'
オブジェクト バイト サイズ	sys.getsizeof(obj)
最大 値	max(x, y, z)
日付 時刻 データ 週間 分 加算 する	aDatetime + datetime.timedelta(weeks=n)
明るい 用い 柱状 図 プロット する	plt.hist(xdata, color='bright')
データ フレーム 列 と列 キー 右 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
折れ線 グラフ 四角 印 赤く する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
リスト リスト 散布 図 黒い 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='k')
ヒストグラム 描画 し その 色 ミント クリーム 変更 する	plt.hist(データ列, color='mintcream')
文字 列 サフィックス 部分 文字 列	s.endswith(sub)
折れ線 グラフ 描画 し その 色 ナバホホワイト セット する	plt.plot(データ列, データ列2, color='navajowhite')
オブジェクト 無限 繰り返す イテラブル	itertools.repeat(element)
配列 ビン 数 ビン 分割 し ラベル つける	pd.cut(aArray, n, labels=names)
データ 列 リスト 散布 図 色 差別 ない 色 描画 する	plt.plot(xdata, ydata, c='colorblind')
データ フレーム 列 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(column)]
オプション マーカー 下 三角 変更 する	marker = 'v'
オプション 濃い シアン グラフ 色 変更 する	color = 'darkcyan'
折れ線 グラフ 描画 し 色 ゴースト ホワイト セット する	plt.plot(データ列, データ列2, color='ghostwhite')
行列 行列 積	np.matmul(aArray, aArray2)
列 名 指定 さ れ た 列 名 一覧 置き換える	df.columns = columns
列 両端 キュー 変換 する	collections.deque(iterable)
ファイル バイナリ 書き込み ストリーム オープン し する	f = open(filepath, mode='wb')
オプション バッファ サイズ 小さく する	buffering = 4096
散布 図 赤い 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c='r')
改行 せ ず 文字 列 プリント する	print(value, end='')
折れ線 グラフ 描画 し 色 ライトゴールドロディイエロー 設定 する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
データ フレーム 列 選択 する	df[[column, column2, column3, column4]]
折れ線 グラフ 描画 し その 色 ラベンダー ブラッシュ 変更 する	plt.plot(データ列, データ列2, color='lavenderblush')
データ フレーム 十 位 四捨五入 し 整数 型 する	df.round(-1).astype(int)
カラム 最大 幅 指定 する	pd.set_option('max_colwidth', n)
リスト リスト 折れ線 アルファ 値 描画 する	plt.plot(xdata, ydata, alpha=alpha)
リスト 辞書	dict(zip(aList, aList2))
ファイル オープン し バイナリ ストリーム 使う	open(filepath, mode='rb')
ヒストグラム 描画 し 色 シアン 設定 する	plt.hist(データ列, color='cyan')
データ フレーム 列 ドロップ し 更新 する	df.drop(column, axis=1, inplace=True)
データ 列 折れ線 グラフ 描画 し マーカー ダイアモンド 印 する	plt.plot(データ列, データ列2, marker='D')
イテラブル 数列 暗い 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
赤い 丸 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
明るい 折れ線 色 カラー コード 指定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
文字 列 変数 し 変数 する	z = sympy.Symbol(s)
二つ 集合 共通 要素 更新 する	aSet.intersection_update(aSet2)
タイムスタンプデータ 秒 分 加算 する	aDatetime + datetime.timedelta(seconds=n)
文字 列 漢字	('\u4E00' <= ch <= '\u9FD0')
書式 データ フレーム 型 変換 する	pd.to_datetime(df[col], format=fmt)
リスト リスト 散布 図 暗い 色 描画 する	plt.plot(xdata, ydata, c='dark')
ヒストグラム 色 ブラック する	plt.hist(データ列, color='black')
プロット 明るく する	sns.set(pallete='bright')
線 グラフ 色 ディープスカイブルー 設定 する	plt.plot(データ列, データ列2, color='deepskyblue')
ヒストグラム 色 スプリング グリーン 変更 する	plt.hist(データ列, color='springgreen')
データ フレーム 各 列 毎 グループ 化 し 列 平均 値 求める	df.groupby(column)[column2].mean()
棒 描画 し グラフ 幅 設定 する	plt.bar(ラベル列, データ列, width=x)
オプション 丸 印 加える	marker = 'o'
データ フレーム 中 欠損 値 合計 数える	df.isna().sum()
ヒストグラム 描画 し その 色 ミディアムスプリンググリーン 指定 する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラム 横 並べ 描画 する	plt.hist([データ列, データ列2], color=['b', 'r'])
文字 列 内 ひとつ 英字 含ま れる 調べる	any(c.isalpha() for c in s)
データ フレーム カラム 何 月 見る	df[col].dt.month
キュー 最初 値 取り除く	deq.remove(element)
最大 行 数 変更 する	pd.set_option('display.max_rows', n)
等しい 調べる	n == n2
データ フレーム 列 位 丸め 整数 型 する	df[col].round(-2).astype(int)
データ フレーム 列 ソート し 新しい インデックス 加える	df.sort_values(columns).reset_index()
オプション エン コーディング 変更 する	encoding = 'shift_jis'
折れ線 グラフ 描画 し その 色 アリスブルー 設定 する	plt.plot(データ列, データ列2, color='aliceblue')
オプション カンマ セパレータ 使用 する	sep = ','
ヒストグラム 描画 し その 色 インディアン レッド セット する	plt.hist(データ列, color='indianred')
イテラブル リスト 散布 図 黒い 右 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='>', c='k')
表 内 欠損 値 ある 行 落とす	df.dropna()
オプション シルバー 使う	color = 'silver'
データ 列 欠損 値 平均 値 埋める	ds.fillna(ds.mean())
データ フレーム リスト カラム 位 四捨五入 し 整数 する	df[aList].round(-3).astype(int)
カウンタ 要素 カウント	aCounter[element]
ヒストグラム 描画 し その 色 インディアン レッド する	plt.hist(データ列, color='indianred')
リスト ヒストグラム 描画 する	plt.hist(aList)
データ フレーム カラム カラム 折れ線 描画 する	plt.plot(df[col], df[col2])
オプション ホワイトスモーク 色 変更 する	color = 'whitesmoke'
データ フレーム カラム 位 丸め 整数 する	df[col].round(-3).astype(int)
データ フレーム 列 標本 標準 偏差	df[col].std()
データ フレーム 数値 小数点 以下 桁 丸める	df.round(n)
進 数字 全部 求める	string.octdigits
ヒストグラム 描画 し その 色 ホワイト 設定 する	plt.hist(データ列, color='white')
正弦 逆数 計算 する	math.asin(x)
イテラブル リスト 散布 図 描画 し ポイント マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='.', c=rgb)
データ フレーム 指定 さ れ た 列 抽出 する	df[column]
オプション グラフ 色 マルーン 設定 する	color = 'maroon'
有理数 分子	q.numerator
黒色 四角 マーカー 散布 図 使用 する	plt.plot(xdata, ydata, marker='s', c='k')
深紅 ヒストグラム 色 する	plt.hist(データ列, color='crimson')
折れ線 グラフ バツ 印 緑色 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
散布 図 右 三 角 マーカー 使用 する	plt.plot(xdata, ydata, marker='>')
オプション グラフ 色 ライト ブルー 指定 する	color = 'lightblue'
オプション ペルー グラフ 色 設定 する	color = 'peru'
データ フレーム リスト 列 正規 分布 どの 程度 尖っ いる 見る	df[aList].skew()
データ フレーム リスト カラム 中 いくつ 欠損 値 ある 数える	df[aList].isna().sum()
データ フレーム 列 昇順 ソート し 更新 する	df.sort_values(by='A', ascending=True, inplace=True)
リスト 全 要素 取り除く	aList.clear()
リスト 番目 番目 部分	aList[n:n2]
オプション ライトグリーン 色 用いる	color = 'lightgreen'
以上 確認 する	n >= n2
両端 キュー 中 要素 含ま れ てる 調べる	element in deq
日付 データ 秒 分 減らす	aDate - datetime.timedelta(seconds=n)
散布 図 丸 マーカー 使っ 描画 する	plt.plot(xdata, ydata, marker='o')
データ フレーム 列 一つ 選択 する	df[[column]]
ヒストグラム 描画 し その 色 淡い ピンク色 する	plt.hist(データ列, color='lightpink')
文字 列 最後 部分 文字 列 二分 し 後半 文字 列 使う	s.rpartition(sub)[-1]
ヒストグラム 描画 し その 色 ホット ピンク 変更 する	plt.hist(データ列, color='hotpink')
文字 コード ファイル 追加 できる よう 開く	open(filepath, mode='a', encoding=text)
集合 何 いい ひとつ 取り出す	aSet.pop()
データ フレーム 列 列 相関 行列 ピアソン 相関 係数	df[[column, column2]].corr(method='pearson')
ヒストグラム 描画 し 色 コーンズシルク 設定 する	plt.hist(データ列, color='cornsilk')
コンビネーション 計算 する	math.comb(n, k)
グラフ 横 軸 ラベル 設定 する	plt.xlabel(untitled)
ヒストグラム 描画 し 色 ペルー 指定 する	plt.hist(データ列, color='peru')
データ フレーム 列 ソート する	df.sort_values(by=column)
データ フレーム リスト カラム 欠損 値 最大 値 設定 する	df[aList].fillna(df[aList].max())
オプション シーグリーン 色 使用 する	color = 'seagreen'
データ フレーム 行 列 消す	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 最小 値 求める	df.groupby([column, column2], as_index=False).min()
マイナス	n - n2
縦 棒グラフ 描画 し 中央 寄せ する	plt.bar(ラベル列, データ列, align='center')
散布 図 赤い 四角 マーカー 用いる	plt.plot(xdata, ydata, marker='s', c='r')
スチール ブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='steelblue')
データ フレーム それぞれ グループ ごと 最大 値 求める	df.groupby(column).max()
データ フレーム 先頭 行	df.head(n)
キュー 末尾 文字 列 付け加える	deq.append(element)
カウンタ ゼロ 回 数 取り除く	+aCounter
折れ線 グラフ 描画 し 印 下 三角 印 する	plt.plot(データ列, データ列2, marker='v')
スピアマン データ フレーム リスト カラム 相関 行列 求める	df[aList].corr(method='spearman')
整数 バイト 列 変換 する	n.to_bytes(length=bytesize, byteorder='big')
ライト サーモン ヒストグラム 色 する	plt.hist(データ列, color='lightsalmon')
もしくは	x == 1 or x == 2
正規 表現 文字 列 分割 する	re.split(pattern, s)
リスト イテラブル 散布 図 描画 し 右 三 角 マーカー 色 カラー コード 変更 する	plt.plot(xdata, ydata, marker='>', c=rgb)
折れ線 グラフ 丸 マーカー 線 幅 する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線 グラフ 描画 し その 色 サーモン 変更 する	plt.plot(データ列, データ列2, color='salmon')
リスト 配列 折れ線 描い その 色 カラー コード 設定 する	plt.plot(xdata, ydata, color=rgb)
データ フレーム リスト カラム 値 欠損 値 調べる	df[aList].isna()
パス ディレクトリ 追加 する	sys.path.append(dir)
双方向 キュー 大き さ	len(deq)
折れ線 グラフ 描画 し その 色 アンティーク ホワイト 設定 する	plt.plot(データ列, データ列2, color='antiquewhite')
赤色 ポイント マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c='r')
リスト 明るい 色 柱状 図 描く	plt.hist(xdata, color='bright')
線 グラフ 描画 し その 色 ビスク 設定 する	plt.plot(データ列, データ列2, color='bisque')
オプション グラフ 色 イエロー グリーン 設定 する	color = 'yellowgreen'
辞書 カウンタ 作る	collections.Counter(aDict)
折れ線 グラフ 色 パレットトルコイズ 設定 する	plt.plot(データ列, データ列2, color='paleturquoise')
グラフ サイズ 縦 横 設定 する	plt.figure(figsize=(width, height))
日付 時刻 データ 日数	aDatetime.day
グラフ 中 縦 軸 名前 設定 する	plt.ylabel(untitled)
数列 リスト 散布 図 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s')
オプション グラフ 色 クリムゾン 設定 する	color = 'crimson'
線 グラフ 色 青 変更 する	plt.plot(データ列, データ列2, color='blue')
リスト ヒストグラム 用い 可視 化 する	plt.hist(aList)
データ フレーム 列 用い で 大きい 順 並べ 直す	df.sort_values(by='A', ascending=False)
イテラブル 累積 し た イテラブル	itertools.accumulate(iterable, operator.mul)
オプション ブランチドアーモンド 色 用いる	color = 'blanchedalmond'
破壊 的 列 用い 降順 データ フレーム 並べ 直す	df.sort_values(by='A', ascending=False, inplace=True)
データ フレーム 列 値 まとめ た グループ 見る	df.groupby('A')
数列 リスト 折れ線 描画 し その 色 カラー コード 設定 する	plt.plot(xdata, ydata, color=rgb)
データ フレーム カラム 名 列挙 する	df.columns
グラフ 全般 的 淡く する	sns.set(pallete='muted')
列 キー し 二つ データ フレーム 結合 する	pd.merge(df, df2, on=column)
ヒストグラム 描画 し その 色 ダークスレートブルー 指定 する	plt.hist(データ列, color='darkslateblue')
リスト 配列 淡い グラフ 描画 し その 色 黒色 設定 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ 列 等量 個 ビン 分割 する	pd.qcut(ds, n)
データ フレーム カラム 欠損 値 最 頻 値 設定 する	df[col].fillna(df[col].mode().iloc[0])
データ 列 何 分 確認 する	ds.dt.minute
右 個 分 キュー 要素 ロー テンション する	deq.rotate(n)
文字 列 出力 改行 なし 行う	print(value, end='')
ひとつ 非 数字 文字 列 中 含ま れる どう 調べる	any(not c.isdigit() for c in s)
データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
折れ線 グラフ 描画 し その 色 茶色 設定 する	plt.plot(データ列, データ列2, color='brown')
オプション フローラルホワイト 色 使う	color = 'floralwhite'
カウンタ ゼロ カウント 取り除く	+aCounter
実数 双曲線 正弦	math.sinh(x)
ゴールド 色 ヒストグラム 描画 する	plt.hist(データ列, color='gold')
データ フレーム カラム 標準 偏差	df[col].std()
実数 乗	x ** 2
前 行 値 列 欠損 値 埋める	ds.fillna(method='ffill')
ヒストグラム 色 ブラック 設定 する	plt.hist(データ列, color='black')
数式 展開 する	sympy.expand(e)
ヒストグラム 色 オレンジ 変更 する	plt.hist(データ列, color='orange')
オブジェクト プロパティ 取り除く	delattr(obj, プロパティ名)
リスト 最初 文字 列 探す	aList.index(element)
ファイル パス バイナリ モード オープン し する	f = open(filepath, mode='rb')
データ 列 リスト 散布 図 赤い 丸 マーカー 描く	plt.plot(xdata, ydata, marker='o', c='r')
今日 何 曜日 知る	datetime.datetime.today().weekday()
オブジェクト 文字 列 どう 調べる	isinstance(obj, str)
暗い グラフ データ 列 配列 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
ヒストグラム 色 黄色く する	plt.hist(データ列, color='y')
日付 データ 日付 データ 前 調べる	aDate < aDate2
ヒストグラム 描画 し 色 カーキ 設定 する	plt.hist(データ列, color='khaki')
オールド レース 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='oldlace')
カウンタ 共通 する 要素 求める	aCounter & aCounter2
文字 列 中 タブ 文字 空白 置き換える	s.expandtabs(tabsize=n)
リスト リスト 散布 図 黒い ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.', c='k')
ファイル ファイル 番目 列 行 し 読み込む	pd.read_csv(filename, index_col=n)
本日 木曜日	datetime.datetime.today().weekday() == 3
ファイル オープン する	open(filepath)
文字 列 接尾 辞 部分 文字 列 調べる	s.endswith(sub)
オブジェクト リスト クラス インスタンス	isinstance(obj, list)
日付 データ する	pd.to_datetime(dateString)
オプション 列 名 設定 する	names = names
デック 番目 部分 要素	collections.deque(itertools.islice(deq, start, end))
もしくは	x == 1 or x == 2
ファイル 名 セパレータ 記号	os.sep
線 グラフ 色 パールゴールデンロッド する	plt.plot(データ列, データ列2, color='palegoldenrod')
実数 負 数 調べる	x < 0
リスト 配列 変換 する	np.array(aList)
データ フレーム 列 整列 し インデックス 振り 直す	df.sort_values(columns).reset_index(drop=True)
ファイル パス 拡張 子 なし ファイル 名 使う	os.path.splitext(os.path.basename(filepath))[0]
オプション ロイヤル ブルー 色 用いる	color = 'royalblue'
八 進 文字 列 バイト バイト 列 変換 する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
オプション スレート ブルー 色 使う	color = 'slateblue'
タイムスタンプデータ 週間 分 加算 する	aDatetime + datetime.timedelta(weeks=n)
リスト リスト 濃い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
リスト 末尾 要素 捨てる	aList[:-n]
データ フレーム リスト カラム 欠損 値 最 頻 値 置き換える	df[aList].fillna(df[aList].mode().iloc[0])
ボックス チャート 並べ 描画 する	plt.boxplot([データ列, データ列2])
データ フレーム 列 並べ 直し 下 方 取り出す	df.sort_values(columns).tail(n)
データ 列 中 いくつ 含ま れる 数える	ds.isin([value]).sum()
両端 キュー 中 値 数える	deq.count(element)
折れ線 グラフ ダイアモンドマーカー 大き さ 指定 する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線 グラフ 描画 し その 色 ラベンダー ブラッシュ 設定 する	plt.plot(データ列, データ列2, color='lavenderblush')
オプション グラフ 色 ライトゴールドロディイエロー 変更 する	color = 'lightgoldenrodyellow'
リスト リスト 散布 図 黒い 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c='k')
両端 キュー ポップ する	deq.pop()
タプル 番目 番目 部分	aTuple[n:n2]
個 データ 列 等間隔 ビニング する	pd.cut(ds, n)
折れ線 グラフ 星 印 使用 する	plt.plot(データ列, データ列2, marker='*')
ヒストグラム リスト 可視 化 する	plt.hist(aList)
オプション グラフ 色 指定 する	color = 'darkslategrey'
全 要素 初期 化 さ れ た 配列	np.zeros(要素数)
データ フレーム リスト カラム 欠損 値 後 値 設定 する	df[aList].fillna(method='bfill')
ファイル 読み込み モード オープン し する	f = open(filepath, mode='r')
タプル 最後	aTuple[-1]
イテラブル データ 列 色 差別 ない 色 折れ線 グラフ 描き その 線 幅 セット する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
紺碧 ヒストグラム 色 指定 する	plt.hist(データ列, color='azure')
淡い グラフ 色 赤 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
データ 列 何 秒 見る	ds.dt.second
データ 列 折れ線 グラフ 描画 し 印 星 印 する	plt.plot(データ列, データ列2, marker='*')
リスト 数列 散布 図 描き 四角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='s', c=rgb)
現在 秒 使う	datetime.date.today().second
棒グラフ 幅 指定 する	plt.bar(ラベル列, データ列, width=x)
データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col])
ヒストグラム 透明 度 設定 する	plt.hist(データ列, alpha=x)
グリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='green')
線 グラフ 描画 し その 色 ライト ブルー 設定 する	plt.plot(データ列, データ列2, color='lightblue')
散布 図 赤い 大 バツ マーカー 使用 する	plt.plot(xdata, ydata, marker='X', c='r')
ヒストグラム 描画 し 色 青 紫 設定 する	plt.hist(データ列, color='violet')
リスト ランダム シャッフル する	random.shuffle(aList)
カウンタ タプル 生成 する	collections.Counter(aDict)
データ 列 ラベル 列 指定 し 積み上げ 棒グラフ 描画 する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
列 データ フレーム まとめ た グループ	df.groupby(column)
データ フレーム 読み込む	pd.read_csv(filename, sep='\t')
日付 時刻 データ 日付 時刻 データ 時間 差 算出 する	aDatetime - aDatetime2
ファイル パス オープン し 追加 ストリーム 使う	open(filepath, mode='a')
データ 列 折れ線 グラフ 描画 し マーカー 印 する	plt.plot(データ列, データ列2, marker='v')
折れ線 グラフ 描画 し その 色 ブランチドアーモンド 指定 する	plt.plot(データ列, データ列2, color='blanchedalmond')
データ フレーム 値 正規 表現 まとめ 置き換える	df.replace(pattern, repl, regex=True)
文字 列 最後 部分 文字 列 分け た とき 前半 文字 列	s.rpartition(sub)[0]
配列 形状	aArray.shape
列 データ フレーム ソート し 上位 件 取り出す	df.sort_values(columns).head(n)
折れ線 グラフ 描画 し その 色 モカシン 設定 する	plt.plot(データ列, データ列2, color='moccasin')
フォーマット 文字 列 日付 データ する	pd.to_datetime(s, format='%Y-%m-%d')
日付 データ 水曜日 テスト する	aDate.weekday() == 2
折れ線 グラフ 黒い 四角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
シャルトリューズ ヒストグラム 色 設定 する	plt.hist(データ列, color='chartreuse')
リスト 配列 散布 図 濃い 色 描く	plt.plot(xdata, ydata, c='deep')
イテラブル リスト 散布 図 描画 し マーカー ダイアモンド 設定 する	plt.plot(xdata, ydata, marker='D')
以上 かつ 以下 調べる	n <= n2 and n2 <= n3
カウンタ キー ひとつ 増やす	aCounter[element] += 1
オプション 色 暗い 赤 する	color = 'darkred'
データ フレーム 関数 グループ 化 し 記述 統計 量 計算 する	df.groupby(関数).describe()
文字 列 回数 制限 し 置換 する	s.replace(sub, newsub, n)
ミディアムスプリンググリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='mediumspringgreen')
リスト リスト 淡い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
パステル 調 色 データ 列 データ 列 散布 図 プロット する	plt.plot(xdata, ydata, c='pastel')
ヒストグラム 描画 し その 色 ミッドナイト ブルー 設定 する	plt.hist(データ列, color='midnightblue')
データ フレーム 読み込む	pd.read_csv(filename, sep='\t')
グラフ 中 日本語 フォント 有効 する	sns.set(font='IPAexGothic')
データ フレーム 表示 する とき 小数点 以下 表示 精度 設定 する	pd.set_option('precision', n)
散布 図 カラー コード 右 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='>', c=rgb)
増加 さ せる	n += n2
線 グラフ 描画 し その 色 ダークスラテグレー 設定 する	plt.plot(データ列, データ列2, color='darkslategray')
データ フレーム カラム 要約 統計 量 求める	df[col].describe()
ディムグレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='dimgrey')
リスト 数列 濃い グラフ プロット し 色 黒 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
散布 図 黒い 星 マーカー 使う	plt.plot(xdata, ydata, marker='*', c='k')
オプション ダーク サーモン 使う	color = 'darksalmon'
ファイル パス 文字 コード 書き込み できる よう オープン する	open(filepath, mode='w', encoding=text)
データ フレーム 中 ある 行 削除 する	df.dropna()
データ フレーム 先頭 行 見る	df.head(n)
折れ線 グラフ 描画 し その 色 アンティーク ホワイト 指定 する	plt.plot(データ列, データ列2, color='antiquewhite')
オプション マゼンタ グラフ 色 設定 する	color = 'magenta'
セット 組 変換 する	tuple(aSet)
青い 菱形 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線 グラフ 描画 し 色 オールド レース 設定 する	plt.plot(データ列, データ列2, color='oldlace')
配列 リスト 色 差別 ない グラフ プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
線 グラフ 色 ライト シアン 設定 する	plt.plot(データ列, データ列2, color='lightcyan')
濃い 色 柱状 図 配列 描画 する	plt.hist(xdata, color='deep')
データ フレーム 各 列 列 組み合わせ 毎 グループ 分け し 平均 値 求める	df.groupby([column, column2], as_index=False).mean()
データ フレーム 使用 する	import pandas as pd
折れ線 グラフ 描画 し 色 イエロー グリーン セット する	plt.plot(データ列, データ列2, color='yellowgreen')
オプション 先頭 列 インデックス 設定 する	index_col = 0
折れ線 グラフ 色 ライト シアン 設定 する	plt.plot(データ列, データ列2, color='lightcyan')
書き込み 用 文字 コード ファイル オープン する	open(filepath, mode='w', encoding=text)
データ 列 中 いくつ 未 入力 値 ある カウント する	ds.isna().sum()
データ フレーム ファイル 読み込む	pd.read_json(filename, orient='records', lines=True)
線 グラフ 描画 し 色 ライト グレー 指定 する	plt.plot(データ列, データ列2, color='lightgrey')
無限 な 数列	itertools.repeat(n)
折れ線 グラフ 色 ミディアムブルー する	plt.plot(データ列, データ列2, color='mediumblue')
柱状 図 半 透明 する	plt.hist(データ列, alpha=0.5)
リスト リスト 濃い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
真 調べる	bool(x)
オプション トマト 使う	color = 'tomato'
ヒストグラム 色 スチール ブルー 設定 する	plt.hist(データ列, color='steelblue')
次元 リスト 転置 行列	[list(x) for x in list(zip(*aList))]
マップ 内部 コピー する	{k: copy.copy(v) for k, v in aDict.items()}
ふたつ 集合 集合 交わり 持た ない 調べる	aSet.isdisjoint(aSet2)
オプション ダイアモンド 印 加える	marker = 'D'
等しい どう	n == n2
スタック 空 する	deq.clear()
リスト 周期 的 繰り返す	itertools.cycle(iterable)
始まる 個 整数 列 作る	list(range(n))
散布 図 ダイアモンドマーカー 使う	plt.plot(xdata, ydata, marker='D')
オプション ライト グレー 色 用いる	color = 'lightgray'
折れ線 グラフ 下 三角 マーカー 大き さ 変更 する	plt.plot(データ列, データ列2, marker='v', markersize=n)
データ フレーム 重複 し た 行 ドロップ し 更新 する	df.drop_duplicates(inplace=True)
データ フレーム 中 文字 列 文字 列 いくつ ある 求める	df.isin([value, value2]).sum()
データ 列 イテラブル 散布 図 描画 し マーカー 色 濃い 指定 する	plt.plot(xdata, ydata, c='deep')
ヒストグラム 点線 設定 する	plt.hist(データ列, linestyle='dotted')
リスト イテラブル 青色 明るい グラフ プロット する	plt.plot(xdata, ydata, linestyle='bright', color='b')
オプション カデット ブルー 色 使う	color = 'cadetblue'
赤い 暗い 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
データ 列 折れ線 グラフ 描画 し マーカー ポイント 印 する	plt.plot(データ列, データ列2, marker='.')
折れ線 グラフ 色 インディアン レッド 変更 する	plt.plot(データ列, データ列2, color='indianred')
正規 化 さ れ た ヒストグラム 描画 する	plt.hist(データ列, density=True)
ファイル 絶対 パス	os.path.abspath(filepath)
データ フレーム 列 以上 かつ 未満 行 抽出 する	df[(x <= df[column]) & (df[column] < x2)]
グラフ 描画 色 差別 ない カラー パレット 用いる	sns.set(pallete='colorblind')
ヒストグラム 色 白 指定 する	plt.hist(データ列, color='white')
ダーク バイオレット 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkviolet')
オプション ペルー 色 用いる	color = 'peru'
書式 文字 列 日付 データ 変換 する	pd.to_datetime(s, format='%Y-%m-%d')
リスト リスト 散布 図 描画 し マーカー 色 暗い 設定 する	plt.plot(xdata, ydata, c='dark')
オプション 四角 マーカー 使用 する	marker = 's'
文字 列 右側 タブ 除く	s.rstrip('\t')
ファイル ファイル 名 見る	os.path.basename(filepath)
データ フレーム カラム 中 日付 データ 文字 列 ある	df[col].isin([value, value2])
変数 最小 値 求める	min(x, y)
カウンタ いずれ 含ま れる 値	aCounter | aCounter2
ヒストグラム 色 レモン シフォン セット する	plt.hist(データ列, color='lemonchiffon')
割り切れる 調べる	n % 3 == 0
リスト カウンタ 変換 する	collections.Counter(iterable)
ひとつ 数字 文字 列 内 含ま れる どう 確認 する	any(c.isdigit() for c in s)
リスト 最後 要素 ポップ する	aList.pop()
データ フレーム ファイル ファイル 保存 する	df.to_csv(filename)
オプション 区切り スラッシュ する	sep = '/'
カウンタ セット する	set(aCounter)
双方向 キュー ポップ する	deq.pop()
カラー コード 左 三 角 マーカー リスト データ 列 散布 図 描く	plt.plot(xdata, ydata, marker='<', c=rgb)
データ 列 折れ線 グラフ 描画 し 印 丸 印 する	plt.plot(データ列, データ列2, marker='o')
小数点 以下 桁 プリント する	print(':.2f'.format(x))
読み込む	pd.read_csv(filename, encoding='shift_jis')
貝殻 色 ヒストグラム 描画 する	plt.hist(データ列, color='seashell')
データ フレーム 列 正規 表現 文字 列 マッチ し ない 行 選択 する	df[not df[column].str.match(s)]
カラー コード 右 三 角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='>', c=rgb)
オプション ライト コーラル 色 設定 する	color = 'lightcoral'
線 グラフ 色 オレンジ レッド 設定 する	plt.plot(データ列, データ列2, color='orangered')
ヒストグラム 描画 し その 色 パープル 指定 する	plt.hist(データ列, color='purple')
折れ線 グラフ 描画 し その 色 パールバイオレットレッド する	plt.plot(データ列, データ列2, color='palevioletred')
オプション グラフ 色 ミディアムシアグリーン 指定 する	color = 'mediumseagreen'
折れ線 グラフ 色 ピーチ パフ 設定 する	plt.plot(データ列, データ列2, color='peachpuff')
要素 一つ タプル	(element,)
文字 列 全て 小文字 する	s.lower()
配列 数列 散布 図 描き マーカー 四角 設定 する	plt.plot(xdata, ydata, marker='s')
オプション 色 ミディアムスプリンググリーン 変更 する	color = 'mediumspringgreen'
折れ線 グラフ バツ マーカー 用いる	plt.plot(データ列, データ列2, marker='x')
データ フレーム 位 丸める	df.round(-3)
配列 リスト 色 差別 ない グラフ 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
オプション ディープスカイブルー 色 使用 する	color = 'deepskyblue'
折れ線 グラフ 色 ビスク 設定 する	plt.plot(データ列, データ列2, color='bisque')
要素 全て 初期 値 配列	np.full(要素数, 初期値, dtype=np.int)
データ フレーム 列 昇順 破壊 的 ソート する	df.sort_values(by=column, ascending=True, inplace=True)
データ フレーム カラム 三つ 選択 する	df[[column, column2, column3]]
リスト データ 列 パステル 調 グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
コマンド 引数 リスト	sys.argv[1:]
データ フレーム 位 丸め 整数 型 する	df.round(-3).astype(int)
折れ線 グラフ 黒い バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
以上 かつ 以下 調べる	n <= n2 and n2 <= n3
エラー なく リスト 文字 列 位置 使う	aList.index(element) if element in aList else -1
文字 列 二分 する	s.partition(sep)
日付 データ 週間 分 加算 する	aDate + datetime.timedelta(weeks=n)
データ 列 欠損 値 変更 する	ds.fillna(x)
表示 可能 な 行 数 設定 する	pd.set_option('display.max_rows', n)
カウンタ 項目 一覧	aCounter.keys()
ファイル データ フレーム インデックス 付け ず 保存 する	df.to_csv(filename, index=None)
三つ 最小 値	min(x, y, z)
データ フレーム 各 列 毎 グループ 化 し 列 個数 求める	df.groupby(column)[column2].count()
ベクトル 行 ごと 平均 値 求める	np.mean(aArray, axis=1)
最大 値 データ フレーム カラム 埋める	df[col].fillna(df[col].max())
オプション グラフ 色 ベージュ 設定 する	color = 'beige'
以下 または 以上	n <= n2 or n >= n3
実数 天井 数 計算 する	math.ceil(x)
データ フレーム 列 ダミー 変数 変換 する	pd.get_dummies(df[column])
データ フレーム 欠損 値 補う	df.fillna(x)
ヒストグラム 描画 し その 色 スレート ブルー 指定 する	plt.hist(データ列, color='slateblue')
割り切れ ない 調べる	n % 2 == 1
データ フレーム 二つ 列 まとめ た グループ	df.groupby(['A', 'B'])
ライトスレイグレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightslategray')
データ フレーム カラム 欠損 値 最大 値 埋める	df[col].fillna(df[col].max())
ふたつ リスト 積 集合	list(set(aList) & set(aList2))
オプション 先頭 行 ヘッダ 増やす	header = 0
データ フレーム 各 列 毎 分類 し 列 最大 値 求める	df.groupby(column)[column2].max()
データ フレーム 二つ 列 降順 破壊 的 ソート する	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データ フレーム リスト カラム メディアン 埋める	df[aList].fillna(df[aList].median())
文字 列 開始 位置 終了 位置 間 部分 文字 列 いくつ 存在 する 調べる	s.count(sub, start, end)
データ フレーム 各 列 列 組み合わせ 毎 グループ 分け し 個数 求める	df.groupby([column, column2], as_index=False).count()
既存 ファイル 付き 追加 できる よう オープン する	open(filepath, mode='a', encoding='utf_8_sig')
黒い 淡い グラフ プロット する	plt.plot(xdata, ydata, linestyle='muted', color='k')
変数 出力 する	print(value)
線 グラフ 色 ローン グリーン セット する	plt.plot(データ列, データ列2, color='lawngreen')
日付 時刻 データ 秒 数	aDatetime.second
グラフ 描画 淡い 色 用いる	sns.set(pallete='muted')
オプション シアン 色 使用 する	color = 'cyan'
文字 コード 用い ファイル 書き込み 用 開く	open(filepath, mode='w', encoding=text)
データ フレーム 表示 する とき 表示 さ れる 列 数 最大 値 設定 する	pd.set_option('display.max_columns', n)
データ フレーム 表示 する とき 表示 可能 な 最大 行 数 変更 する	pd.set_option('display.max_rows', n)
ファイル パス オープン し 読み込み ストリーム 求める	open(filepath, mode='r')
データ 列 データ 列 散布 図 描画 し ダイアモンドマーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='D', c=rgb)
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
加え データ フレーム 列 ダミー 変数 変換 する	pd.get_dummies(df[column], dummy_na=True)
日付 時刻 データ 曜日 整数 見る	aDatetime.weekday()
パステル 調 グラフ 色 黒 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
折れ線 グラフ 線 幅 バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
ファイル 番目 シート データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
文字 列 先頭 パターン 大文字 小文字 無視 し マッチ する 見る	re.match(pattern, s, flags=re.IGNORECASE)
データ フレーム 中央 値	df.median()
オプション 破壊 的 操作 する	inplace = True
逆順 双方向 キュー 使う	reversed(deq)
データ フレーム 欠損 値 パーセンタイル 埋める	df.fillna(df.median())
データ フレーム カラム 欠損 値 平均 設定 する	df[col].fillna(df[col].mean())
ヒストグラム 描画 し その 色 紺 設定 する	plt.hist(データ列, color='darkblue')
要素 全て 配列	np.ones(要素数, dtype=np.int)
カウンタ ゼロ カウント 取り出す	+aCounter
イテラブル ダミー 変数 変換 する	pd.get_dummies(iterable)
データ フレーム 列 文字 列 終わら ない データ 取り出す	df[not df[column].str.endswith(s)]
ファイル オープン し 追加 ストリーム 見る	open(filepath, mode='a')
乱数 シード 初期 化 する	random.seed(n)
青い パステル 調 グラフ 描く	plt.plot(xdata, ydata, linestyle='pastel', color='b')
常用 対数 計算 する	math.log10(x)
タイムスタンプデータ 日付 時刻 データ 同時 調べる	aDatetime == aDatetime2
ヒストグラム 描画 し その 色 タン セット する	plt.hist(データ列, color='tan')
整数 進 表現 変換 する	bin(n)
リスト どれ どう 確認 する	n in aList
十 六 進 文字 列 整数 変換 する	int(s, 16)
オプション 無視 する フッタ する	skipfooter = n
折れ線 グラフ 右 三 角 マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
データ フレーム 列 値 グループ 化 し それぞれ グループ ごと 最小 値 求める	df.groupby(column).min()
パラメータ 数式 微分 行う	sympy.diff(e, z)
オプション 色 ゲインズボロ 指定 する	color = 'gainsboro'
文字 列 黒色 プリント する	print(f'\033[30m{value}\033[0m')
エラー 無視 し 文字 列 バイト 列 変換 する	s.encode(errors='ignore')
ヒストグラム 描画 し その 色 フローラルホワイト 設定 する	plt.hist(データ列, color='floralwhite')
折れ線 グラフ 色 アクアマリン 指定 する	plt.plot(データ列, データ列2, color='aquamarine')
線 グラフ 描画 し その 色 ライトスレイグレー セット する	plt.plot(データ列, データ列2, color='lightslategray')
オプション グラフ 色 ブラック 設定 する	color = 'black'
三 変数 最も 大きい 値 計算 する	max(x, y, z)
英字 全部 使う	string.ascii_letters
オプション グラフ 色 やわらかい 青 変更 する	color = 'cornflowerblue'
オプション グラフ 色 フォレストグリーン 設定 する	color = 'forestgreen'
データ フレーム 重複 し い ない 行	df[not df.duplicated(keep=False)]
ヒストグラム 描画 し その 色 ライトスカイブルー 設定 する	plt.hist(データ列, color='lightskyblue')
ヒストグラム 色 ゴールデン ロッド する	plt.hist(データ列, color='goldenrod')
線 グラフ 描画 し その 色 ダークシアグリーン 指定 する	plt.plot(データ列, データ列2, color='darkseagreen')
ファイル 入力 読み込ん する	data = json.load(fin)
散布 図 赤い 上 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='^', c='r')
データ フレーム 列 値 集約 する	df.groupby('A')
オプション グラフ 色 青 緑 変更 する	color = 'turquoise'
リスト カウンタ 生成 する	collections.Counter(iterable)
線 グラフ 描画 し その 色 ラベンダー 設定 する	plt.plot(データ列, データ列2, color='lavender')
リスト 出力 改行 なし 行う	print(value, end='')
散布 図 カラー コード 星 マーカー 描く	plt.plot(xdata, ydata, marker='*', c=rgb)
グラフ 使う 縦 軸 ラベル 指定 する	plt.ylabel(untitled)
列 値 データ フレーム グループ 化 し それぞれ グループ 最小 値 算出 する	df.groupby(column).min()
アルファベット 文字 ランダム 選ぶ	random.choice(string.ascii_uppercase)
ヒストグラム 色 パウダー ブルー 設定 する	plt.hist(データ列, color='powderblue')
オプション サンディーブラウン グラフ 色 指定 する	color = 'sandybrown'
データ 列 イン ポート する	import pandas as pd
オプション グラフ 色 アンティーク ホワイト 設定 する	color = 'antiquewhite'
折れ線 グラフ 色 ディムグレー 変更 する	plt.plot(データ列, データ列2, color='dimgrey')
オプション グラフ 色 ネイビー 設定 する	color = 'navy'
リスト リスト 相関 可視 化 する	plt.scatter(xdata, ydata)
文字 列 センタリング する	s.center(文字列幅)
ダークターコイズ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkturquoise')
リスト 文字 列 取り除く	aList.remove(element)
オプション ライトスレイグレー グラフ 色 設定 する	color = 'lightslategrey'
プロット 描画 暗い パレット 使う	sns.set(pallete='dark')
データ フレーム 最後	df.tail()
文字 列 エン コーディング 使っ バイト 列 変換 する	s.encode(encoding=encoding)
辞書 形式 インデント 幅 文字 列 する	json.dumps(aDict, ensure_ascii=False, indent=n)
実数 有限 調べる	math.isfinite(x)
データ 列 中 文字 列 ある 調べる	ds.isin([value])
文字 列 全て 十 進 数字 どう 確認 する	s.isdecimal()
線 グラフ 描画 し 色 ライトスレイグレー 変更 する	plt.plot(データ列, データ列2, color='lightslategrey')
ダーク ブルー ヒストグラム 色 設定 する	plt.hist(データ列, color='darkblue')
折れ線 グラフ 描画 し 色 トマト 設定 する	plt.plot(データ列, データ列2, color='tomato')
データ フレーム カラム 位 四捨五入 し 整数 する	df[col].round(-1).astype(int)
ヒストグラム 描画 し その 色 ミディアムパープル 設定 する	plt.hist(データ列, color='mediumpurple')
データ フレーム 各 列 毎 グループ 化 し 文字 列 名前 グループ 見る	df.groupby(column).get_group(s)
リスト 数列 散布 図 ポイント マーカー プロット する	plt.plot(xdata, ydata, marker='.')
折れ線 グラフ 色 ダーク グリーン 変更 する	plt.plot(データ列, データ列2, color='darkgreen')
ファイル 番目 シート 読み込む	pd.read_excel(filename, sheet_name=n)
	sys.platform.startswith('linux')
折れ線 グラフ 色 アリスブルー 設定 する	plt.plot(データ列, データ列2, color='aliceblue')
ライトグリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightseagreen')
ファイル 名 ファイル	filename.endswith('.tsv')
全て 印字 可能 な 文字	string.printable
データ フレーム 数値 一 度 整数 丸める	df.round()
第 二 コマンド 引数 知る	sys.argv[1]
オプション 右 三 角 マーカー 描画 する	marker = '>'
データ フレーム カラム と列 重複 ある 見る	df.duplicated(subset=[column, column2])
データ フレーム カラム 正規 分布 どれ 尖っ いる 見る	df[col].skew()
本日 曜日 整数 見る	datetime.datetime.today().weekday()
折れ線 グラフ 色 小麦色 変更 する	plt.plot(データ列, データ列2, color='wheat')
四 分 位 数 ごと データ 列 分割 する	pd.qcut(ds, 4)
オプション グラフ 色 ラベンダー セット する	color = 'lavender'
折れ線 グラフ 描画 し 色 ダーク グレー 指定 する	plt.plot(データ列, データ列2, color='darkgray')
本日 何 月 知る	datetime.datetime.today().month
リスト 配列 散布 図 パステル 調 色 描画 する	plt.plot(xdata, ydata, c='pastel')
濃い 折れ線 色 赤 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
データ フレーム 列 昇順 ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
データ 列 リスト 折れ線 グラフ 描画 し 色 カラー コード 変更 する	plt.plot(xdata, ydata, color=rgb)
商 余り 同時に 計算 する	divmod(x, y)
リスト 応じ 散布 図 色 変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
文字 列 セパレータ 区切っ 列挙 する	s.split(sep)
キュー 順序 左 個 分 ロー テンション する	deq.rotate(-n)
ヒストグラム 描画 し 色 イエロー グリーン 変更 する	plt.hist(データ列, color='yellowgreen')
文字 列 右側 改行 取り除く	s.rstrip('\n')
等量 個 配列 分割 する	pd.qcut(aArray, n)
オプション グラフ 色 ダーク オレンジ 設定 する	color = 'darkorange'
全 要素 初期 化 さ れ た 符号 なし ビット 整数 型 行列	np.zeros(行数, 列数, dtype=np.uint8)
タイムスタンプデータ 文字 列 フォーマット する	"aDatetime.strftime(""%d/%m/%y"")"
線 幅 折れ線 描画 する	plt.plot(xdata, ydata, linewidth=n)
赤色 明るい グラフ 描く	plt.plot(xdata, ydata, linestyle='bright', color='r')
暗い 色 重 見やすく リスト 配列 散布 図 描画 する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
線 グラフ 色 ダーク サーモン 設定 する	plt.plot(データ列, データ列2, color='darksalmon')
整数 ビット 長 見る	n.bit_length()
日付 時刻 データ 何 日 知る	aDatetime.day
オプション グラフ 色 ビスク 設定 する	color = 'bisque'
文字 列 英数字 どう	s.isalnum()
折れ線 グラフ 色 オールド レース 変更 する	plt.plot(データ列, データ列2, color='oldlace')
オプション バッファリング サイズ セット する	buffering = 4096
マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^')
ヒストグラム 描画 し その 色 アイボリー 設定 する	plt.hist(データ列, color='ivory')
暗い 赤 ヒストグラム 色 設定 する	plt.hist(データ列, color='darkred')
折れ線 グラフ 描画 し その 色 デピンク 設定 する	plt.plot(データ列, データ列2, color='deeppink')
ヒストグラム 色 ターコイズ する	plt.hist(データ列, color='turquoise')
データ フレーム 指定 さ れ た 列 抽出 する	df[[column, column2, column3]]
オプション グラフ 色 デピンク 設定 する	color = 'deeppink'
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 分散 計算 する	df.groupby([column, column2], as_index=False).var()
折れ線 グラフ 描画 し 色 ライム グリーン 指定 する	plt.plot(データ列, データ列2, color='limegreen')
色 差別 ない 折れ線 グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
散布 図 暗い 色 描画 する	plt.plot(xdata, ydata, c='dark')
日付 データ 時間 減算 する	aDate - datetime.timedelta(hours=n)
線 グラフ 色 アクアマリン 変更 する	plt.plot(データ列, データ列2, color='aquamarine')
データ フレーム 複数 列 値 グループ 化 し 要約 統計 量 求める	df.groupby(columns).describe()
折れ線 グラフ 描画 し その 色 ディープスカイブルー 変更 する	plt.plot(データ列, データ列2, color='deepskyblue')
整数 八 進 表現	oct(n)
データ フレーム 重複 し た 行 選択 する	df[df.duplicated(keep=False)]
オプション グラフ 色 オールド レース 指定 する	color = 'oldlace'
黒い 明るい 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
正規 表現 限定 あらかじめ コンパイル する	re.compile(pattern, flag=re.ASCI)
数式 積分 行う	sympy.integrate(e)
ふたつ 集合 差 集合 求める	aSet.difference(aSet2)
リスト リスト 青い 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
ヒストグラム 描き ビン 数 セット する	plt.hist(データ列, bins=n)
日付 時刻 データ 何 月 知る	aDatetime.month
リスト 縦 軸 配列 横 軸 指定 し 折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
ふたつ 集合 互いに 素 調べる	aSet.isdisjoint(aSet2)
ヒストグラム 色 ライト イエロー 変更 する	plt.hist(データ列, color='lightyellow')
割っ た 値 切り上げ	(n + n2 - 1) // n2
折れ線 グラフ 描画 し その 色 デピンク 設定 する	plt.plot(データ列, データ列2, color='deeppink')
折れ線 グラフ 描画 し 色 デピンク 設定 する	plt.plot(データ列, データ列2, color='deeppink')
オプション 淡い ピンク色 グラフ 色 設定 する	color = 'lightpink'
オプション ダークシアグリーン 使用 する	color = 'darkseagreen'
進 文字 列 バイト 列 する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
日付 データ 日付 データ 時間 差 秒 数 求める	(aDate - aDate2).total_seconds()//60
オプション ダーク バイオレット 色 使う	color = 'darkviolet'
ヒストグラム 色 ダークターコイズ 変更 する	plt.hist(データ列, color='darkturquoise')
カウンタ 辞書 使っ 更新 する	aCounter.update(aDict)
赤い 下 三角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='v', c='r')
データ フレーム 指定 さ れ た 列 取り出す	df[[column, column2]]
ヒストグラム 描画 し その 色 耐火 レンガ 設定 する	plt.hist(データ列, color='firebrick')
行列 行 ごと 最小 求める	np.min(aArray, axis=1)
組 平均 値	sum(aTuple)/len(aTuple)
オプション 青 緑色 使う	color = 'turquoise'
リスト リスト カラー コード パステル 調 グラフ 描く	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
散布 図 明るい 色 プロット する	plt.plot(xdata, ydata, c='bright')
データ フレーム カラム 型 変換 し インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
辞書 順 つ 文字 列 比較 する	s < s2
文字 列 開始 位置 番目 終了 位置 番目 間 部分 文字 列 含ま れ ない 調べる	s.find(sub, start, end) == -1
変数 定義 する	x = n
グラフ サイズ 横 縦 設定 する	plt.figure(figsize=(width, height))
文字 列 空白 用い 区切る	s.split()
折れ線 グラフ ラベル 設定 する	plt.plot(xdata, ydata, label=untitled)
ヒストグラム 描画 し その 色 グリーン 変更 する	plt.hist(データ列, color='green')
データ フレーム カラム 欠損 値 最小 値 埋める	df[col].fillna(df[col].min())
リスト リスト 連結 する	aList + aList2
散布 図 赤色 右 三 角 マーカー 用いる	plt.plot(xdata, ydata, marker='>', c='r')
オプション グラフ 色 ゴールデン ロッド 指定 する	color = 'goldenrod'
名前 付き タプル 辞書 変換 する	aNamedTupleObject._asdict()
文字 列 全体 正規 表現 限定 マッチ する 見る	re.fullmatch(pattern, s, flags=re.ASCI)
リスト 境界 値 データ フレーム 中 列 ビンニング する	pd.cut(df[col], aList)
折れ線 グラフ 描画 し その 色 ピンク 設定 する	plt.plot(データ列, データ列2, color='pink')
再帰 上限 増やす	sys.setrecursionlimit(1000000)
リスト リスト 散布 図 黒い 上 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c='k')
データ フレーム カラム 何 曜日 見る	df[col].dt.weekday_name
小数点 数 逆 双曲線 余弦	math.acosh(x)
線 グラフ 色 ミント クリーム 指定 する	plt.plot(データ列, データ列2, color='mintcream')
リスト データ 列 散布 図 黒い ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D', c='k')
ヒストグラム 色 ブラック 変更 する	plt.hist(データ列, color='black')
オプション ダーク バイオレット 使う	color = 'darkviolet'
リスト 回 連結 する	aList * n
ベクトル 要素 ごと 加算 する	aArray + aArray2
オプション グラフ 色 ダーク サーモン 設定 する	color = 'darksalmon'
文字 列 太 文字 表示 できる 文字 列 変換 する	f'\033[1m{value}\033[0m'
ヒストグラム 色 ダーク グレー 指定 する	plt.hist(データ列, color='darkgray')
個 集まり 個 重複 なく 選ぶ 方法 求める	math.comb(n, k)
横 棒グラフ 色 カラー コード 設定 する	plt.barh(ラベル列, データ列, color=rgb)
文字 列 白色 表示 できる 文字 列 する	f'\033[37m{value}\033[0m'
データ フレーム 列 各 データ 値 出現 数	df[col].value_counts()
リスト リスト 散布 図 赤い 大 バツ マーカー 描く	plt.plot(xdata, ydata, marker='X', c='r')
折れ線 グラフ 描画 し その 色 プラム 変更 する	plt.plot(データ列, データ列2, color='plum')
浮動 小数点 数 万 位 丸める	round(x, -4)
折れ線 グラフ 描画 し その 色 ライトスレイグレー 指定 する	plt.plot(データ列, データ列2, color='lightslategrey')
白い 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='w')
水色 リスト プリント する	print(f'\033[36m{value}\033[0m')
列 値 データ フレーム グループ 化 し 記述 統計 量 求める	df.groupby('A').describe()
ヒストグラム 描画 し その 色 貝殻 変更 する	plt.hist(データ列, color='seashell')
データ フレーム 列 中央 値	df[col].median()
いつ カウントアップ する	itertools.count(start=n)
データ フレーム カラム 未 入力 値 最小 値 設定 する	df[col].fillna(df[col].min())
オブジェクト オブジェクト 識別子	id(obj)
ライム ヒストグラム 色 指定 する	plt.hist(データ列, color='lime')
グレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='gray')
データ フレーム 各 列 毎 グループ 分け し 列 標準 偏差 算出 する	df.groupby(column)[column2].std()
カラー コード 三角 マーカー データ 列 リスト 散布 図 プロット する	plt.plot(xdata, ydata, marker='^', c=rgb)
リスト イテラブル 青い 色 差別 ない 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
スピアマン 相関 係数 データ フレーム 列 列 相関 行列 求める	df[[column, column2]].corr(method='spearman')
オプション データ 型 指定 する	dtype = bool
折れ線 グラフ 描画 し その 色 ダーク オリーブ グリーン 設定 する	plt.plot(データ列, データ列2, color='darkolivegreen')
マッピング 項目 名 値	aDict[key]
カウンタ それぞれ 値 その カウント 列挙 する	aCounter.elements()
ヒストグラム 描画 し その 色 ベージュ 指定 する	plt.hist(データ列, color='beige')
リスト 配列 散布 図 描画 し マーカー バツ 設定 する	plt.plot(xdata, ydata, marker='x')
オプション 色 貝殻 設定 する	color = 'seashell'
オプション ミスティローズ 用いる	color = 'mistyrose'
両端 キュー 左 値 追加 する	deq.appendleft(element)
エクセルファイルファイル シート データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
リスト 配列 散布 図 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<')
データ フレーム 複数 列 値 グループ 化 し 記述 統計 量 算出 する	df.groupby(columns).describe()
リスト リスト 散布 図 三角 マーカー プロット する	plt.plot(xdata, ydata, marker='^')
オプション アリス ブルー グラフ 色 セット する	color = 'aliceblue'
ヒストグラム 色 スノー 指定 する	plt.hist(データ列, color='snow')
フォーマット 文字 列 日付 型 変換 する	pd.to_datetime(s, format=fmt)
既存 配列 ベース 全 要素 初期 値 配列	np.full_like(aArray, 初期値)
青 緑 ヒストグラム 色 設定 する	plt.hist(データ列, color='turquoise')
ネイビー 色 ヒストグラム 描画 する	plt.hist(データ列, color='navy')
データ フレーム 欠損 値 中央 値 設定 する	df.fillna(df.median())
日付 時刻 データ 金曜日 調べる	aDatetime.weekday() == 4
バイナリ 用 ファイル 開く	open(filepath, mode='rb')
線 グラフ 描画 し その 色 ミディアムシアグリーン 設定 する	plt.plot(データ列, データ列2, color='mediumseagreen')
カウンタ それぞれ 項目 回数 リスト し 得る	aCounter.elements()
データ 列 平均 値 減らす	ds.fillna(ds.mean())
項目 名 辞書 上 まだ 定義 さ れ い ない どう	key not in aDict
ボックス チャート 二つ 並べる	plt.boxplot([データ列, データ列2])
データ フレーム リスト カラム 文字 列 欠損 値 変換 する	df[aList].replace(s, np.nan)
ゼロ 埋め さ れ た 符号 なし ビット 整数 型 行列	np.zeros(要素数, dtype=np.uint8)
データ フレーム グループ 化 し それぞれ 列 合計 求める	df.groupby(column)[column2].sum()
データ フレーム 各 グループ ごと 標準 偏差 求める	df.groupby(column).std()
折れ線 グラフ 赤い 大 バツ 印 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
タイムスタンプデータ 日 前 戻す	aDatetime - datetime.timedelta(days=n)
リスト 回 接続 する	aList * n
線 グラフ 色 セット する	plt.plot(データ列, データ列2, color='darkslategrey')
実数 実数 割っ 切り捨てる	x // y
データ フレーム リスト カラム 丸め 整数 型 する	df[aList].round().astype(int)
配列 分割 数 使っ 等量 ビン 分割 する	pd.qcut(aArray, n)
データ フレーム カラム 中 日付 データ 文字 列 ある 調べる	df[col].isin([value, value2])
折れ線 グラフ 色 サーモン 設定 する	plt.plot(データ列, データ列2, color='salmon')
負 数 どう 調べる	n < 0
リスト 配列 散布 図 文字 列 凡例 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
リスト リスト 淡い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='muted')
データ フレーム カラム 欠損 値 平均 値 埋める	df[col].fillna(df[col].mean())
折れ線 グラフ 黄色い 右 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
データ フレーム 重複 する 行 ドロップ し 更新 する	df.drop_duplicates(inplace=True)
ヒストグラム 描画 し 色 パールバイオレットレッド 設定 する	plt.hist(データ列, color='palevioletred')
折れ線 グラフ 色 ダーク グレー 変更 する	plt.plot(データ列, データ列2, color='darkgray')
数式 変数 階 微分 求める	sympy.diff(e, z, n)
タイムスタンプデータ 月曜日	aDatetime.weekday() == 0
日付 データ 日付 データ 同時 テスト する	aDate == aDate2
マイナス 求める	n - n2
データ フレーム リスト 列 未 入力 値 直後 値 指定 する	df[aList].fillna(method='bfill')
組 文字 列 最初 見つかる インデックス	aTuple.index(element)
文字 列 印字 できる 確認 する	s.isprintable()
リスト リスト 散布 図 カラー コード 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c=rgb)
配列 同じ 大き さ 空 行列 作る	np.empty_like(aArray)
組 最後 取り除く	aTuple[:-1]
リスト オブジェクト 位置 エラー なく 求める	aList.index(element) if element in aList else -1
データ 列 折れ線 グラフ 描画 し マーカー 大 バツ 印 する	plt.plot(データ列, データ列2, marker='X')
赤い パステル 調 グラフ 描く	plt.plot(xdata, ydata, linestyle='pastel', color='r')
データ フレーム 二つ 列 値 分類 し 列挙 する	[(name, group) for name, group in df.groupby(['A', 'B'])]
チョコレート 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='chocolate')
オプション ライム 色 使う	color = 'lime'
データ 列 各 データ 値 出現 数	ds.value_counts()
サーモン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='salmon')
データ フレーム サンプリング する	df.sample()
ヒストグラム 描画 し 色 コーンフラワーブルー 設定 する	plt.hist(データ列, color='cornflowerblue')
セット イテラブル 要素 追加 する	aSet.update(iterable)
文字 列 文字 列 辞書 順 後	s > s2
行列 擬似 逆 行列	np.linalg.pinv(aArray)
ヒストグラム 色 スレート ブルー 変更 する	plt.hist(データ列, color='slateblue')
大きい	n > n2
データ フレーム 関数 値 グループ 化 し 要約 統計 量 計算 する	df.groupby(関数).describe()
辞書 内部 コピー する	{k: copy.copy(v) for k, v in aDict.items()}
ヒストグラム 描き 半 透明 する	plt.hist(データ列, alpha=0.5)
グラフ 描画 暗い 色 使う	sns.set(pallete='dark')
ヒストグラム 色 ゴールデン ロッド 設定 する	plt.hist(データ列, color='goldenrod')
データ フレーム 複数 列 キー し ソート する	df.sort_values(by=column)
折れ線 グラフ 描画 し 色 黄色 設定 する	plt.plot(データ列, データ列2, color='yellow')
ヒストグラム 色 青 紫 設定 する	plt.hist(データ列, color='violet')
色 差別 ない グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
配列 リスト 散布 図 文字 列 データ ラベル 用 ラベル つける	plt.scatter(xdata, xdata, label=s)
ヒストグラム 描画 し その 色 ミント クリーム 設定 する	plt.hist(データ列, color='mintcream')
バイト オーダ 知る	sys.byteorder
二 進 文字 列 バイト 列 する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
赤色 ヒストグラム 描画 する	plt.hist(データ列, color='red')
折れ線 グラフ 描画 し 色 紺 変更 する	plt.plot(データ列, データ列2, color='darkblue')
文字 列 識別子 名	s.isidentifier()
日付 時刻 データ 分 減算 する	aDatetime - datetime.timedelta(minutes=n)
文字 列 内 ひとつ アルファベット 含ま れる 調べる	any(c.isalpha() for c in s)
日付 データ 日 加える	aDate + datetime.timedelta(days=n)
オプション 改行 コード 旧 設定 する	newline = '\r'
実数 正 数	x > 0
文字 列 ファイル ファイル 番目 カラム インデックス 読む	pd.read_csv(filename, index_col=n)
直後 値 データ フレーム リスト カラム 欠損 値 置き換える	df[aList].fillna(method='bfill')
データ フレーム 中 列 分割 数 ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
折れ線 グラフ 描画 し その 色 ナバホホワイト 設定 する	plt.plot(データ列, データ列2, color='navajowhite')
読み込み モード ファイル オープン し する	f = open(filepath, mode='r')
空白 文字 列 分割 する	s.split()
双方向 キュー 番目	deq[n]
オプション ライトスカイブルー 色 使う	color = 'lightskyblue'
アルファベット 文字 列	string.ascii_letters
リスト 太 文字 プリント する	print(f'\033[1m{value}\033[0m')
ビン 数 設定 し ヒストグラム 描画 する	plt.hist(データ列, bins=n)
配列 全 要素 指定 値 する	aArray[:, :] = 指定の値
折れ線 グラフ 右 三 角 マーカー 線 幅 指定 する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
文字 列 全て アスキー 文字 確認 する	s.isascii()
モジュール イン ポート する	import itertools
データ フレーム 行 行 取り出す	df.loc[n]
文字 列 開始 位置 終了 位置 範囲 部分 文字 列 登場 カウント する	s.count(sub, start, end)
折れ線 グラフ マーカー 下 三角 する	plt.plot(データ列, データ列2, marker='v')
もしくは 確認 する	n == 1 or n == 2
部分 文字 列	sub in s
折れ線 グラフ 色 アクアマリン 変更 する	plt.plot(データ列, データ列2, color='aquamarine')
ヒストグラム 描画 し 色 ラベンダー 設定 する	plt.hist(データ列, color='lavender')
ヒストグラム 色 淡い 茶色 変更 する	plt.hist(データ列, color='tan')
明るい 折れ線 グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
折れ線 グラフ 色 青 紫 変更 する	plt.plot(データ列, データ列2, color='violet')
データ フレーム 値	df.isna()
複数 データ フレーム 縦 方向 連結 する	pd.concat([df, df2, df3], axis=0)
名前 カラー マップ 見る	"plt.get_cmap(""カラーマップ名"")"
暗い グラフ 色 赤色 設定 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
折れ線 グラフ ポイント 印 黒く する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
両端 キュー タプル する	tuple(deq)
文字 列 漢字 含ま れる 調べる	re.search('[\u4E00-\u9FD0]', s)
個 等しい 量 なる よう 配列 ビン 分割 する	pd.qcut(aArray, n)
表 重複 し た 行 削除 する	df.drop_duplicates()
データ フレーム 一 度 整数 丸める	df.round()
折れ線 グラフ 描画 し その 色 オレンジ 設定 する	plt.plot(データ列, データ列2, color='orange')
データ 列 リスト 散布 図 描画 し 三角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='^', c=rgb)
実数 実数 加える	x + y
データ フレーム リスト カラム 中央 値	df[aList].median()
線 グラフ 描画 し その 色 マルーン 設定 する	plt.plot(データ列, データ列2, color='maroon')
青い 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
ネイビー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='navy')
現在 ミリ 秒	int(time.time() * 1000)
文字 列 中 ひとつ 非 アスキー 文字 含ま れる 調べる	any(not c.isascii() for c in s)
型 名前 付き タプル 調べる	issubclass(C, tuple)
データ 列 使う	import pandas as pd
文字 列 タイム スタンプ 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
データ フレーム 位 丸め 整数 する	df.round(-1).astype(int)
文字 列 文字 列 辞書 順 後 確認 する	s > s2
文字 列 アンダーライン 付き プリント する	print(f'\033[4m{value}\033[0m')
オブジェクト リスト 型	isinstance(obj, list)
グラフ 実線 付ける	plt.axhline(y=0, linestyle='solid')
折れ線 グラフ 描画 し その 色 コーンズシルク セット する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線 グラフ サイズ マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markersize=n)
スライス	slice(n, n2)
オプション カラム 名前 設定 する	header = names
リスト 等間隔 個 ビン 分割 する	pd.cut(aList, n)
文字 列 終了 位置 前 部分 文字 列 存在 し ない 調べる	s.find(sub, 0, end) == -1
赤い バツ マーカー 数列 データ 列 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
散布 図 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^')
ヒストグラム 色 サンディーブラウン 設定 する	plt.hist(データ列, color='sandybrown')
グラフ 水平 方向 一 点 鎖線 つける	plt.axhline(y=0, linestyle='dashbot')
実数 三 乗 する	x ** 3
オブジェクト 大き さ 知る	sys.getsizeof(obj)
折れ線 グラフ 描画 し その 色 ピーチ パフ 指定 する	plt.plot(データ列, データ列2, color='peachpuff')
二つ データ フレーム 縦 方向 連結 する	pd.concat([df, df2])
カウンタ 最 頻出 項目 件数	aCounter.most_common()[1]
ヒストグラム 描画 し 色 カーキ 指定 する	plt.hist(データ列, color='khaki')
横 棒グラフ 色 カラー コード 指定 する	plt.barh(ラベル列, データ列, color=rgb)
リスト 番目 の 見る	aList[n]
オプション ブランチドアーモンド 色 使う	color = 'blanchedalmond'
折れ線 グラフ 描画 し その 色 ビスク 設定 する	plt.plot(データ列, データ列2, color='bisque')
線 グラフ 色 ピーチ パフ セット する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線 グラフ 黒い クロス 印 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
データ フレーム 欠損 値 ある 箇所	df.style.highlight_null()
折れ線 グラフ 描画 し その 色 ミディアムバイオレットレッド 変更 する	plt.plot(データ列, データ列2, color='mediumvioletred')
データ フレーム 読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
配列 数列 散布 図 マーカー プロット する	plt.plot(xdata, ydata, marker='v')
データ フレーム シェイプ 見る	df.shape
リスト リスト 散布 図 描画 し マーカー バツ 設定 する	plt.plot(xdata, ydata, marker='x')
重 見やすく 色 差別 ない 色 使っ リスト リスト 散布 図 描く	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
一 桁 数 どう	0 <= n <= 9
ベクトル 列 ごと 最小	np.min(aArray, axis=0)
文字 列 下線 付き プリント できる 文字 列 変換 する	f'\033[4m{value}\033[0m'
シーケンス 文字 列 リスト 変換 し カンマ 連結 する	','.join(map(str, iterable))
イテラブル 重複 なく 要素 ランダム 選ぶ	random.sample(iterable, k=n)
折れ線 グラフ マーカー 加える	plt.plot(データ列, データ列2, marker='^')
イテラブル サンプリング する	random.sample(iterable)
データ 列 リスト 散布 図 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o')
最大 値 データ フレーム リスト カラム 欠損 値 補う	df[aList].fillna(df[aList].max())
淡い の 線 幅 セット する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
ヒストグラム 描画 し その 色 ロイヤル ブルー 設定 する	plt.hist(データ列, color='royalblue')
タプル 要素 昇順 ソート する	sorted(aTuple, reverse=False)
折れ線 グラフ 描画 し その 色 ダークオーキッド 設定 する	plt.plot(データ列, データ列2, color='darkorchid')
文字 列 アルファベット	s.isalpha()
データ 列 ユニーク な 要素 抽出 し リスト 化 する	ds.unique().tolist()
配列 リスト 黒い 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
オプション 色 黄色 設定 する	color = 'yellow'
データ フレーム 列 列 破壊 的 降順 並べる	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
折れ線 グラフ 線 幅 右 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
小麦色 色 ヒストグラム 描画 する	plt.hist(データ列, color='wheat')
文字 列 開始 位置 以降 部分 文字 列 含ま れる 調べる	s.find(sub, start) != -1
見やすい グラフ 使う 準備 する	import seaborn as sns
折れ線 グラフ 菱形 印 線 幅 指定 する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
自然 数 最大公約数	math.gcd(n, n2)
複数 列 データ フレーム ソート し 更新 する	df.sort_values(by=column, inplace=True)
折れ線 グラフ 色 ブラック 変更 する	plt.plot(データ列, データ列2, color='black')
折れ線 グラフ 色 グリーン イエロー 変更 する	plt.plot(データ列, データ列2, color='greenyellow')
個 リスト ビニング し ラベル つける	pd.cut(aList, n, labels=names)
日付 時刻 データ タイムスタンプデータ 同時	aDatetime == aDatetime2
カラー コード 下 三角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='v', c=rgb)
カラー コード 大 バツ マーカー リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='X', c=rgb)
部分 文字 列 安全 文字 列 サフィックス 除く	s.removesuffix(sub)
日付 データ データ 列 インデックス する	df.index = pd.DatetimeIndex(ds)
日付 データ 何 月 知る	aDate.month
データ 列 タイム ゾーン 日本 セット する	ds.tz_convert('Asia/Tokyo')
変数 緑色 する	f'\033[32m{value}\033[0m'
日付 時刻 データ 日付 時刻 データ 同時 どう	aDatetime == aDatetime2
赤い 下 三角 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
データ フレーム それぞれ グループ ごと 平均 値	df.groupby(column).mean()
線 グラフ 色 グレー する	plt.plot(データ列, データ列2, color='gray')
ヒストグラム 描画 し その 色 ライト シアン 設定 する	plt.hist(データ列, color='lightcyan')
データ フレーム 列 ソート し 上位 取り出す	df.sort_values(columns).head(n)
イテラブル 累積 する	itertools.accumulate(iterable, operator.mul)
データ フレーム カラム 欠損 値 直後 値 設定 する	df[col].fillna(method='bfill')
両端 キュー 中 文字 列 数 数える	deq.count(element)
折れ線 グラフ バツ マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
ヒストグラム 描画 し その 色 カデット ブルー セット する	plt.hist(データ列, color='cadetblue')
二つ 文字 列 同じ 調べる	s == s2
オプション ペールグリーン 色 使う	color = 'palegreen'
カラム 埋める	ds.fillna(x)
文字 列 空白 用い 分割 し 整数 リスト 変換 する	map(int, s.split())
オプション 線 幅 設定 する	linewidth = n
または	n or n2
文字 列 マゼンタ プリント する	print(f'\033[35m{value}\033[0m')
折れ線 グラフ ラベル 付ける	plt.plot(xdata, ydata, label=untitled)
データ フレーム 指定 さ れ た カラム リスト 抽出 する	df[column].values.tolist()
辞書 キー 値 エラー なく 得る	aDict.get(key, None)
パールバイオレットレッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='palevioletred')
線 グラフ 描画 し その 色 ダークスレートブルー 変更 する	plt.plot(データ列, データ列2, color='darkslateblue')
浮動 小数点 数 絶対 値 求める	math.fabs(x)
文字 列 右端 部分 文字 列 除去 する	s.rstrip(sub)
日付 データ 時間 前 戻す	aDate - datetime.timedelta(hours=n)
データ フレーム 列 どの 値 頻出 見る	df[col].mode()
イテラブル 文字 列 変換 し タブ 連結 する	'\t'.join(map(str, iterable))
オプション ミスティローズ 色 使う	color = 'mistyrose'
最 頻 値 データ 列 欠損 値 補う	ds.fillna(ds.mode().iloc[0])
小数点 数 乗 求める	math.exp(x)
スタック 文字 列 積む	deq.append(element)
濃い 折れ線 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
データ フレーム リスト 列 要約 統計 量 算出 する	df[aList].describe()
文字 列 リスト 連結 し ひとつ 文字 列 する	''.join(map(str, iterable))
パステル 調 折れ線 グラフ 色 赤く する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
青い 四角 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
データ フレーム まとめ 置換 する	df.replace(ValueMap)
オプション グラフ 色 アンティーク ホワイト する	color = 'antiquewhite'
線 グラフ 描画 し その 色 ダーク シアン 変更 する	plt.plot(データ列, データ列2, color='darkcyan')
無限 な 数列 得る	itertools.repeat(n)
ゼロ 埋め さ れ た 行列	np.zeros(行数, 列数)
標準 入力 行 分 読み込ん 改行 取り除く	sys.stdin.readline().rstrip()
文字 列 末尾 部分 文字 列 探す	s.rfind(sub)
文字 列 小文字 調べる	s.islower()
オブジェクト 整数 調べる	isinstance(obj, int)
読み込む	pd.read_csv(filename, sep='\t')
折れ線 グラフ 描画 し 色 グリーン 設定 する	plt.plot(データ列, データ列2, color='green')
赤色 大 バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='X', c='r')
データ 列 リスト 散布 図 赤い 右 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='>', c='r')
ディムグレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='dimgrey')
角度 ラジアン 求める	math.radians(degree)
数値 符号 コピー する	math.copysign(x, x2)
オプション 色 ペールグリーン 設定 する	color = 'palegreen'
部分 文字 列 部分 文字 列 始まる どう 調べる	s.startswith(sub)
データ フレーム リスト カラム 第 三 四 分 位 数	df[aList].quantile(0.75)
日付 時刻 データ 文字 列 フォーマット し 文字 列 変換 する	"aDatetime.strftime(""%d/%m/%y"")"
線 グラフ 描画 し 色 耐火 レンガ 設定 する	plt.plot(データ列, データ列2, color='firebrick')
ひとつ 文字 文字 列 内 含ま れる どう 調べる	any(c.isascii() for c in s)
データ フレーム 列 並べ 先頭 する	df.sort_values(by='A', na_position='first')
配列 リスト 折れ線 グラフ 透明 度 描画 する	plt.plot(xdata, ydata, alpha=alpha)
文字 コード 追加 できる よう 既存 ファイル オープン する	open(filepath, mode='a', encoding=text)
間隔 いつ カウントアップ する	itertools.count(start=n, step=step)
ヒストグラム 描画 し 透明 度 設定 する	plt.hist(データ列, alpha=x)
複素数	complex(x, y)
折れ線 グラフ 描画 し その 色 ミッドナイト ブルー 設定 する	plt.plot(データ列, データ列2, color='midnightblue')
ヒストグラム 描画 し その 色 茶色 変更 する	plt.hist(データ列, color='brown')
出力 ストリーム 文字 列 書き込む	f.write(s)
オプション グラフ 種類 点線 する	linestyle = 'dotted'
行 改行 取り除い 標準 入力 読み込む	sys.stdin.readline().rstrip()
データ 列 折れ線 グラフ 描画 し マーカー 菱形 印 する	plt.plot(データ列, データ列2, marker='D')
ヒストグラム 描画 し 色 シアン セット する	plt.hist(データ列, color='cyan')
文字 列 開始 位置 以降 部分 文字 列 存在 する どう 調べる	s.find(sub, start) != -1
日付 データ データ 列 データ フレーム インデックス する	df.index = pd.DatetimeIndex(ds)
グラフ 画面 用 設定 する	sns.set(context='notebook')
行列 スカラー 倍	aArray * n
データ フレーム リスト カラム どの 程度 分散 し いる 見る	df[aList].var()
一 桁 整数	-9 <= x <= 9
イテラブル リスト 散布 図 赤色 クロス マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
数式 数値 計算 する	float(e)
リスト データ 列 破線 グラフ プロット し その 色 暗い 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
データ フレーム リスト 列 どの 値 頻出 見る	df[aList].mode()
オプション 色 クリムゾン 設定 する	color = 'crimson'
データ フレーム 末尾 見る	df.tail()
折れ線 グラフ 黒い ポイント マーカー 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
書き込み 用 ファイル オープン する	open(filepath, mode='w', encoding='euc_jp')
散布 図 マーカー 用いる	plt.plot(xdata, ydata, marker='^')
データ 列 上位 求める	ds.quantile(0.25)
ファイル パス 開い バイナリ 書き込み ストリーム 見る	open(filepath, mode='wb')
データ 列 配列 破線 グラフ 描画 し 色 明るい 変更 する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
散布 図 赤い 星 マーカー 使う	plt.plot(xdata, ydata, marker='*', c='r')
オプション 標準 エラー 用いる	file = sys.stderr
暗い 色 青 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
折れ線 グラフ マーカー 黄色く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
マップ 項目 名 その エントリ ペア 取り出す	aDict.items()
文字 列 中 限定 正規 表現 全て マッチ 使う	re.findall(pattern, s, flags=re.ASCI)
データ フレーム 列 名前 一覧 指定 さ れ た 列 削除 する	df.drop(columns, axis=1)
今日 金曜日	datetime.datetime.today().weekday() == 4
データ フレーム カラム 中 ある 日付 データ 文字 列 数 数える	df[col].isin([value, value2]).sum()
オプション 色 耐火 レンガ 設定 する	color = 'firebrick'
マッピング 項目 名 値 参照 する	aDict[key]
集合 空 集合 調べる	len(aSet) == 0
明るい 色 マーカー 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
リスト 数列 散布 図 カラー コード 右 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='>', c=rgb)
折れ線 グラフ 描画 し その 色 ゴースト ホワイト 設定 する	plt.plot(データ列, データ列2, color='ghostwhite')
文字 列 開始 位置 終了 位置 範囲 部分 文字 列 出現 カウント する	s.count(sub, start, end)
整数 除算 する	n // n2
文字 列 書式 タイム スタンプ 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
データ 列 数列 色 差別 ない プロット し その 色 黒 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
プロット 色 明るく する	sns.set(pallete='bright')
オプション グラフ 色 パープル 変更 する	color = 'purple'
文字 列 同じ 調べる	s == s2
オプション 色 ディムグレー 設定 する	color = 'dimgrey'
双曲線 正弦 逆数	math.asinh(x)
整数 バイト 長 調べる	(n.bit_length() + 7) // 8
折れ線 グラフ 四角 印 黄色く する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
破線 色 暗い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
ダーク バイオレット ヒストグラム 色 設定 する	plt.hist(データ列, color='darkviolet')
オプション バッファリング 無効 する	buffering = 0
データ フレーム 中 取り除く	df.dropna()
印字 できる 文字 全て 使う	string.printable
変数 青色 化 する	f'\033[34m{value}\033[0m'
折れ線 グラフ 描画 し 色 ライト ブルー 設定 する	plt.plot(データ列, データ列2, color='lightblue')
ふたつ 関係 真 部分 集合 調べる	aSet < aSet2
折れ線 グラフ ダイアモンドマーカー 黒く する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
部分 文字 列 文字 列 開始 位置 先 含ま れる 調べる	s.find(sub, start) != -1
一 桁 数 判定 する	-9 <= n <= 9
散布 図 黒色 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c='k')
ヒストグラム 描画 し 色 パールゴールデンロッド 設定 する	plt.hist(データ列, color='palegoldenrod')
二つ データ 列 並べ ヒストグラム する	plt.hist([データ列, データ列2], color=['b', 'r'])
ヒストグラム 色 シーグリーン 指定 する	plt.hist(データ列, color='seagreen')
黒色 四角 マーカー データ 列 リスト 散布 図 描く	plt.plot(xdata, ydata, marker='s', c='k')
文字 列 エラー 無視 し バイト 列 変換 する	s.encode(errors='ignore')
文字 列 エポック 秒 タイム スタンプ する	pd.to_datetime(s, unit='s', utc=True)
書き込み 用 文字 列 示す エン コーディング ファイル パス オープン する	open(filepath, mode='w', encoding=s)
表 データ 各 列 毎 グループ 化 し 列 合計 求める	df.groupby(column)[column2].sum()
平均 値 データ フレーム リスト カラム 欠損 値 埋める	df[aList].fillna(df[aList].mean())
等間隔 リスト 個 ビニング し ラベル つける	pd.cut(aList, n, labels=names)
日付 時刻 データ 日曜日 調べる	aDatetime.weekday() == 6
エポック 秒 データ フレーム 日付 データ する	pd.to_datetime(df[col], unit='s', utc=True)
表 データ カラム 選択 する	df[[column, column2, column3, column4]]
ファイル ファイル 読み込む	pd.read_csv(filename, encoding='shift_jis')
最後 列 データ フレーム 消す	df[df.columns[:-1]]
ミディアムアクアマリン 色 ヒストグラム 描画 する	plt.hist(データ列, color='mediumaquamarine')
カラム 位 四捨五入 し 整数 型 する	ds.round(-2).astype(int)
パステル 調 グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
黒い 星 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c='k')
日付 データ 分 分 足す	aDate + datetime.timedelta(minutes=n)
ファイル 文字 列 示す エン コーディング 開く	open(filepath, encoding=s)
文字 列 中 ひとつ 非 英数字 含ま れる	any(not c.isalnum() for c in s)
集合 浅い コピー	aSet.copy()
折れ線 グラフ 色 ミスティローズ 指定 する	plt.plot(データ列, データ列2, color='mistyrose')
ファイル 文字 読み込む	f.read(1)
折れ線 グラフ 三角 マーカー 黄色く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線 グラフ 描画 し 色 設定 する	plt.plot(データ列, データ列2, color='darkslategrey')
既存 ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding='shift_jis')
中央 値 データ フレーム リスト 列 未 入力 値 埋める	df[aList].fillna(df[aList].median())
リスト 配列 折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
データ フレーム カラム ヒストグラム 可視 化 する	plt.hist(df[column])
明るい 色 ヒストグラム プロット する	plt.hist(xdata, color='bright')
二つ 集合 共通 する 要素 なる 集合	aSet.intersection(aSet2)
グラフ 文字 化け 防ぐ	sns.set(font='IPAexGothic')
カウンタ それぞれ 項目 カウント 列挙 する	aCounter.elements()
整数 配列 一つ	n in aArray
データ フレーム リスト カラム 中 欠損 値 合計 数える	df[aList].isna().sum()
データ フレーム 行 と列 入れ替える	df.T
折れ線 グラフ 色 青く する	plt.plot(データ列, データ列2, color='b')
オプション グラフ 色 フクシア 設定 する	color = 'fuchsia'
配列 和	aArray + aArray2
オプション ドジャーブルー 用いる	color = 'dodgerblue'
ヒストグラム 描画 し 色 スラグレー 設定 する	plt.hist(データ列, color='slategray')
グラフ 目的 スライド 設定 する	sns.set(context='talk')
散布 図 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o')
ヒストグラム 色 ネイビー 設定 する	plt.hist(データ列, color='navy')
赤い 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線 グラフ 色 スレート ブルー 指定 する	plt.plot(データ列, データ列2, color='slateblue')
ヒストグラム 描画 し その 色 トマト する	plt.hist(データ列, color='tomato')
範囲 指定 し 整数 乱数 生成 する	random.randint(最小値, 最大値)
乱数 シード 固定 する	random.seed(n)
日付 データ 週間 分 足す	aDate + datetime.timedelta(weeks=n)
データ フレーム 列 リスト 含ま れる データ 抽出 する	df[df[column].isin(aList)]
オプション ディープスカイブルー グラフ 色 設定 する	color = 'deepskyblue'
データ 列 エポック 秒 日付 データ する	pd.to_datetime(ds, unit='s', utc=True)
オプション マーカー 描画 する	marker = '^'
グラフ 色 色 差別 なく する	sns.set(pallete='colorblind')
文字 列 中 大文字 小文字 無視 し パターン マッチ し た 文字 列 リスト 変換 する	re.findall(pattern, s, flags=re.IGNORECASE)
オプション 欠損 値 先頭 する	na_position = 'first'
数式 展開 行う	sympy.expand(e)
線 グラフ 描画 し その 色 コーラル 設定 する	plt.plot(データ列, データ列2, color='coral')
ヒストグラム 描画 し 色 青く する	plt.hist(データ列, color='b')
オリベドラブ 色 ヒストグラム 描画 する	plt.hist(データ列, color='olivedrab')
一 点 鎖線 ヒストグラム 描画 する	plt.hist(データ列, linestyle='dashbot')
オプション グラフ 色 ダークマゼンタ 設定 する	color = 'darkmagenta'
データ フレーム グループ 最小 値	df.groupby(column).min()
データ 列 数列 散布 図 描画 し マーカー 色 カラー コード 変更 する	plt.plot(xdata, ydata, marker='v', c=rgb)
文字 列 全て 大文字 調べる	s.isupper()
データ 列 ラベル 指定 し 棒グラフ 描画 する	plt.bar(ラベル列, データ列)
オプション バリー ウッド 色 使用 する	color = 'burlywood'
リスト データ 列 黒色 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
ヒストグラム 描画 し その 色 ライト グレー 設定 する	plt.hist(データ列, color='lightgray')
辞書 上 項目 名 既に 定義 さ れ いる 調べる	key in aDict
データ 列 折れ線 グラフ 描画 し 印 大 バツ する	plt.plot(データ列, データ列2, marker='X')
カラー バー 付ける	plt.colorbar()
オプション グラフ 色 スプリング グリーン 設定 する	color = 'springgreen'
イテラブル リスト 散布 図 プロット し その 大き さ 設定 する	plt.scatter(xdata, ydata, s=n)
アルファベット 大文字 全部 見る	string.ascii_uppercase
データ フレーム 末尾 行 取り出す	df.tail(n)
データ フレーム リスト カラム 欠損 値 後 行 値 埋める	df[aList].fillna(method='bfill')
ヒストグラム 描画 し その 色 ローン グリーン 指定 する	plt.hist(データ列, color='lawngreen')
個 リスト ビニング する	pd.cut(aList, n)
折れ線 グラフ 描画 し その 色 シアン 設定 する	plt.plot(データ列, データ列2, color='cyan')
本日 日付	datetime.date.today()
イテラブル 文字 列 リスト 変換 し タブ 連結 する	'\t'.join(map(str, iterable))
オプション グラフ 色 ナバホホワイト 指定 する	color = 'navajowhite'
整数 二 進 表現	bin(n)
ヒストグラム 描画 し その 色 パープル 設定 する	plt.hist(データ列, color='purple')
ダークスラテグレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkslategray')
リスト 配列 散布 図 描画 し 下 三角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='v', c=rgb)
線 グラフ 描画 し その 色 ピーチ パフ 変更 する	plt.plot(データ列, データ列2, color='peachpuff')
ヒストグラム 描画 し 色 サドル ブラウン 指定 する	plt.hist(データ列, color='saddlebrown')
自然 数 個 個 取り出し た 時 並べ方 総数	math.perm(n, k)
折れ線 グラフ 描画 し その 色 ロイヤル ブルー 設定 する	plt.plot(データ列, データ列2, color='royalblue')
オプション インディアン レッド 使用 する	color = 'indianred'
カラム 欠損 値 補う	ds.fillna(x)
データ フレーム 複数 列 ソート し 先頭 する	df.sort_values(by=column, na_position='first')
タイムスタンプデータ 時間 減算 する	aDatetime - datetime.timedelta(hours=n)
ヒストグラム 範囲 設定 する	plt.hist(データ列, range=(start, end))
日付 型 データ 列 データ フレーム インデックス する	df.index = pd.DatetimeIndex(ds)
文字 列 日付 時刻 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
オプション 色 オレンジ 指定 する	color = 'orange'
タプル 内 要素 少なくとも ひとつ 真 どう	any(aTuple)
リスト リスト 散布 図 カラー コード 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c=rgb)
データ 列 リスト 黒色 色 差別 ない グラフ プロット する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
データ フレーム リスト カラム 相関 行列 ヒートマップ 描画 する	sns.heatmap(df[aList].corr())
線 グラフ 描画 し その 色 ダーク オレンジ する	plt.plot(データ列, データ列2, color='darkorange')
リスト 先頭 使う	aList[0]
無限 数え上げる する	itertools.count()
リスト 数列 折れ線 グラフ 描画 し その 色 カラー コード 設定 する	plt.plot(xdata, ydata, color=rgb)
グラフ 破線 付ける	plt.axvline(x=0, linestyle='dashed')
ベスト な 場所 凡例 入れる	plt.legend(loc='best')
ファイル パス 絶対 パス 見る	os.path.abspath(filepath)
明るい グラフ 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
オプション 青 緑色 使う	color = 'teal'
もしくは もしくは 等しい	n == 1 or n == 2 or n == 3
データ フレーム 列 二つ 選択 する	df[[column, column2]]
線 グラフ 色 ラベンダー 指定 する	plt.plot(データ列, データ列2, color='lavender')
マゼンタ 文字 列 プリント する	print(f'\033[35m{value}\033[0m')
データ フレーム 列 平均 値 する	df[col].fillna(df[col].mean())
文字 列 日付 データ する	pd.to_datetime(s)
リスト 配列 青い 濃い 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
データ フレーム カテゴリ データ 列 名 一覧 見る	df.select_dtypes('object').columns
折れ線 グラフ 描画 し 色 ダークマゼンタ 設定 する	plt.plot(データ列, データ列2, color='darkmagenta')
キー 辞書 上 定義 済み 調べる	key in aDict
文字 列 タイトル 大文字 小文字	s.istitle()
数式 簡略 する	sympy.sympify(e)
文字 列 開始 位置 番目 終了 位置 番目 間 部分 文字 列 含ま れ ない	s.find(sub, start, end) == -1
文字 列 タプル 含ま れ ない 確認 する	element not in aTuple
折れ線 グラフ 大 バツ マーカー 青色 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
グラフ 描画 明るい カラー パレット 用いる	sns.set(pallete='bright')
オブジェクト リスト クラス	isinstance(obj, list)
色 差別 ない 色 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
文字 列 サフィックス 部分 文字 列	s.endswith(sub)
二つ カウンタ 共通 する 要素 求める	aCounter & aCounter2
リスト リスト カラー コード 淡い グラフ 描く	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
データ フレーム まとめ 置換 する	df.replace(ValueMap)
データ フレーム カラム 何 秒 見る	df[col].dt.second
オプション 出力 先 標準 出力 設定 する	file = sys.stdout
文字 列 右側 空白 除去 する	s.rstrip()
ヒストグラム 描画 し その 色 アンティーク ホワイト 設定 する	plt.hist(データ列, color='antiquewhite')
リスト リスト 濃い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
データ フレーム カラム 文字 列 欠損 値 変換 する	df[col].replace(s, np.nan)
オプション 色 ライト ブルー セット する	color = 'lightblue'
日付 時刻 データ 日付 時刻 データ 時間 差 秒 求める	(aDatetime - aDatetime2).total_seconds()
オプション 色 指定 する	color = 'darkslategrey'
赤色 暗い 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
積	n * n2
データ フレーム リスト カラム どの 値 頻出 見る	df[aList].mode()
改行 区切っ つ 実行 結果 プリント する	print(value, value2, sep='\n')
オプション グラフ 色 ミッドナイト ブルー 設定 する	color = 'midnightblue'
実数 百 位 丸める	round(x, -2)
ヒストグラム 描画 し その 色 ゴースト ホワイト 設定 する	plt.hist(データ列, color='ghostwhite')
文字 列 下線 付き プリント する	print(f'\033[4m{value}\033[0m')
パステル 調 色 データ 列 柱状 図 プロット する	plt.hist(xdata, color='pastel')
オプション トマト 色 使う	color = 'tomato'
データ フレーム 全体 インデックス 整列 する	df.sort_index()
オブジェクト タプル 型 調べる	isinstance(obj, tuple)
ヒストグラム 色 ダーク オリーブ グリーン セット する	plt.hist(データ列, color='darkolivegreen')
データ 列 中 ある 文字 列 合計 数える	ds.isin([value]).sum()
ヒストグラム 描画 し その 色 ミディアムシアグリーン 変更 する	plt.hist(データ列, color='mediumseagreen')
カラム 値 データ フレーム グループ 化 し グループ ごと 件数 知る	df.groupby(column).size()
実線 ヒストグラム 描画 する	plt.hist(データ列, linestyle='solid')
列 ユニーク な 値 見る	ds.unique()
折れ線 グラフ 描画 し 色 オリーブ 指定 する	plt.plot(データ列, データ列2, color='olive')
グラフ 色 明るく する	sns.set(pallete='bright')
数式 積分 する	sympy.integrate(e)
範囲 指定 し 部分 文字 列 文字 列 後ろ 探す	s.find(sub, start, end)
リスト データ 列 散布 図 描画 する	plt.scatter(xdata, ydata)
リスト リスト カラー コード 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
実数 切り下げ 整数 変換 する	math.floor(x)
折れ線 グラフ 黒い 左 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
オプション サーモン 色 使用 する	color = 'salmon'
ヒストグラム 描画 し 色 ハニーデュー 設定 する	plt.hist(データ列, color='honeydew')
ファイル パス バイナリ 書き込み モード オープン し する	f = open(filepath, mode='wb')
データ フレーム 指定 さ れ た データ 型 列 名 一覧 使う	df.select_dtypes(型).columns
ヒストグラム 色 ローン グリーン 設定 する	plt.hist(データ列, color='lawngreen')
オプション マーカー 変更 する	marker = 'v'
変数 マゼンタ プリント できる 文字 列 変換 する	f'\033[35m{value}\033[0m'
ファイル パス 文字 列 示す エン コーディング 用い 開く	open(filepath, encoding=s)
折れ線 グラフ 色 白 設定 する	plt.plot(データ列, データ列2, color='white')
データ フレーム カラム 行 抽出 する	df[df[column] == x]
リスト リスト パステル 調 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
ヒストグラム 描画 し 色 青 設定 する	plt.hist(データ列, color='blue')
折れ線 グラフ 色 黄色く する	plt.plot(データ列, データ列2, color='y')
リスト 個 等間隔 分割 し ラベル つける	pd.cut(aList, n, labels=names)
列 値 データ フレーム 欠損 値 含め グループ 化 する	df.groupby(column, dropna=False)
文字 列 リスト リスト 変換 し タブ 結合 する	'\t'.join(map(str, iterable))
ヒストグラム 描画 し その 色 ダークマゼンタ する	plt.hist(データ列, color='darkmagenta')
データ フレーム 列 グループ 化 し それぞれ グループ ごと 個数 求める	df.groupby(column).count()
日付 データ 秒 分 引く	aDate - datetime.timedelta(seconds=n)
浮動 小数点 数 三 乗	x ** 3
文字 列 複数 行 対応 正規 表現 分割 する	re.split(pattern, s, flags=re.MULTILINE)
データ フレーム 行 目 以降 取り出す	df[n:]
データ フレーム 重複 落とす	df.drop_duplicates()
オプション ベージュ 色 設定 する	color = 'beige'
濃い 色 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, c='deep')
データ フレーム 列 型 する	df[col] = df[col].astype(ty)
シーケンス 文字 列 リスト 変換 し 改行 連結 する	'\n'.join(map(str, iterable))
両端 キュー タプル 変換 する	tuple(deq)
データ フレーム リスト カラム 中 未 入力 値 数 数える	df[aList].isna().sum()
複数 列 ヒストグラム 一 度 描画 する	sns.pairplot(df[[column, column2, column3]])
線 グラフ 色 ミッドナイト ブルー セット する	plt.plot(データ列, データ列2, color='midnightblue')
日付 時刻 データ 何 分 知る	aDatetime.minute
カウンタ 低 頻出 方 列挙 する	aCounter.most_common()[::-1]
折れ線 グラフ 色 コーンズシルク 設定 する	plt.plot(データ列, データ列2, color='cornsilk')
日付 時刻 データ 数値 する	aDatetime.timestamp()
ダーク オリーブ グリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkolivegreen')
線 グラフ 描画 し その 色 ダークオーキッド 設定 する	plt.plot(データ列, データ列2, color='darkorchid')
オプション ダーク グレー 色 使う	color = 'darkgrey'
が 名前 付き タプル 型	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
イテラブル 個 サンプリング する	random.sample(iterable, k=n)
データ フレーム 用いる	import pandas as pd
オプション 読み込み 用 指定 する	mode = 'r'
文字 列 内 数字 ある	any(c.isdigit() for c in s)
赤い ポイント マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c='r')
ビン 数 等量 データ 列 ビン 分割 する	pd.qcut(ds, n)
イテラブル ヒストグラム パステル 調 色 描画 する	plt.hist(xdata, color='pastel')
データ フレーム 列 第 三 四 分 位 数	df[col].quantile(0.75)
データ フレーム 列 値 まとめ た グループ	df.groupby('A')
オプション ラベンダー 色 使う	color = 'lavender'
折れ線 グラフ 線 幅 バツ 印 描画 する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線 グラフ 描画 し その 色 紺 指定 する	plt.plot(データ列, データ列2, color='darkblue')
ヒストグラム ビン 数 設定 し 描く	plt.hist(データ列, bins=n)
折れ線 グラフ サイズ ダイアモンドマーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markersize=n)
オプション 改行 セパレータ 使う	sep = '\n'
折れ線 グラフ 描画 し その 色 ライム 指定 する	plt.plot(データ列, データ列2, color='lime')
折れ線 グラフ 色 黒く する	plt.plot(データ列, データ列2, color='k')
書式 データ 列 日付 データ 変換 する	pd.to_datetime(ds, format='%Y-%m-%d')
床	math.floor(x)
ライト グレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightgrey')
初期 値 全 要素 初期 化 さ れ た 配列	np.full(要素数, 初期値, dtype=np.int)
折れ線 グラフ 大き さ 丸 印 描画 する	plt.plot(データ列, データ列2, marker='o', markersize=n)
黒い パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
ヒストグラム 色 紺碧 設定 する	plt.hist(データ列, color='azure')
正規 分布 乱数 求める	random.normalvariate(mu=0.5, sigma=0.2)
偶数	n % 2 == 0
ダーク オリーブ グリーン ヒストグラム 色 変更 する	plt.hist(データ列, color='darkolivegreen')
データ フレーム 型 列 抽出 する	df.select_dtypes(ty)
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 最小 値 求める	df.groupby([column, column2], as_index=False).min()
文字 列 文字 列 リスト いづれ	s in aStringList
二つ データ フレーム 異なる カラム キー 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
リスト 番目 要素 削除 する	del aList[n]
タブ 文字 見る	'\t'
データ フレーム 指定 さ れ た 列 取り出す	df[column]
オプション バイナリ 書き込み モード 使う	mode = 'wb'
ヒストグラム 色 シスル 設定 する	plt.hist(データ列, color='thistle')
数字 全部 見る	string.digits
ディレクトリ 求める	os.getcwd()
要素 全て ベクトル	np.ones(要素数, dtype=np.int)
茶色 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='brown')
ヒストグラム 描画 し その 色 グレー 設定 する	plt.hist(データ列, color='grey')
ベクトル 標準 偏差	np.std(aArray)
オプション 分割 記号 使わ ない	sep = ''
ブラック 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='black')
オプション セパレータ コロン する	sep = ':'
無限 続く 数列	itertools.repeat(n)
実数 実数	x // y
配列 要素 ごと 積	np.multiply(aArray, aArray2)
列 と列 キー し データ フレーム 外部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
折れ線 グラフ 色 ライト コーラル セット する	plt.plot(データ列, データ列2, color='lightcoral')
グラフ 破線 付ける	plt.axhline(y=0, linestyle='dashed')
形式 文字 列 読み込む	json.loads(jsonString)
イテラブル リスト 散布 図 描画 し マーカー 丸 設定 する	plt.plot(xdata, ydata, marker='o')
ヒストグラム 描画 し その 色 バリーウッド セット する	plt.hist(データ列, color='burlywood')
ふたつ 集合 共通 要素 持た ない 調べる	aSet.isdisjoint(aSet2)
異なる 個 もの 個 選ぶ 場合 数	math.comb(n, k)
データ フレーム 指定 さ れ た データ 型 列 名 一覧	df.select_dtypes(型).columns
オプション オールド レース 色 使う	color = 'oldlace'
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
イテラブル カウンタ 新規 生成 する	collections.Counter(iterable)
オプション グラフ 色 オレンジ レッド 設定 する	color = 'orangered'
データ フレーム 列 名前 一覧 指定 さ れ た カラム 削除 する	df.drop(columns, axis=1)
オプション グラフ 色 ライト コーラル 設定 する	color = 'lightcoral'
オプション ダーク ブルー 色 用いる	color = 'darkblue'
データ フレーム 列 名 リスト キー し 並べる	df.sort_values(by=column)
折れ線 グラフ 描画 し 色 ライトスレイグレー 設定 する	plt.plot(データ列, データ列2, color='lightslategrey')
文字 列 両端 部分 文字 列 取り除く	s.strip(sub)
キー マップ 上 定義 済み	key in aDict
もしくは もしくは 等しい	x == 1 or x == 2 or x == 3
オプション 読み込む 行 番号 指定 する	usecols = names
ダーク オリーブ グリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkolivegreen')
文字 列 開始 位置 終了 位置 間 部分 文字 列 含ま れ ない	s.find(sub, start, end) == -1
ヒストグラム 色 ピンク 指定 する	plt.hist(データ列, color='pink')
文字 列 最後 部分 文字 列 分割 し た とき 前半 文字 列 求める	s.rpartition(sub)[0]
文字 列 区切っ 二つ 文字 列 プリント する	print(value, value2, sep=s)
折れ線 グラフ 色 ライト コーラル する	plt.plot(データ列, データ列2, color='lightcoral')
カラー コード 菱形 マーカー 用い 散布 図 プロット する	plt.plot(xdata, ydata, marker='D', c=rgb)
データ フレーム リスト 列 最 頻 値 埋める	df[aList].fillna(df[aList].mode().iloc[0])
文字 列 両端 余分 な 空白 取り除く	s.strip()
データ フレーム リスト カラム 欠損 値 直後 値 埋める	df[aList].fillna(method='bfill')
大 バツ マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='X')
文字 列 走査 し 正規 表現 マッチ する 調べる	re.search(pattern, s)
ヒストグラム 描画 し 色 トマト 変更 する	plt.hist(データ列, color='tomato')
双方向 キュー 中 要素 含ま れ てる	element in deq
ヒストグラム 描画 し 色 シエナ 変更 する	plt.hist(データ列, color='sienna')
両端 キュー 部分 値	collections.deque(itertools.islice(deq, start, end))
文字 列 最初 部分 文字 列 二分 する	s.partition(sub)
黄色 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='yellow')
オプション ハニーデュー 色 使う	color = 'honeydew'
つ データ フレーム 縦 方向 連結 する	pd.concat([df, df2], axis=0)
折れ線 グラフ 色 青 紫 設定 する	plt.plot(データ列, データ列2, color='violet')
リスト リスト 明るい グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
データ フレーム カテゴリ データ 列 抽出 する	df.select_dtypes('object')
行列 重複 除い た 配列 作成 する	np.unique(aArray)
ヒストグラム 描画 し その 色 ロイヤル ブルー 指定 する	plt.hist(データ列, color='royalblue')
変数 無限 大 近づく とき 数式 極限 値 求める	sympy.limit(e, z, oo)
折れ線 グラフ バツ マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線 グラフ 描画 し その 色 ミスティローズ 変更 する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線 グラフ 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightseagreen')
データ フレーム リスト 列 平均 値	df[aList].mean()
メディアン データ 列 埋める	ds.fillna(ds.median())
タプル 順序付け する	enumerate(aTuple)
実数	math.isnan(x)
ふたつ 集合 和 集合 計算 する	aSet.union(aSet2)
ヒストグラム 描画 し 色 設定 する	plt.hist(データ列, color='darkslategrey')
パールゴールデンロッド ヒストグラム 色 指定 する	plt.hist(データ列, color='palegoldenrod')
配列 行 ごと 平均 算出 する	np.mean(aArray, axis=1)
黒色 数値 表示 する	print(f'\033[30m{value}\033[0m')
乱数 シード 固定 する	random.seed(n)
タブ 区切り ファイル 読み込む	pd.read_csv(filename, encoding='shift_jis')
ファイル パス 存在 し ない 調べる	not os.path.exists(filepath)
淡い 色 リスト 度数 分布 図 プロット する	plt.hist(xdata, color='muted')
折れ線 グラフ 描画 し その 色 アクアマリン 設定 する	plt.plot(データ列, データ列2, color='aquamarine')
リスト 変化 折れ線 グラフ 描く	plt.plot(range(len(xdata)), xdata)
折れ線 グラフ 描画 し その 色 アクア 指定 する	plt.plot(データ列, データ列2, color='aqua')
文字 列 文字 列 リスト ある	s in aStringList
データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col])
折れ線 グラフ 右 三 角 マーカー サイズ 設定 する	plt.plot(データ列, データ列2, marker='>', markersize=n)
ヒストグラム 色 ミスティローズ 設定 する	plt.hist(データ列, color='mistyrose')
オブジェクト バイト サイズ 調べる	sys.getsizeof(obj)
線 グラフ 描画 し その 色 サドル ブラウン 設定 する	plt.plot(データ列, データ列2, color='saddlebrown')
線 グラフ 描画 し その 色 ブラック 設定 する	plt.plot(データ列, データ列2, color='black')
ダーク サーモン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darksalmon')
インタプリタ 実行 ファイル 絶対 パス 知る	sys.executable
ひとつ 英数字 文字 列 内 含ま れる 調べる	any(c.isalnum() for c in s)
実数 平方根 求める	math.sqrt(x)
ターコイズ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='turquoise')
データ 列 分 求める	ds.dt.minute
実数 浮動 小数点 数 減算 する	x - y
リスト リスト 散布 図 描画 し クロス マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='x', c=rgb)
データ フレーム グループ 化 し それぞれ 列 平均 値 求める	df.groupby(column)[column2].mean()
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 合計 求める	df.groupby([column, column2], as_index=False).sum()
オプション アイボリー 色 用いる	color = 'ivory'
正規 表現 データ フレーム リスト カラム 値 置換 する	df[aList].replace(pattern, repl, regex=True)
オプション グラフ 色 茶色 セット する	color = 'brown'
折れ線 グラフ マーカー 赤く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
文字 列 中 大文字 小文字 無視 し 正規 表現 全て マッチ 使う	re.findall(pattern, s, flags=re.IGNORECASE)
ひとつ 非 英字 文字 列 中 ある どう 判定 する	any(not c.isalpha() for c in s)
エポック 秒 日付 時刻 変換 する	datetime.datetime.fromtimestamp(timestamp)
日付 時刻 データ 日付 時刻 データ 後ろ 調べる	aDatetime > aDatetime2
文字 列 青色 プリント できる 文字 列 変換 する	f'\033[34m{value}\033[0m'
散布 図 赤い 三角 マーカー 使う	plt.plot(xdata, ydata, marker='^', c='r')
オプション 小麦色 使用 する	color = 'wheat'
鉛直 方向 一 点 鎖線 付ける	plt.axvline(x=0, linestyle='dashbot')
データ フレーム 列 値 以上 行 抽出 する	df[df[column] >= x]
折れ線 グラフ 下 三角 マーカー 黄色く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
オプション カデット ブルー グラフ 色 変更 する	color = 'cadetblue'
部分 文字 列 文字 列 開始 位置 終了 位置 間 含ま れる 調べる	s.find(sub, start, end) != -1
八 進 文字 列 整数 変換 する	int(s, 8)
線 グラフ 色 ライトグリーン 変更 する	plt.plot(データ列, データ列2, color='lightgreen')
データ フレーム 重複 し た 行 ドロップ し 入れ替える	df.drop_duplicates(inplace=True)
配列 色 差別 ない 色 ヒストグラム 描く	plt.hist(xdata, color='colorblind')
日付 時刻 データ 何 年 知る	aDatetime.year
列 値 正規 表現 まとめ 置き換える	ds.replace(pattern, repl, regex=True)
出力 ストリーム 全体 リスト 読み込む	f.readlines()
オプション バイナリ 用 指定 する	mode = 'rb'
商	n / n2
実数 無限 大 どう 確認 する	math.isinf(x)
辞書 項目 名 存在 し い ない とき 要素 追加 する	aDict.setdefault(key, element)
オプション アクアマリン 色 用いる	color = 'aquamarine'
整数 ゼロ 埋め し た 文字 列 変換 する	str(n).zfill(文字列幅)
オプション グラフ 色 ミディアムスプリンググリーン 設定 する	color = 'mediumspringgreen'
オプション マルーン 色 用いる	color = 'maroon'
実行 結果 下線 付き する	f'\033[4m{value}\033[0m'
両端 キュー 文字 列 する	deq.appendleft(element)
散布 図 カラー コード マーカー 用いる	plt.plot(xdata, ydata, marker='^', c=rgb)
行列 擬似 逆 行列 算出 する	np.linalg.pinv(aArray)
無限 な イテラブル	itertools.repeat(n)
データ フレーム 型 リスト 指定 し た データ 型 列 除外 する	df.select_dtypes(exclude=typeList)
データ フレーム カラム 中 いくつ 文字 列 ある 数える	df[col].isin([value]).sum()
文字 列 キャピタライズ する	s.capitalize()
実数 常用 対数	math.log10(x)
オプション 書き込み モード 設定 する	mode = 'w'
リスト リスト 散布 図 描画 する	plt.scatter(xdata, ydata)
黒い ポイント マーカー リスト 数列 散布 図 プロット する	plt.plot(xdata, ydata, marker='.', c='k')
タプル カンマ 区切り 表示 する	print(*aTuple, sep=',')
リスト リスト パステル 調 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
リスト リスト 散布 図 描画 し 右 三 角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='>', c=rgb)
折れ線 グラフ 描画 し 色 ダーク グリーン 変更 する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線 グラフ 描画 し 色 モカシン する	plt.plot(データ列, データ列2, color='moccasin')
各 列 毎 データ フレーム 集計 し 列 最小 値 求める	df.groupby(column)[column2].min()
縦 データ フレーム 合体 さ せる	pd.concat([df, df2, df3], axis=0)
データ 列 リスト 散布 図 描画 し マーカー 星 設定 する	plt.plot(xdata, ydata, marker='*')
キュー 右側 数値 追加 する	deq.append(element)
リスト イテラブル 散布 図 赤い マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='r')
ヒストグラム 描画 し 色 黄色く する	plt.hist(データ列, color='y')
黒色 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
ヒストグラム 色 ネイビー セット する	plt.hist(データ列, color='navy')
ファイル ファイル 名	os.path.basename(filepath)
文字 列 開始 位置 終了 位置 間 部分 文字 列 登場	s.count(sub, start, end)
要素 集合 含ま れ ない どう 調べる	element not in aSet
線 グラフ 色 スプリング グリーン 変更 する	plt.plot(データ列, データ列2, color='springgreen')
リスト リスト 破線 グラフ 描い その 色 パステル 調 の 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
パレットトルコイズ ヒストグラム 色 設定 する	plt.hist(データ列, color='paleturquoise')
一方 含ま れ 他方 含ま れ ない 集合	aSet.difference(aSet2)
ライトグリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightgreen')
整数 八 進 文字 列	oct(n)[2:]
文字 列 内 ひとつ 数字 含ま れる	any(c.isdigit() for c in s)
データ フレーム グループ 毎 標準 偏差	df.groupby(column).std()
折れ線 グラフ 描画 し その 色 ミント クリーム 設定 する	plt.plot(データ列, データ列2, color='mintcream')
オプション 色 プラム セット する	color = 'plum'
データ 列 尖 度	ds.skew()
カウンタ 最も 頻出 な 要素 件数 算出 する	aCounter.most_common()[1]
オプション ダーク オリーブ グリーン グラフ 色 指定 する	color = 'darkolivegreen'
青い 濃い プロット する	plt.plot(xdata, ydata, linestyle='deep', color='b')
ふたつ 関係 上位 集合 もしくは 等しい 調べる	aSet > aSet2
最小 値 データ フレーム カラム 欠損 値 埋める	df[col].fillna(df[col].min())
ヘッダ 指定 せ ず 読み込む	pd.read_csv(filename, header=None)
列 キー し データ フレーム 内部 結合 する	pd.merge(df, df2, on=column, how='inner')
データ フレーム それぞれ グループ ごと 分散 求める	df.groupby(column).var()
データ フレーム 欠損 値 前 行 値 する	df.fillna(method='ffill')
小数点 数 双曲線 正弦	math.sinh(x)
折れ線 グラフ 印 バツ 印 する	plt.plot(データ列, データ列2, marker='x')
両端 キュー 要素 インプレース 逆順 する	deq.reverse()
オプション グラフ 色 スレート ブルー 指定 する	color = 'slateblue'
スラグレー ヒストグラム 色 セット する	plt.hist(データ列, color='slategrey')
データ 列 等間隔 個 分割 する	pd.cut(ds, n)
データ フレーム リスト カラム 中 文字 列 文字 列 いくつ 存在 する 数える	df[aList].isin([value, value2]).sum()
降順 データ フレーム 破壊 的 列 ソート する	df.sort_values(by=column, ascending=False, inplace=True)
整数 整数	x.is_integer()
オブジェクト 集合 クラス	isinstance(obj, set)
データ 列 中 文字 列 存在 する	ds.isin([value])
折れ線 グラフ 色 やわらかい 青 設定 する	plt.plot(データ列, データ列2, color='cornflowerblue')
赤い 右 三 角 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c='r')
全 要素 初期 化 さ れ た 配列	np.ones(要素数, dtype=np.int)
オプション 先頭 カラム インデックス 設定 する	index_col = 0
二つ マッピング ネスト 化 する	collections.ChainMap(aDict, aDict2)
画面 用 グラフ 設定 する	sns.set(context='notebook')
データ フレーム 重複 する データ 削除 する	df.drop_duplicates()
改行	'\n'
ヒストグラム 描画 し その 色 スラグレー 指定 する	plt.hist(データ列, color='slategray')
以上 かつ 以下	n <= n2 and n2 <= n3
文字 列 中 部分 文字 列 含ま れ ない	sub not in s
文字 列 区切り 区切り 列挙 する	s.split(sep)
黒い 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='k')
カラム 欠損 値 最 頻 値 セット する	ds.fillna(ds.mode().iloc[0])
ヒストグラム 色 赤 指定 する	plt.hist(データ列, color='red')
青い 濃い 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
ファイル 開く	open(filepath)
文字 列 イテラブル 変換 し 空白 結合 する	' '.join(map(str, iterable))
白色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='white')
データ フレーム 中 列 ビン 数 ビン 分割 する	pd.cut(df[col], n)
二 進 文字 列 整数 変換 する	int(s, 2)
オプション ミディアムパープル 色 使う	color = 'mediumpurple'
データ フレーム 中 欠損 値 合計 カウント する	df.isna().sum()
データ フレーム 列 値 で ない 行 フィルタ する	df[df[column] == x]
ヒストグラム 描画 し 色 サーモン 設定 する	plt.hist(データ列, color='salmon')
線 グラフ 描画 し 色 ミディアムバイオレットレッド 設定 する	plt.plot(データ列, データ列2, color='mediumvioletred')
標準 入力 文字 読み込む	sys.stdin.read(1)
値 下線 付き プリント できる 文字 列 変換 する	f'\033[4m{value}\033[0m'
折れ線 グラフ 描画 し その 色 トマト 設定 する	plt.plot(データ列, データ列2, color='tomato')
オプション グラフ 色 ダークスラテグレー 設定 する	color = 'darkslategray'
オプション 文字 限定 する	flag = re.ASCII
ヒストグラム 色 指定 する	plt.hist(データ列, color='darkslategrey')
青 緑色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='teal')
二つ 実行 結果 改行 なし プリント する	print(value, value2, end='')
平均 標準 偏差 疑似 乱数 発生 さ せる	random.normalvariate(mu=0.5, sigma=0.2)
データ フレーム イン ポート する	import pandas as pd
日付 データ 日付 データ 遅い	aDate > aDate2
表 データ データ 型 リスト	df.dtypes
リスト パステル 調 色 ヒストグラム 描画 する	plt.hist(xdata, color='pastel')
データ フレーム カラム 正規 表現 文字 列 マッチ する 行 抽出 する	df[df[column].str.match(s)]
線 グラフ 描画 し その 色 ダーク グレー 設定 する	plt.plot(データ列, データ列2, color='darkgrey')
マゼンタ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='magenta')
プラットホーム エン コーディング 使う	sys.getdefaultencoding()
ミディアムシアグリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='mediumseagreen')
乗 求める	n ** 2
線 グラフ 描画 し その 色 ダーク レッド 設定 する	plt.plot(データ列, データ列2, color='darkred')
カウンタ 同士 ユニオン	aCounter | aCounter2
ナバホホワイト 色 ヒストグラム 描画 する	plt.hist(データ列, color='navajowhite')
青い 右 三 角 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
オプション パウダー ブルー グラフ 色 設定 する	color = 'powderblue'
オプション ダイアモンドマーカー 使う	marker = 'D'
ヒストグラム 描画 し その 色 プラム 変更 する	plt.hist(データ列, color='plum')
オブジェクト プロパティ ある 調べる	hasattr(obj, プロパティ名)
等差 数列 整数 乱数 生成 する	random.randrange(start, end, step)
配列 データ 列 散布 図 描画 し マーカー ポイント 設定 する	plt.plot(xdata, ydata, marker='.')
黒色 バツ マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='x', c='k')
プロット データ ラベル 位置 指定 する	plt.legend(loc=(x, y))
ヒストグラム 描画 し その 色 インディアン レッド 設定 する	plt.hist(データ列, color='indianred')
最初 カテゴリー 除外 し データ フレーム 列 ダミー 変数 変換 する	pd.get_dummies(df[column], drop_first=True)
積 算出 する	n * n2
折れ線 グラフ 色 赤く する	plt.plot(データ列, データ列2, color='r')
データ フレーム 列 未 入力 値 直前 値 埋める	df[col].fillna(method='ffill')
折れ線 グラフ 三角 マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
グラフ 横 軸 ラベル 付ける	plt.xlabel(untitled)
線 グラフ 描画 し 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線 グラフ 描画 し その 色 パールゴールデンロッド 設定 する	plt.plot(データ列, データ列2, color='palegoldenrod')
色 差別 ない グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
列 正規 分布 どの 程度 歪ん いる 見る	ds.kurt()
本日 土曜日	datetime.datetime.today().weekday() == 5
等しい 値	None
データ フレーム 列 各 データ 何 回 出現 する 見る	df[col].value_counts()
エクセルファイルファイル ファイル データ フレーム 保存 する	df.to_excel(filename)
ヒストグラム 描画 し 色 オレンジ 設定 する	plt.hist(データ列, color='orange')
ヒストグラム 色 パパイヤウィップ 設定 する	plt.hist(データ列, color='papayawhip')
ヒストグラム 色 ターコイズ 設定 する	plt.hist(データ列, color='turquoise')
リスト 数列 散布 図 描画 し マーカー 変更 する	plt.plot(xdata, ydata, marker='v')
赤色 淡い 折れ線 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
データ フレーム 各 列 毎 グループ 化 し 列 合計 求める	df.groupby(column)[column2].sum()
折れ線 グラフ 四角 マーカー 青く する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
八 進 文字 列 バイト 列 する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
ヒストグラム 描画 し その 色 スラグレー 設定 する	plt.hist(データ列, color='slategrey')
ファイル 全体 行 単位 分割 し 読み込む	f.readlines()
データ 列 リスト 散布 図 描画 し 色 淡い 設定 する	plt.plot(xdata, ydata, c='muted')
ナバホホワイト 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='navajowhite')
線 グラフ 描画 し その 色 ダーク カーキ 設定 する	plt.plot(データ列, データ列2, color='darkkhaki')
以下 それ 以上	n <= n2 or n >= n3
文字 列 アルファベット 調べる	s.isalpha()
小文字 列	string.ascii_lowercase
イテラブル カウンタ 変換 する	collections.Counter(iterable)
黒い 色 差別 ない プロット する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
折れ線 グラフ 左 三 角 マーカー 使う	plt.plot(データ列, データ列2, marker='<')
ヒストグラム 描画 し その 色 ライトスレイグレー 設定 する	plt.hist(データ列, color='lightslategray')
グラフ 見栄え 綺麗 する	import seaborn as sns
文字 列 全て 識別子 名 どう 調べる	s.isidentifier()
リスト リスト 散布 図 描い 星 マーカー 色 カラー コード 変更 する	plt.plot(xdata, ydata, marker='*', c=rgb)
オプション オレンジ グラフ 色 変更 する	color = 'orange'
集合 別 集合 要素 全て 除く	aSet.difference_update(aSet2)
辞書 形式 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False)
整数 タプル どれ 調べる	n in aTuple
文字 列 スタック スタック する	deq.append(element)
散布 図 赤い 大 バツ マーカー 使う	plt.plot(xdata, ydata, marker='X', c='r')
ヒストグラム 描画 し その 色 ホワイトスモーク 設定 する	plt.hist(データ列, color='whitesmoke')
リスト イテラブル 黒い パステル 調 の 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
オプション ディムグレー 用いる	color = 'dimgray'
淡い 色 配列 データ 列 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
折れ線 グラフ 色 ペールグリーン 変更 する	plt.plot(データ列, データ列2, color='palegreen')
日付 時刻 データ 浮動 小数点 数 変換 する	aDatetime.timestamp()
ベクトル 元 全 要素 行列	np.ones_like(aArray)
日付 時刻 データ 週間 分 引く	aDatetime - datetime.timedelta(weeks=n)
ヒストグラム 描画 し その 色 ライト シアン 変更 する	plt.hist(データ列, color='lightcyan')
データ フレーム 列 昇順 ソート し 更新 する	df.sort_values(by='A', ascending=True, inplace=True)
マッピング 項目 名 値 もしくは 要素 得る	aDict.get(key, element)
乱数 シード 初期 化 する	random.seed()
ヒストグラム 描画 し その 色 ライトグリーン 設定 する	plt.hist(データ列, color='lightgreen')
ヒストグラム 描画 し その 色 コーラル 指定 する	plt.hist(データ列, color='coral')
データ フレーム 列 値 リスト 含ま れる 行 取り出す	df[df[column].isin(aList)]
データ フレーム 列 データ 取り出す	df[df[column] == x]
ファイル パス 拡張 子 なし ファイル 名 使う	os.path.splitext(os.path.basename(filepath))[0]
線 グラフ 色 ホワイトスモーク 設定 する	plt.plot(データ列, データ列2, color='whitesmoke')
実数 小数点 丸める	round(x, n)
リスト 配列 散布 図 描い マーカー 色 濃い 設定 する	plt.plot(xdata, ydata, c='deep')
データ 列 正規 分布 どれ 歪ん いる 見る	ds.kurt()
リスト リスト 折れ線 グラフ プロット し アルファ 設定 する	plt.plot(xdata, ydata, alpha=alpha)
列 セット する	set(iterable)
一方 含ま れ 他方 含ま れ ない 集合	aSet.difference(aSet2)
ディープスカイブルー ヒストグラム 色 設定 する	plt.hist(データ列, color='deepskyblue')
折れ線 グラフ 線 幅 左 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
折れ線 グラフ バツ 印 大き さ 設定 する	plt.plot(データ列, データ列2, marker='x', markersize=n)
リスト 数列 黒い 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
データ フレーム 重複 し いる 調べる	df.duplicated()
オプション スレート ブルー 色 設定 する	color = 'slateblue'
日付 データ 日数	aDate.day
集合 更新 不能 版	frozenset(aSet)
文字 列 中 非 大文字 ある 調べる	any(not c.isupper() for c in s)
プロット カラー テーマ 全般 的 暗く する	sns.set(pallete='dark')
折れ線 グラフ 描画 し その 色 ダークスラテグレー 設定 する	plt.plot(データ列, データ列2, color='darkslategray')
ヒストグラム 描画 し 半 透明 する	plt.hist(データ列, alpha=0.5)
データ フレーム リスト カラム 中 含ま れる 日付 データ 個数 数える	df[aList].isin([value, value2]).sum()
データ フレーム 各 列 列 組み合わせ 毎 集約 し 個数 求める	df.groupby([column, column2], as_index=False).count()
ヒストグラム 描画 し その 色 ダークシアグリーン 変更 する	plt.hist(データ列, color='darkseagreen')
本日 書式 文字 列 する	datetime.datetime.today().isoformat()
文字 列 変数 変換 する	sympy.Symbol(s)
データ フレーム 複数 列 昇順 並べ 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
データ フレーム 関数 値 集約 し 列挙 する	[(name, group) for name, group in df.groupby(関数)]
データ フレーム カラム 正規 分布 どの 程度 歪ん いる 見る	df[col].kurt()
テンプレート マッピング 文字 列 整形 する	formatText.format_map(aDict)
シーケンス 関数 フィルタ する	filter(func, iterable)
余弦	math.cos(x)
ローン グリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lawngreen')
つ データ フレーム 横 方向 つなぐ	pd.concat([df, df2], axis=1)
直後 値 データ フレーム リスト 列 欠損 値 埋める	df[aList].fillna(method='bfill')
データ フレーム カラム 中 ある 文字 列 合計 数える	df[col].isin([value]).sum()
整数 進 表記	bin(n)
線 グラフ 描画 し その 色 ラベンダー ブラッシュ 設定 する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線 グラフ 右 三 角 マーカー 緑色 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
横 棒グラフ 描画 し 幅 設定 する	plt.barh(ラベル列, データ列, width=x)
イテラブル 配列 カラー コード パステル 調 の 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
オプション グラフ 色 オリベドラブ 変更 する	color = 'olivedrab'
リスト パステル 調 色 ヒストグラム 描画 する	plt.hist(xdata, color='pastel')
要素 マップ 値 含ま れ いる	element in aDict.values()
プラットホーム 調べる	sys.platform.startswith('win32')
リスト リスト 散らばり 可視 化 する	plt.scatter(xdata, ydata)
データ フレーム リスト カラム 欠損 値 最 頻 値 設定 する	df[aList].fillna(df[aList].mode().iloc[0])
スプリング グリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='springgreen')
配列 データ 列 明るい グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
オプション 色 ロージーブラウン 設定 する	color = 'rosybrown'
ヒストグラム 色 ピーチ パフ 設定 する	plt.hist(データ列, color='peachpuff')
リスト リスト 散布 図 描い マーカー 丸 設定 する	plt.plot(xdata, ydata, marker='o')
日付 時刻 データ 何 秒 知る	aDatetime.second
文字 列 変数 名 数式 変換 する	sympy.Symbol(s)
配列 リスト 散布 図 プロット し マーカー 左 三 角 指定 する	plt.plot(xdata, ydata, marker='<')
オプション 色 ラベンダー 設定 する	color = 'lavender'
列 キー 二つ データ フレーム 左 結合 する	pd.merge(df, df2, on=column, how='left')
列 一意 な 要素 数	df[col].nunique()
日付 時刻 データ 時間 数 使う	aDatetime.hour
データ フレーム 指定 さ れ た 列 リスト 変換 する	df[column].values.tolist()
データ フレーム 列 重複 あれ マスク する	df.duplicated(subset=column)
ゴースト ホワイト 色 ヒストグラム 描画 する	plt.hist(データ列, color='ghostwhite')
実数 進 対数	math.log(x, k)
データ 列 値 まとめ 置換 する	ds.replace(ValueMap)
日付 データ 日付 データ 時間 差	aDate - aDate2
黄色い ヒストグラム 描画 する	plt.hist(データ列, color='y')
オブジェクト バイト 列 どう 確認 する	isinstance(obj, bytes)
オプション ミディアムバイオレットレッド グラフ 色 セット する	color = 'mediumvioletred'
リスト 要素 小さい 順 並べ 変える	sorted(aList, reverse=True)
ファイル バイナリ モード オープン し する	f = open(filepath, mode='rb')
オプション ライト コーラル 使う	color = 'lightcoral'
ヒストグラム 描画 し その 色 淡い ピンク色 設定 する	plt.hist(データ列, color='lightpink')
オプション エラー 無視 する よう 指定 する	errors = 'ignore'
折れ線 グラフ ポイント 印 線 幅 指定 する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
一 桁 整数 調べる	-9 <= x <= 9
データ フレーム カラム 記述 統計 量 求める	df[col].describe()
三つ 実行 結果 プリント する	print(value, value2, value3)
折れ線 グラフ 描画 し その 色 スチール ブルー 設定 する	plt.plot(データ列, データ列2, color='steelblue')
データ フレーム 重複 あり ランダム 行 サンプリング する	df.sample(n, replace=True)
折れ線 グラフ 色 オリーブ 変更 する	plt.plot(データ列, データ列2, color='olive')
オプション グラフ 色 レモン シフォン 設定 する	color = 'lemonchiffon'
データ フレーム 形式 ファイル 保存 する	df.to_csv(filename, sep='\t')
データ フレーム 列 集約 し それぞれ グループ 毎 分散 求める	df.groupby(column).var()
オプション グラフ 色 ダークターコイズ 設定 する	color = 'darkturquoise'
文字 列 黄色 プリント する	print(f'\033[33m{value}\033[0m')
折れ線 グラフ ラベル 変更 する	plt.plot(xdata, ydata, label=untitled)
ヒストグラム 色 紺碧 指定 する	plt.hist(データ列, color='azure')
データ フレーム リスト カラム 中 いくつ 日 付 データ 含ま れる カウント する	df[aList].isin([value]).sum()
折れ線 グラフ 描画 し その 色 ブラック 設定 する	plt.plot(データ列, データ列2, color='black')
データ フレーム カラム 一 度 置き換える	df[col].replace(ValueMap)
明るい 色 用い リスト リスト 散布 図 重なり 見 やすく 描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
リスト リスト 散布 図 パステル 調 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
双方向 キュー デキュー する	deq.popleft()
先頭 列 データ フレーム 除く	df[df.columns[1:]]
ふたつ 関係 上位 集合 調べる	aSet.issuperset(aSet2)
リスト データ 列 散布 図 描い ポイント マーカー 色 カラー コード 変更 する	plt.plot(xdata, ydata, marker='.', c=rgb)
日付 データ 秒 前 戻す	aDate - datetime.timedelta(seconds=n)
ファイル 名 ファイル	filename.endswith('.json')
双方向 キュー 先頭 要素 追加 する	deq.appendleft(element)
オプション シアン 色 使う	color = 'cyan'
実数 実数 割っ た 余り	x % y
二つ オブジェクト 同じ 参照 調べる	obj is obj2
リスト ビン 分割 する	pd.cut(aList, aList)
変数 数式 微分 する	sympy.diff(e, z)
データ 列 等しい 量 なる よう 個 ビン 分割 する	pd.qcut(ds, n)
ファイル 書き込み できる よう 開く	open(filepath, mode='w')
オプション ライト グレー 色 使う	color = 'lightgrey'
散布 図 菱形 マーカー 用いる	plt.plot(xdata, ydata, marker='D')
データ フレーム 横向き 連結 する	pd.concat([df, df2, df3], axis=1)
ビン 数 配列 ビン 分割 し ラベル つける	pd.cut(aArray, n, labels=names)
データ フレーム 列 インプレイス 消す	df.drop(column, axis=1, inplace=True)
黒い 右 三 角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='>', c='k')
データ 列 平均 値	ds.mean()
オプション 色 珊瑚 指定 する	color = 'coral'
ファイル 書き込み 用 開く	open(filepath, mode='w', encoding='euc_jp')
文字 列 中 非 小文字 ある 調べる	any(not c.islower() for c in s)
データ フレーム リスト カラム 欠損 値 最大 値 する	df[aList].fillna(df[aList].max())
オプション ロージーブラウン 色 使用 する	color = 'rosybrown'
データ フレーム リスト カラム 値 欠損 値 どう 調べる	df[aList].isna()
八 進数 文字 列 バイト 列 変換 する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
データ フレーム 列 グループ 化 し それぞれ グループ ごと 平均 値 求める	df.groupby(column).mean()
ビスク 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='bisque')
文字 列 タプル 含ま れる 調べる	element in aTuple
全 要素 初期 値 初期 化 さ れ た 行列	np.full((行数, 列数), 初期値, dtype=np.int)
リスト リスト 散布 図 色 差別 ない 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
文字 列 リスト 区切り 一つ する	sep.join(aStringList)
データ フレーム リスト カラム 位 四捨五入 し 整数 型 する	df[aList].round(-1).astype(int)
複数 列 表 集計 し 列挙 する	[(name, group) for name, group in df.groupby(columns)]
度数 分布 図 半 透明 する	plt.hist(データ列, alpha=0.5)
黒い 四角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='s', c='k')
オプション グラフ 色 ライトスカイブルー セット する	color = 'lightskyblue'
データ 列 中央 値 ビン 分割 する	pd.qcut(ds, 2)
リスト 配列 淡い グラフ プロット し その 色 青 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
ファイル 複数 シート 読む	pd.read_excel(filename, sheet_name=[n, n2])
リスト データ 列 散布 図 丸 マーカー プロット する	plt.plot(xdata, ydata, marker='o')
赤い マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
リスト 末尾 番目 以前 要素 取り出す	aList[:-n]
ビット 整数 型 全 要素 初期 化 し た 行列	np.zeros(行数, 列数, dtype=np.int8)
データ 列 箱 ヒゲ 図 描画 する	plt.boxplot(データ列)
ヒストグラム 描画 し その 色 ミディアムブルー 設定 する	plt.hist(データ列, color='mediumblue')
ヒストグラム 色 デピンク 設定 する	plt.hist(データ列, color='deeppink')
整数 進数 表現 変換 する	bin(n)
リスト 配列 使っ パステル 調 折れ線 グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
オプション 青 用いる	color = 'blue'
ヒストグラム 描画 し その 色 コーラル 設定 する	plt.hist(データ列, color='coral')
タプル 中 最小 値 求める	min(aTuple)
データ フレーム 欠損 値 含ま れる 箇所 色 付ける	df.style.highlight_null()
列 データ フレーム 並べ 先頭 する	df.sort_values(by='A', na_position='first')
日付 時刻 データ 日付 時刻 データ 時間 差 何 秒 知る	(aDatetime - aDatetime2).total_seconds()
文字 列 中 複数 行 対応 パターン マッチ 使う	re.findall(pattern, s, flags=re.MULTILINE)
データ フレーム 相関 行列	df.corr()
三つ データ フレーム 縦 方向 連結 する	pd.concat([df, df2, df3], axis=0)
フォーマット データ フレーム タイム スタンプ 型 する	pd.to_datetime(df[col], format='%Y-%m-%d')
最大 値 最小 値 整数 乱数 生成 する	random.randint(最小値, 最大値)
データ フレーム 列 名 列挙 する	df.columns
双方向 キュー 末尾	deq[-1]
リスト 数列 散布 図 カラー コード 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c=rgb)
データ フレーム リスト カラム 中 日付 データ 文字 列 ある どう 調べる	df[aList].isin([value, value2])
昇順 列 データ フレーム 並べ 更新 する	df.sort_values(by='A', ascending=True, inplace=True)
倍数 で ない	n % n2 != 0
点線 ヒストグラム 描画 する	plt.hist(データ列, linestyle='dotted')
パステル 調 色 リスト データ 列 散布 図 描画 する	plt.plot(xdata, ydata, c='pastel')
数値 赤色 化 する	f'\033[31m{value}\033[0m'
配列 リスト 青い 淡い 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
ヒストグラム 描画 し その 色 ブランチドアーモンド 設定 する	plt.hist(データ列, color='blanchedalmond')
データ 列 位 四捨五入 し 整数 する	ds.round(-3).astype(int)
イテラブル イテラブル 散布 図 黒い 大 バツ マーカー プロット する	plt.plot(xdata, ydata, marker='X', c='k')
オプション グラフ 色 パールバイオレットレッド 設定 する	color = 'palevioletred'
日付 データ 分 減算 する	aDate - datetime.timedelta(minutes=n)
データ フレーム 二つ 列 降順 破壊 的 整列 する	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
ヒストグラム 色 ミディアムシアグリーン 変更 する	plt.hist(データ列, color='mediumseagreen')
ディレクトリ パス 加える	sys.path.append(os.path.join(os.path.dirname(__file__), dir))
列 値 データ フレーム グループ 化 する	df.groupby('A')
ブール 型 ゼロ 埋め さ れ た 行列	np.zeros(要素数, dtype=np.int32)
文字 列 全て 大文字 変換 する	s.upper()
シエナ ヒストグラム 色 設定 する	plt.hist(データ列, color='sienna')
青い 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
データ 列 中 ある 数 数える	ds.isin([value]).sum()
データ フレーム インデックス 名前 一 度 付け 直す	df.rename(index={name: name2})
データ フレーム 列 未 入力 値 埋める	df[col].fillna(x)
列 小さい 順 データ フレーム ソート し 更新 する	df.sort_values(by='A', ascending=True, inplace=True)
折れ線 グラフ 大 バツ 印 線 幅 指定 する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
各 列 毎 データ フレーム グループ 化 し 列 分散 求める	df.groupby(column)[column2].var()
実数 複素数 する	complex(x)
割り切れる 調べる	n % 5 == 0
大きく かつ 小さい	n < n2 and n2 < n3
マッピング 項目 名 その 値 列挙 する	aDict.items()
実線 設定 する	plt.axvline(x=0, linestyle='solid')
線 グラフ 描画 し その 色 ダークゴールデンロッド 設定 する	plt.plot(データ列, データ列2, color='darkgoldenrod')
イテラブル リスト 散布 図 描い マーカー ダイアモンド 設定 する	plt.plot(xdata, ydata, marker='D')
リスト 合計	sum(aList)
データ フレーム カラム 分	df[col].dt.minute
ヒストグラム 描画 し 色 パールバイオレットレッド 設定 する	plt.hist(データ列, color='palevioletred')
リスト イテラブル 散布 図 プロット し マーカー 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, c='colorblind')
エクセルファイルファイル エクセルファイル 読み込む	pd.read_excel(filename)
ヒストグラム 描画 し その 色 オリーブ 設定 する	plt.hist(データ列, color='olive')
組 昇順 ソート する	sorted(aTuple, reverse=True)
データ 列 ビン 分割 する	pd.cut(ds, aList)
異なる 列 キー 二つ データ フレーム 内部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
ベクトル 演算 行う	import numpy as np
データ フレーム 列 並べ 直し インデックス 振り 直す	df.sort_values(columns).reset_index(drop=True)
パステル 調 色 折れ線 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
今日 何 月 知る	datetime.datetime.today().month
ひとつ 非 数字 文字 列 中 含ま れる	any(not c.isdigit() for c in s)
組 番号 付け する	enumerate(aTuple, start=n)
書式 引数 文字 列 整形 する	formatText.format(*args)
折れ線 グラフ 色 ダーク グレー 設定 する	plt.plot(データ列, データ列2, color='darkgray')
リスト 配列 作る	np.array(aList)
分子 分母 有理数 作成 する	fractions.Fraction(numerator=n, denominator=m)
イテラブル リスト 散布 図 バツ マーカー 描く	plt.plot(xdata, ydata, marker='x')
オブジェクト リスト 含ま れ ない 確認 する	element not in aList
線 グラフ 描画 し その 色 ダーク バイオレット 設定 する	plt.plot(データ列, データ列2, color='darkviolet')
オプション オールド レース 色 使用 する	color = 'oldlace'
データ フレーム カラム 変更 する	df[col].fillna(x)
日付 時刻 データ 時間 分 加算 する	aDatetime + datetime.timedelta(hours=n)
オプション グラフ 色 ハニーデュー 設定 する	color = 'honeydew'
イテラブル リスト 破線 プロット し 色 明るい 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
パステル 調 リスト ヒストグラム 描く	plt.hist(xdata, color='pastel')
オプション グラフ 色 アイボリー 変更 する	color = 'ivory'
ヒストグラム 色 ディープスカイブルー 設定 する	plt.hist(データ列, color='deepskyblue')
データ 列 リスト 色 差別 ない グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
ふたつ 集合 いずれ 一方 集合	aSet.symmetric_difference(aSet2)
一 桁 数 調べる	-9 <= x <= 9
配列 イテラブル 散布 図 赤い バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
赤色 四角 マーカー 配列 リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='s', c='r')
ヒストグラム 色 スラグレー 設定 する	plt.hist(データ列, color='slategray')
オプション 色 ハニーデュー 指定 する	color = 'honeydew'
実数 実数 割っ た 剰余	math.remainder(x, x2)
かける	n * n2
文字 列 終了 位置 以前 部分 文字 列 含ま れ ない 確認 する	s.find(sub, 0, end) == -1
パステル 調 色 マーカー 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
直後 値 カラム 補う	ds.fillna(method='bfill')
リスト リスト 青い パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
データ フレーム 中 列 列 重複 削除 する	df.drop_duplicates(subset=column)
データ フレーム 列 で 大きい 順 ソート する	df.sort_values(by='A', ascending=False)
データ フレーム 列 値 グループ 化 する	df.groupby('A')
折れ線 グラフ 印 クロス する	plt.plot(データ列, データ列2, marker='x')
文字 列 後ろ 範囲 指定 し 部分 文字 列 探す	s.find(sub, start, end)
データ 列 ラベル 列 指定 し 積み上げ 棒グラフ 描く	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
ベクトル 元 し 全 要素 配列	np.zeros_like(aArray)
データ フレーム カラム 曜日 何 日 目 見る	df[col].dt.dayofweek
イテラブル 座標 リスト 座標 大き さ 散布 図 描く	plt.scatter(xdata, ydata, s=n)
データ フレーム 百 位 四捨五入 し 整数 型 する	df.round(-2).astype(int)
データ フレーム 欠損 値 含め 列 値 グループ 化 する	df.groupby(column, dropna=False)
リスト 配列 折れ線 描画 し 色 文字 列 設定 する	plt.plot(xdata, ydata, color=s)
オブジェクト バイト 列 型 テスト する	isinstance(obj, bytes)
等差 数列 ベクトル 変換 する	np.arange(開始値, 終端値, 等差)
カラー コード 丸 マーカー リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c=rgb)
データ フレーム ファイル 読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
折れ線 グラフ 赤い 右 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
ヒストグラム 描画 し 色 ロイヤル ブルー 設定 する	plt.hist(データ列, color='royalblue')
データ フレーム 指定 さ れ た 列 配列 抽出 する	df[column].values
オブジェクト 論理 値 調べる	isinstance(obj, bool)
折れ線 グラフ 描画 し その 色 ダーク シアン 設定 する	plt.plot(データ列, データ列2, color='darkcyan')
要素 セット 含ま れ ない 確認 する	element not in aSet
データ フレーム 複数 列 値 グループ 化 し 要約 統計 量 計算 する	df.groupby(columns).describe()
イテラブル 変遷 折れ線 グラフ 描画 する	plt.plot(range(len(xdata)), xdata)
列 累加 し た イテラブル	itertools.accumulate(iterable)
データ 列 配列 散布 図 赤い マーカー プロット する	plt.plot(xdata, ydata, marker='^', c='r')
複数 データ フレーム 横 方向 連結 する	pd.concat([df, df2, df3], axis=1)
オプション グラフ 色 ディープスカイブルー 設定 する	color = 'deepskyblue'
赤色 濃い 描く	plt.plot(xdata, ydata, linestyle='deep', color='r')
組 昇順 並べる	sorted(aTuple, reverse=True)
ヒストグラム 描画 し その 色 オーキッド 設定 する	plt.hist(データ列, color='orchid')
折れ線 グラフ 描画 し その 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgray')
文字 ユニ コード 使う	ord(ch)
文字 列 マゼンタ プリント できる 文字 列 変換 する	f'\033[35m{value}\033[0m'
文字 列 セパレータ 区切り 文字 列 リスト する	s.split(sep)
小数点 以下 桁 文字 列 する	':.5f'.format(x)
既存 配列 元 全 要素 配列	np.zeros_like(aArray)
辞書 上 項目 名 未定義 どう	key not in aDict
進数 文字 列 整数 する	int(s, 16)
本日 月数	datetime.datetime.today().month
折れ線 グラフ 描画 し その 色 ダーク グレー 設定 する	plt.plot(データ列, データ列2, color='darkgray')
キュー 番目 要素	collections.deque(itertools.islice(deq, start, end))
データ フレーム 列 値 未 入力 値 調べる	df[col].isna()
濃い 色 重 見やすく 散布 図 描く	plt.plot(xdata, ydata, c='deep', alpha=0.5)
リスト データ 列 散布 図 カラー コード 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c=rgb)
グラフ サイズ 設定 する	plt.figure(figsize=(width, height))
データ フレーム リスト 列 相関 行列 ヒートマップ グラフ 化 する	sns.heatmap(df[aList].corr())
オプション アイボリー 色 使う	color = 'ivory'
線 グラフ 色 シアン セット する	plt.plot(データ列, データ列2, color='cyan')
折れ線 グラフ 赤い 右 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
スラグレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='slategray')
組 引数 展開 し 表示 する	print(*aTuple, sep=',')
珊瑚 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='coral')
データ フレーム リスト カラム 前 行 値 指定 する	df[aList].fillna(method='ffill')
ファイル ファイル 番目 カラム インデックス 読み込む	pd.read_csv(filename, index_col=n)
行 データ フレーム 並べ 直す	df.sort_index()
データ フレーム リスト カラム 欠損 値 第 二 四 分 位 数 補う	df[aList].fillna(df[aList].median())
データ フレーム リスト カラム どれ 分散 し いる 見る	df[aList].var()
データ 列 四 分 位 数 分割 する	pd.qcut(ds, 4)
データ フレーム 重複 し た 行 数 マスク	df.duplicated()
イテラブル 配列 折れ線 グラフ ラベル付け し 描画 する	plt.plot(xdata, ydata, label=untitled)
文字 列 カンマ 区切り ファイル 番目 カラム インデックス し 読む	pd.read_csv(filename, index_col=n)
折れ線 グラフ 赤い 上 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
オプション コーンフラワーブルー 使用 する	color = 'cornflowerblue'
標準 出力 使う	sys.stdout
折れ線 グラフ 色 ダーク サーモン 設定 する	plt.plot(データ列, データ列2, color='darksalmon')
逆数	math.acosh(x)
データ フレーム 表示 する とき 表示 可能 な 最大 列 数 変更 する	pd.set_option('display.max_columns', n)
日付 時刻 データ 何 分 知る	aDatetime.minute
データ フレーム リスト カラム 置換 する	df[aList].fillna(x)
文字 列 全て 数字 調べる	s.isdigit()
試し 何 動かし みる	print('Hello World')
散布 図 色 差別 ない 色 マーカー 使う	plt.plot(xdata, ydata, c='colorblind')
ピンク色 ヒストグラム 描画 する	plt.hist(データ列, color='deeppink')
数列 リスト 散布 図 黒い ダイアモンドマーカー プロット する	plt.plot(xdata, ydata, marker='D', c='k')
文字 列 左側 部分 文字 列	s.startswith(sub)
現在 秒 数	datetime.date.today().second
配列 リスト 散布 図 描い マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='^', c=rgb)
タプル 逆順 する	aTuple[::-1]
二つ 列 データ フレーム ソート し 先頭 来る よう する	df.sort_values(by=['A', 'B'], na_position='first')
データ フレーム リスト カラム 値 調べる	df[aList].isna()
サイコロ 同じ 乱数	random.randint(1, 6)
リスト 数列 暗い 色 折れ線 描い その 線 幅 セット する	plt.plot(xdata, ydata, linewidth=n, color='dark')
折れ線 グラフ ダイアモンドマーカー 大き さ セット する	plt.plot(データ列, データ列2, marker='D', markersize=n)
データ フレーム 欠損 値 平均 値 埋める	df.fillna(df.mean())
二つ データ フレーム 横向き 一つ する	pd.concat([df, df2], axis=1)
リスト リスト パステル 調 グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
折れ線 グラフ 描画 し その 色 パールバイオレットレッド 指定 する	plt.plot(データ列, データ列2, color='palevioletred')
列 値 データ フレーム 分類 し 列挙 する	[(name, group) for name, group in df.groupby('A')]
データ 列 年	ds.dt.year
ファイル データ フレーム ファイル 保存 する	df.to_excel(filename)
リスト 空 で ない	len(aList) != 0
配列 データ 列 散布 図 カラー コード バツ マーカー 描く	plt.plot(xdata, ydata, marker='x', c=rgb)
オプション 符号 なし ビット 整数 型 使う	dtype = np.uint8
ヒストグラム 濃い 色 プロット する	plt.hist(xdata, color='deep')
グラフ 描画 濃い 色調 使用 する	sns.set(pallete='deep')
本日 何 年 知る	datetime.datetime.today().year
リスト リスト 散布 図 プロット し マーカー 変更 する	plt.plot(xdata, ydata, marker='^')
リスト リスト 散布 図 描画 し マーカー 色 淡い 設定 する	plt.plot(xdata, ydata, c='muted')
リスト データ 列 散布 図 赤色 三角 マーカー プロット する	plt.plot(xdata, ydata, marker='^', c='r')
リスト リスト 散布 図 カラー コード ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.', c=rgb)
データ フレーム 列 値 グループ 化 し 各 グループ ごと 最大 値 計算 する	df.groupby(column).max()
形式 文字 列 データ 変換 する	json.loads(jsonString)
列 重複 取り除く	set(iterable)
データ フレーム 列 降順 ソート する	df.sort_values(by='A', ascending=False)
オプション ダークスレートブルー 色 設定 する	color = 'darkslateblue'
ヒストグラム 描画 し その 色 アクア 設定 する	plt.hist(データ列, color='aqua')
ヒストグラム 色 ミント クリーム 変更 する	plt.hist(データ列, color='mintcream')
オプション 色 ライト イエロー 設定 する	color = 'lightyellow'
データ フレーム 列 名前 変更 する	df.rename(columns={column: name})
全 要素 初期 化 し た 論理 値 型 行列 作る	np.zeros(行数, 列数, dtype=np.int32)
リスト リスト 淡い 色 折れ線 グラフ プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='muted')
パステル 調 色 ヒストグラム リスト 描く	plt.hist(xdata, color='pastel')
折れ線 グラフ 色 ラベンダー ブラッシュ 設定 する	plt.plot(データ列, データ列2, color='lavenderblush')
オプション グラフ 色 フォレストグリーン する	color = 'forestgreen'
配列 個 ビン 分割 し ラベル つける	pd.cut(aArray, n, labels=names)
データ 列 折れ線 グラフ 描画 し 印 バツ する	plt.plot(データ列, データ列2, marker='x')
線 グラフ 描画 し その 色 アクア 指定 する	plt.plot(データ列, データ列2, color='aqua')
折れ線 グラフ 描画 し 色 インディゴ 変更 する	plt.plot(データ列, データ列2, color='indigo')
ダークシアグリーン ヒストグラム 色 変更 する	plt.hist(データ列, color='darkseagreen')
度数 分布 図 ビン する	plt.hist(データ列, bins=n)
ファイル 絶対 パス 変換 する	os.path.abspath(filepath)
オプション マーカー 三角 変更 する	marker = '^'
実数 乗	x ** n
オプション 青 緑 使う	color = 'teal'
ケース 無視 し パターン あらかじめ コンパイル する	re.compile(pattern, flag=re.IGNORECASE)
折れ線 グラフ 描画 し 色 黒く する	plt.plot(データ列, データ列2, color='k')
日付 時刻 データ 日付 使う	aDatetime.date()
データ フレーム 中 日付 データ 存在 する	df.isin([value])
データ フレーム 中 いくつ ある 数える	df.isna().sum()
データ フレーム 二つ 列 破壊 的 ソート する	df.sort_values(by=['A', 'B'], inplace=True)
マッピング 値 一覧 参照 する	aDict.values()
行列 列 ごと 標準 偏差	np.std(aArray, axis=0)
オプション セパレータ タブ する	sep = '\t'
タイム スタンプ インスタンス 化 する	datetime.datetime(年, 月, 日, 時, 分, 秒)
一 度 データ フレーム リスト カラム 置き換える	df[aList].replace(ValueMap)
線 グラフ 色 赤 する	plt.plot(データ列, データ列2, color='red')
列 キー し 二つ 表 データ 結合 する	pd.merge(df, df2, on=column)
リスト リスト 散布 図 濃い 色 用い 重 見 やすく 描く	plt.plot(xdata, ydata, c='deep', alpha=0.5)
数式 階 微分 行う	sympy.diff(e, z, n)
天井 計算 する	math.ceil(x)
イテラブル 長 さ 制限 する	collections.deque(iterable, maxlen=n)
全て 数字	string.digits
散布 図 左 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='<')
カラム 欠損 値 最小 値 設定 する	ds.fillna(ds.min())
散布 図 カラー コード 三角 マーカー 描く	plt.plot(xdata, ydata, marker='^', c=rgb)
線 グラフ 色 ハニーデュー 設定 する	plt.plot(データ列, データ列2, color='honeydew')
文字 列 変換 する	str(x)
配列 数列 カラー コード 暗い グラフ 描く	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
組 タプル 連結 する	aTuple + aTuple2
つ 列 値 データ フレーム グループ 化 し 要約 統計 量 計算 する	df.groupby(['A', 'B']).describe()
列 データ フレーム 集約 し 列 要約 統計 量 求める	df.groupby(column).describe()[column2]
ヒストグラム 色 パープル 設定 する	plt.hist(データ列, color='purple')
配列 変遷 折れ線 グラフ 描く	plt.plot(range(len(xdata)), xdata)
イテラブル データ 列 暗い 色 折れ線 グラフ 描い その 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
データ 列 リスト 散布 図 黒い ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D', c='k')
散布 図 星 マーカー 使う	plt.plot(xdata, ydata, marker='*')
コマンド 第 二 引数 調べる	sys.argv[1]
タプル タプル 連結 する	aTuple + aTuple2
ヒストグラム 描画 し 色 ライトグリーン 設定 する	plt.hist(データ列, color='lightgreen')
配列 行 ごと 平均 求める	np.mean(aArray, axis=1)
折れ線 グラフ 描画 し その 色 パレットトルコイズ 指定 する	plt.plot(データ列, データ列2, color='paleturquoise')
実数 乗 実数 剰余	pow(x, n, y)
値 集合 メンバー	element in aSet
オプション ドジャーブルー 色 使う	color = 'dodgerblue'
リスト 縦 軸 配列 横 軸 大き さ 散布 図 描画 する	plt.scatter(xdata, ydata, s=n)
折れ線 グラフ 色 ライト グレー セット する	plt.plot(データ列, データ列2, color='lightgrey')
イテラブル 配列 散布 図 赤い 星 マーカー 描く	plt.plot(xdata, ydata, marker='*', c='r')
オプション グラフ 色 ゲインズボロ 設定 する	color = 'gainsboro'
破線 グラフ 色 淡い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
オプション ゴースト ホワイト 色 設定 する	color = 'ghostwhite'
折れ線 グラフ 色 パールバイオレットレッド 設定 する	plt.plot(データ列, データ列2, color='palevioletred')
列 と列 キー 二つ 表 データ 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
折れ線 グラフ 色 ナバホホワイト セット する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線 グラフ 色 ミディアムバイオレットレッド 設定 する	plt.plot(データ列, データ列2, color='mediumvioletred')
値 切り上げ 計算 する	(n + n2 - 1) // n2
赤い 左 三 角 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線 グラフ クロス マーカー 赤く する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線 グラフ 描画 し その 色 コーンフラワーブルー 設定 する	plt.plot(データ列, データ列2, color='cornflowerblue')
ふたつ 辞書 合体 する	aDict | aDict2
オプション 青色 使う	color = 'blue'
列 位 四捨五入 し 整数 型 する	ds.round(-2).astype(int)
部分 文字 列 部分 文字 列 始まる 確認 する	s.startswith(sub)
日付 時刻 データ 日付 時刻 データ 時間 差 求める	aDatetime - aDatetime2
カラー コード 丸 マーカー 配列 配列 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c=rgb)
組 要素 逆順 する	aTuple[::-1]
ファイル バイナリ 書き込み モード オープン する	open(filepath, mode='wb')
カウンタ 間 ユニオン 演算 する	aCounter | aCounter2
散布 図 カラー コード 星 マーカー 使用 する	plt.plot(xdata, ydata, marker='*', c=rgb)
セット 別 集合 共通 要素 全て 取り除く	aSet.symmetric_difference_update(aSet2)
ヒストグラム 描画 し その 色 カデット ブルー 設定 する	plt.hist(データ列, color='cadetblue')
データ フレーム カラム 欠損 値 後 行 値 設定 する	df[col].fillna(method='bfill')
折れ線 グラフ 描画 し その 色 パールバイオレットレッド 設定 する	plt.plot(データ列, データ列2, color='palevioletred')
データ 列 まとめ 置き換える	ds.replace(ValueMap)
折れ線 グラフ 描画 し その 色 フローラルホワイト 指定 する	plt.plot(データ列, データ列2, color='floralwhite')
文字 列 セパレータ 区切る	s.split(sub)
ベクトル 重複 除い た 配列 作る	np.unique(aArray)
ヒストグラム 淡い 色 使っ 描く	plt.hist(xdata, color='muted')
グラフ 中 縦 軸 ラベル 設定 する	plt.ylabel(untitled)
赤い 右 三 角 マーカー リスト リスト 散布 図 描く	plt.plot(xdata, ydata, marker='>', c='r')
データ フレーム グループ 化 し 列 分散 求める	df.groupby(column)[column2].var()
文字 列 数値 どう	s.isnumeric()
辞書 項目 名 値	aDict.get(key)
散布 図 カラー コード 四角 マーカー プロット する	plt.plot(xdata, ydata, marker='s', c=rgb)
黒い 左 三 角 マーカー 散布 図 使用 する	plt.plot(xdata, ydata, marker='<', c='k')
リスト 配列 濃い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
リスト リスト 青い 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
正規 表現 まとめ データ 列 値 置き換える	ds.replace(pattern, repl, regex=True)
グラフ 見やすく する	import seaborn as sns
ヒストグラム 用い データ 列 可視 化 する	plt.hist(ds)
線 グラフ 描画 し 色 ライム グリーン 設定 する	plt.plot(データ列, データ列2, color='limegreen')
文字 列 全て 小文字 変換 する	s.casefold()
折れ線 グラフ 描画 し その 色 ブラウン 設定 する	plt.plot(データ列, データ列2, color='brown')
エクセルファイル データ フレーム 読む	pd.read_excel(filename)
分子 分母 分数 作成 する	fractions.Fraction(分子, 分母)
オプション グラフ 色 ローン グリーン 指定 する	color = 'lawngreen'
右 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='>')
シスル 色 ヒストグラム 描画 する	plt.hist(データ列, color='thistle')
データ フレーム インデックス リセット する	df.reset_index()
データ フレーム 列 中 ある 日付 データ 合計 数える	df[col].isin([value]).sum()
ヒストグラム 描画 し その 色 ダークスレートブルー 設定 する	plt.hist(データ列, color='darkslateblue')
ヒストグラム 色 サーモン セット する	plt.hist(データ列, color='salmon')
集合 全て 要素 別 集合 含ま れる 調べる	aSet.issubset(aSet2)
折れ線 グラフ 描画 し その 色 ダーク グレー 設定 する	plt.plot(データ列, データ列2, color='darkgrey')
倍数	n % n2 == 0
データ フレーム 正規 分布 どの 程度 歪ん いる 見る	df.kurt()
データ フレーム カテゴリ データ 列 名 一覧 使う	df.select_dtypes('object').columns
リスト リスト 散布 図 明るい 色 描画 する	plt.plot(xdata, ydata, c='bright')
データ フレーム 関数 集約 し 列挙 する	[(name, group) for name, group in df.groupby(関数)]
折れ線 グラフ 色 ローン グリーン 指定 する	plt.plot(データ列, データ列2, color='lawngreen')
データ 列 リスト 明るい プロット し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
カウンタ 文字 列 数	len(aCounter)
データ フレーム 内 何 行 重複 する 見る	df.duplicated().sum()
クリムゾン 色 ヒストグラム 描画 する	plt.hist(データ列, color='crimson')
ファイル 文字 読み込む	f.read(1)
色 差別 ない グラフ 色 赤色 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
配列 配列 明るい グラフ 描い その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
文字 列 空白 分割 し 整数 リスト する	map(int, s.split())
列 キー し つ データ フレーム 全 結合 する	pd.merge(df, df2, on=column, how='outer')
散布 図 カラー コード 大 バツ マーカー 使う	plt.plot(xdata, ydata, marker='X', c=rgb)
データ 列 リスト 散布 図 描画 し 大 バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='X', c=rgb)
インディアン レッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='indianred')
データ フレーム 位 丸める	df.round(-1)
データ フレーム 相関 行列 ヒートマップ 描画 する	sns.heatmap(df.corr())
データ 列 リスト 黒色 濃い 描く	plt.plot(xdata, ydata, linestyle='deep', color='k')
ヒストグラム 色 コーンズシルク 指定 する	plt.hist(データ列, color='cornsilk')
データ フレーム カラム 欠損 値 平均 値 設定 する	df[col].fillna(df[col].mean())
配列 行 方向 連結 する	np.concatenate([aArray, aArray2], axis=1)
数列 数列 散布 図 描い マーカー 色 淡い 設定 する	plt.plot(xdata, ydata, c='muted')
底 する 小数点 数 対数	math.log(x, k)
カウンタ 辞書 作成 する	collections.Counter(aDict)
二つ カウンタ いずれ 含ま れる 要素 求める	aCounter | aCounter2
両端 キュー 左 イテラブル 要素 入れる	deq.extendleft(iterable)
バリー ウッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='burlywood')
タブ 区切っ 文字 列 出力 する	print(value, value2, sep='\t')
文字 列 中 パターン 限定 マッチ する 文字 列 探す	re.search(pattern, s, flags=re.ASCI)
全 要素 初期 化 さ れ た 行列	np.zeros(行数, 列数)
ヒストグラム 描画 し 色 ライム グリーン 設定 する	plt.hist(データ列, color='limegreen')
オプション ミディアムターコイズ 色 変更 する	color = 'mediumturquoise'
リスト リスト 散布 図 四角 マーカー 描く	plt.plot(xdata, ydata, marker='s')
データ フレーム 列 名 リスト 値 集約 する	df.groupby(columns)
パステル 調 グラフ 色 青 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
折れ線 グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, color=rgb)
タプル 末尾 番目 以前 部分 取り出す	aTuple[:-n]
リスト 配列 明るい グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
カラー コード 左 三 角 マーカー データ 列 リスト 散布 図 プロット する	plt.plot(xdata, ydata, marker='<', c=rgb)
データ フレーム 数値 整数 丸める	df.round()
集合 補 集合 計算 する	aSet.difference(aSet2)
グラフ 中 フォント 設定 する	sns.set(font=fontName)
ゼロ 埋め さ れ た 配列	np.zeros(要素数)
度数 分布 図 配列 可視 化 する	plt.hist(aArray)
オプション カラム 名前 減らす	names = names
オブジェクト 文字 列 型 インスタンス 調べる	isinstance(obj, str)
線 グラフ 描画 し その 色 コーラル セット する	plt.plot(データ列, データ列2, color='coral')
データ フレーム 中 文字 列 文字 列 存在 する	df.isin([value, value2])
配列 データ 列 散布 図 暗い 色 プロット する	plt.plot(xdata, ydata, c='dark')
イテラブル 配列 青い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
グラフ 使用 する フォント 日本語 表示 設定 する	sns.set(font='IPAexGothic')
空 計数 器 用意 する	collections.Counter()
イテラブル 縦 軸 配列 軸 大き さ 散布 図 描画 する	plt.scatter(xdata, ydata, s=n)
二 変数 最小 値	min(x, y)
文字 列 中 部分 文字 列 文字 列 置き換える	s.replace(sub, newsub)
リスト 文字 列 最初 見つかる インデックス	aList.index(element)
オプション 複素数 型 使う	dtype = bool
折れ線 グラフ 描画 し 色 レベッカパープル セット する	plt.plot(データ列, データ列2, color='rebeccapurple')
文字 列 片仮名 どう 調べる	('ァ' <= ch <= 'ン')
データ 列 リスト 散布 図 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>')
ゲインズボロ ヒストグラム 色 設定 する	plt.hist(データ列, color='gainsboro')
カラー バー 水平 描画 する	plt.colorbar(orientation='horizontal')
割っ た 剰余	n % n2
データ 列 中 文字 列 存在 する 調べる	ds.isin([value])
オプション アンティーク ホワイト 色 使う	color = 'antiquewhite'
データ フレーム 欠損 値 後 行 値 設定 する	df.fillna(method='bfill')
双方向 キュー 先頭	deq[0]
配列 イテラブル 散布 図 描画 し 下 三角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='v', c=rgb)
グラフ 色 暗く する	sns.set(pallete='dark')
リスト リスト 暗い 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
折れ線 グラフ 描画 し その 色 スラグレー 指定 する	plt.plot(データ列, データ列2, color='slategray')
データ フレーム リスト カラム 欠損 値 最 頻 値 する	df[aList].fillna(df[aList].mode().iloc[0])
小数点 以下 桁 表示 する	print(':.5f'.format(x))
今日 火曜日 確認 する	datetime.datetime.today().weekday() == 1
文字 列 左側 部分 文字 列 見つける	s.find(sub)
イテラブル リスト カラー コード 明るい 描く	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
データ フレーム 欠損 値 含ま れる 部分 色 付ける	df.style.highlight_null()
タプル 項目 数 得る	len(aDict)
線 グラフ 描画 し その 色 アイボリー 設定 する	plt.plot(データ列, データ列2, color='ivory')
オプション 耐火 レンガ 色 用いる	color = 'firebrick'
折れ線 グラフ 色 ネイビー 設定 する	plt.plot(データ列, データ列2, color='navy')
暗い グラフ 色 カラー コード 変更 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
折れ線 グラフ 印 サイズ 設定 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
データ フレーム 列 ソート し 先頭 する	df.sort_values(by='A', na_position='first')
カラム 中 日付 データ 文字 列 ある	ds.isin([value, value2])
文字 列 赤色 表示 できる 文字 列 変換 する	f'\033[31m{value}\033[0m'
カラム 上位	ds.quantile(0.25)
再帰 エラー 未然 防ぐ	sys.setrecursionlimit(1000000)
リスト 引数 展開 し 出力 する	print(*aList, sep=',')
値 黒色 プリント する	print(f'\033[30m{value}\033[0m')
パステル 調 折れ線 グラフ 線 幅 セット する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
変数 無限 大 近づく 際 数値 極限 値 算出 する	sympy.limit(e, z, oo)
折れ線 グラフ 下 三角 マーカー 線 幅 指定 する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線 グラフ 色 赤 セット する	plt.plot(データ列, データ列2, color='red')
文字 列 全て 十 進 数字 調べる	s.isdecimal()
コーラル 色 ヒストグラム 描画 する	plt.hist(データ列, color='coral')
プロット 用途 スライド 設定 する	sns.set(context='talk')
年 日付	datetime.date(year=year, month=1, day=1)
二つ 集合 共通 要素 更新 する	aSet.intersection_update(aSet2)
データ フレーム リスト カラム 文字 列 欠損 値 する	df[aList].replace(s, np.nan)
イテラブル イミュータブル な 集合 変換 する	frozenset(iterable)
ファイル 読み込む	pd.read_json(filename, orient='records', lines=True)
リスト リスト 散布 図 カラー コード ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D', c=rgb)
両端 キュー 最初 要素 削除 する	deq.remove(element)
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 最大 値 求める	df.groupby([column, column2], as_index=False).max()
配列 ビン 分割 する	pd.cut(aArray, aList)
オプション アンティーク ホワイト 色 用いる	color = 'antiquewhite'
ヒストグラム 描画 し その 色 シアン 設定 する	plt.hist(データ列, color='cyan')
カラー コード 配列 リスト 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, color=rgb)
オプション グラフ 色 ライト グレー 指定 する	color = 'lightgray'
カラム 正規 分布 どれ 尖っ いる 調べる	ds.skew()
バイナリ 書き込み モード 用い ファイル オープン し する	f = open(filepath, mode='wb')
キー 辞書 存在 する	key not in aDict
線 グラフ 色 カデット ブルー 設定 する	plt.plot(データ列, データ列2, color='cadetblue')
データ フレーム リスト カラム 未 入力 値 最小 値 指定 する	df[aList].fillna(df[aList].min())
オプション グラフ 色 耐火 レンガ 設定 する	color = 'firebrick'
日付 データ 週間 分 減らす	aDate - datetime.timedelta(weeks=n)
リスト リスト 散布 図 赤い 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
オプション 最初 行 ヘッダ する	header = 0
淡い 色 マーカー 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
リスト リスト 散布 図 プロット し マーカー 丸 変更 する	plt.plot(xdata, ydata, marker='o')
ヒストグラム 描画 し 色 コーラル 設定 する	plt.hist(データ列, color='coral')
オプション 色 インディゴ 指定 する	color = 'indigo'
文字 列 区切り 分割 し 文字 列 リスト する	s.split(sep)
ヒストグラム 描画 し 色 ライトスチールブルー 設定 する	plt.hist(データ列, color='lightsteelblue')
列 要素 サンプリング する	random.sample(iterable, k=n)
折れ線 グラフ 黄色い 下 三角 印 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
オプション グラフ 色 ミスティローズ 設定 する	color = 'mistyrose'
線 グラフ 色 ベージュ 設定 する	plt.plot(データ列, データ列2, color='beige')
文字 列 二 分割 する	s.partition(sep)
オプション グラフ 色 レベッカパープル 設定 する	color = 'rebeccapurple'
実線 折れ線 グラフ スタイル 設定 する	plt.plot(データ列, データ列2, linestyle='solid')
オプション ダークスラテグレー 使う	color = 'darkslategray'
ファイル 読み込み ストリーム オープン し する	f = open(filepath, mode='r')
オプション 色 ホット ピンク セット する	color = 'hotpink'
左 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='<')
文字 列 内 大文字 含ま れる 調べる	any(c.isupper() for c in s)
データ 列 中央 値 分割 する	pd.qcut(ds, 2)
日付 時刻 データ 水曜日 どう 調べる	aDatetime.weekday() == 2
配列 配列 散布 図 描画 し 大 バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='X', c=rgb)
既存 配列 元 全 要素 初期 値 配列	np.full_like(aArray, 初期値)
データ フレーム 中 ある 数 数える	df.isin([value, value2]).sum()
グラフ 使用 する 準備 する	from sympy import N
棒グラフ 描い 中央 寄せ する	plt.bar(ラベル列, データ列, align='center')
数列 リスト 折れ線 グラフ カラー コード プロット する	plt.plot(xdata, ydata, color=rgb)
データ フレーム 列 大きい 行 取り出す	df[df[column] > x]
エポック 秒 日付 時刻 変換 する	datetime.datetime.fromtimestamp(timestamp)
オプション やわらかい 青色 使用 する	color = 'cornflowerblue'
正規 表現 文字 列 全体 ケース 無視 し マッチ さ せる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
ヒストグラム 描画 し その 色 バリーウッド セット する	plt.hist(データ列, color='burlywood')
ヒストグラム 描画 し その 色 オールド レース 設定 する	plt.hist(データ列, color='oldlace')
リスト リスト パステル 調 グラフ 描画 し その 色 黒色 変更 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
二つ データ フレーム 異なる 列 キー 内部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
一 桁 数 どう 調べる	0 <= n <= 9
パールゴールデンロッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='palegoldenrod')
リスト 中 一番 小さい 値	min(aList)
黒い 丸 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c='k')
線 幅 星 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
ダークスレートブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkslateblue')
文字 列 先頭 複数 行 対応 正規 表現 マッチ さ せる	re.match(pattern, s, flags=re.MULTILINE)
データ フレーム 列 グループ 化 し それぞれ グループ 毎 最小 値 求める	df.groupby(column).min()
要素 マップ 値 含ま れ い ない 調べる	element not in aDict.values()
自然 対数 求める	math.log(x)
中央 値 データ 列 ビン 分割 する	pd.qcut(ds, 2)
データ フレーム 第 二 四 分 位 数	df.median()
データ フレーム リスト カラム パーセンタイル	df[aList].quantile(0.25)
ヒストグラム 描画 し その 色 グレー 設定 する	plt.hist(データ列, color='gray')
リスト 縦 軸 イテラブル 横 軸 大き さ 散布 図 描画 する	plt.scatter(xdata, ydata, s=n)
データ フレーム 空文字 ドロップ する	df.replace('', np.nan).dropna()
データ フレーム カラム 選択 する	df[[column, column2, column3, column4]]
スラグレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='slategray')
データ フレーム 列 キー し 右 ジョイン する	pd.merge(df, df2, on=column, how='right')
カラー コード 星 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c=rgb)
オブジェクト タプル どう 調べる	isinstance(obj, tuple)
データ フレーム インプレイス 重複 し た データ 削除 する	df.drop_duplicates(inplace=True)
線 グラフ 描画 し 色 ライトグリーン 変更 する	plt.plot(データ列, データ列2, color='lightgreen')
ヒストグラム 色 茶色 設定 する	plt.hist(データ列, color='brown')
オプション 色 スラグレー 設定 する	color = 'slategray'
ヒストグラム 一 点 鎖線 する	plt.hist(データ列, linestyle='dashbot')
配列 最大 値	np.max(aArray)
オプション グラフ 色 設定 する	color = 'darkslategrey'
書式 データ 列 日付 型 変換 する	pd.to_datetime(ds, format=fmt)
ヒストグラム 描画 し 色 ミスティローズ 設定 する	plt.hist(データ列, color='mistyrose')
暗い グラフ 色 黒色 セット する	plt.plot(xdata, ydata, linestyle='dark', color='k')
シーグリーン ヒストグラム 色 変更 する	plt.hist(データ列, color='seagreen')
パープル 色 ヒストグラム 描画 する	plt.hist(データ列, color='purple')
データ フレーム 欠損 値 最大 値 設定 する	df.fillna(df.max())
データ フレーム リスト カラム 中 含ま れる 合計 求める	df[aList].isin([value]).sum()
データ フレーム 列 一つ 選択 する	df[[column]]
シャルトリューズ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='chartreuse')
まとめ データ フレーム 値 置換 する	df.replace(ValueMap)
ヒストグラム 色 ダーク オレンジ する	plt.hist(データ列, color='darkorange')
辞書 形式 ファイル 出力 保存 する	json.dump(aDict, fout, ensure_ascii=False)
日付 データ 土曜日 調べる	aDate.weekday() == 5
文字 列 モジュール イン ポート する	import string
データ フレーム 相関 行列 ヒートマップ 用い 描画 する	sns.heatmap(df.corr())
オプション データ 型 指定 する	dtype = np.int
線 グラフ 描画 し その 色 イエロー グリーン 設定 する	plt.plot(データ列, データ列2, color='yellowgreen')
パレット 全般 的 濃く する	sns.set(pallete='deep')
集合 イミュータブル な セット する	frozenset(aSet)
既存 ファイル パス 追加 できる よう オープン する	open(filepath, mode='a', encoding='shift_jis')
折れ線 グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n)
データ フレーム 欠損 値 直前 値 する	df.fillna(method='ffill')
黒い 左 三 角 マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='<', c='k')
ヒストグラム 描画 し その 色 マゼンタ 変更 する	plt.hist(データ列, color='magenta')
浮動 小数点 数 最大 値	sys.float_info.max
分の	n / n2
散布 図 カラー コード 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c=rgb)
文字 列 先頭 正規 表現 ケース 無視 し マッチ する 見る	re.match(pattern, s, flags=re.IGNORECASE)
ヒストグラム 描画 し その 色 ダーク サーモン する	plt.hist(データ列, color='darksalmon')
文字 列 開始 位置 終了 位置 間 部分 文字 列 存在 する どう 調べる	s.find(sub, start, end) != -1
データ フレーム 中 列 リスト 境界 値 ビン 分割 する	pd.cut(df[col], aList)
ファイル 文字 列 示す エン コーディング 使っ 開く	open(filepath, encoding=s)
整数 最小公倍数	math.lcm(n, n2)
ヒストグラム 描画 し 色 オールド レース セット する	plt.hist(データ列, color='oldlace')
データ フレーム 列 文字 列 未 入力 値 する	df[col].replace(s, np.nan)
本日 火曜日 調べる	datetime.datetime.today().weekday() == 1
折れ線 グラフ 三角 印 青く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
配列 配列 散布 図 大き さ 描く	plt.scatter(xdata, ydata, s=n)
ファイル 追加 ストリーム 開い する	f = open(filepath, mode='a')
等差 数列 整数 乱数 求める	random.randrange(start, end, step)
今日 日曜日 調べる	datetime.datetime.today().weekday() == 6
空 タプル	()
データ フレーム 列 ヒストグラム する	plt.hist(df[column])
文字 列 最後 部分 文字 列 分け た 場合 後半 文字 列 使う	s.rpartition(sub)[-1]
データ フレーム 列 加え ダミー 変数 する	pd.get_dummies(df[column], dummy_na=True)
既存 ファイル パス 追加 できる よう オープン する	open(filepath, mode='a', encoding='euc_jp')
折れ線 グラフ ダイアモンドマーカー 黄色 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線 グラフ 黄色い マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
データ フレーム カラム 文字 列 終わら ない 行 抽出 する	df[not df[column].str.endswith(s)]
二つ 集合 集合 交わり 持た ない 判定 する	aSet.isdisjoint(aSet2)
個 リスト 等間隔 ビン 分割 する	pd.cut(aList, n)
オブジェクト タプルクラス インスタンス どう 調べる	isinstance(obj, tuple)
折れ線 グラフ 描画 し その 色 インディアン レッド 設定 する	plt.plot(データ列, データ列2, color='indianred')
リスト リスト 散布 図 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X')
データ 列 箱 ひ げ 図 描画 する	plt.boxplot(データ列)
昇順 組 値 並べ 変える	sorted(aTuple, reverse=True)
リスト リスト 散布 図 赤い ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.', c='r')
グラフ 論文 用 変更 する	sns.set(context='paper')
ファイル パス 追加 できる よう オープン する	open(filepath, mode='a', encoding='utf-8')
赤い 大 バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='X', c='r')
リスト リスト 青い パステル 調 グラフ プロット する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
ハッシュ 値	hash(x)
オプション パールゴールデンロッド 色 用いる	color = 'palegoldenrod'
折れ線 グラフ 青い ダイアモンドマーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
オブジェクト タプル 要素 で ない	element not in aTuple
リスト 赤色 する	f'\033[31m{value}\033[0m'
データ フレーム 列 値 グループ 化 し 記述 統計 量 求める	df.groupby(column).describe()
実数 実数 除算 し 切り捨てる	x // y
オプション トマト グラフ 色 設定 する	color = 'tomato'
変数 青色 プリント できる 文字 列 変換 する	f'\033[34m{value}\033[0m'
文字 列 走査 し パターン マッチ する 見る	re.search(pattern, s)
データ フレーム リスト カラム 値 正規 表現 まとめ 置き換える	df[aList].replace(pattern, repl, regex=True)
組 各 値 関数 適用 し た 結果 ソート する	sorted(aTuple, key=func)
実数 浮動 小数点 数 割っ た 余り	x % y
シーグリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='seagreen')
モジュール 検索 する パス 追加 する	sys.path.append(dir)
データ フレーム リスト カラム 欠損 値 平均 埋める	df[aList].fillna(df[aList].mean())
データ フレーム 列 名 まとめ 文字 列 文字 列 置換 する	df.columns = [str(x).replace(s, s2) for x in df.columns]
ヒストグラム 描画 し その 色 ネイビー 指定 する	plt.hist(データ列, color='navy')
左 三 角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='<')
グラフ 用途 論文 設定 する	sns.set(context='paper')
符号 付き バイト 列 する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
ヒストグラム 範囲 描画 する	plt.hist(データ列, range=(start, end))
ヒストグラム 描画 し 色 ミディアムターコイズ 設定 する	plt.hist(データ列, color='mediumturquoise')
文字 列 ファイル ファイル 番目 カラム インデックス 読み込む	pd.read_csv(filename, index_col=n)
オプション 色 ダークシアグリーン 設定 する	color = 'darkseagreen'
未満 または 以上 確認 する	n < n2 or n >= n3
プロット 目的 スライド 設定 する	sns.set(context='talk')
日付 データ 何 日 知る	aDate.day
データ フレーム リスト カラム 小数点 以下 桁 丸める	df[aList].round(n)
タプル 回 結合 する	aTuple * n
データ フレーム 列 昇順 ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
オプション ミディアムターコイズ グラフ 色 設定 する	color = 'mediumturquoise'
進 文字 列 バイト バイト 列 変換 する	int(s, n).to_bytes(length=bytesize, byteorder='big')
文字 列 バイト 列 する	s.encode(encoding='utf-8', errors='strict')
リスト リスト 散布 図 描画 し 三角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='^', c=rgb)
グラフ 大き さ 横 縦 指定 する	plt.figure(figsize=(width, height))
ヒストグラム 描画 し 色 やわらかい 青 変更 する	plt.hist(データ列, color='cornflowerblue')
半分 する	n /= 2
オプション 菱形 マーカー 使う	marker = 'D'
オブジェクト プロパティ 持つ	hasattr(obj, プロパティ名)
フローラルホワイト 色 ヒストグラム 描画 する	plt.hist(データ列, color='floralwhite')
カラー コード 下 三角 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='v', c=rgb)
貝殻 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='seashell')
日付 データ 日付 データ 同時 調べる	aDate == aDate2
プロット 用途 プレゼン 設定 する	sns.set(context='talk')
折れ線 グラフ ラベル 設定 する	plt.plot(xdata, ydata, label=untitled)
リスト イテラブル 散布 図 プロット し マーカー 色 明るい セット する	plt.plot(xdata, ydata, c='bright')
折れ線 グラフ 描画 し マーカー バツ 印 する	plt.plot(データ列, データ列2, marker='x')
複数 列 データ フレーム 降順 ソート する	df.sort_values(by=column, ascending=False)
データ 列 中 存在 する 文字 列 合計 数える	ds.isin([value, value2]).sum()
リスト リスト 破線 グラフ 描い 色 淡い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
データ 列 下位	ds.quantile(0.75)
年 月 日 日付	datetime.date(year=year, month=month, day=day)
両端 キュー 値 インプレース 逆順 する	deq.reverse()
配列 リスト 散布 図 淡い 色 重 見 やすく 描く	plt.plot(xdata, ydata, c='muted', alpha=0.5)
データ 列 正規 分布 どの 程度 歪ん いる 確認 する	ds.kurt()
データ フレーム カラム カラム 折れ線 グラフ 描画 する	plt.plot(df[col], df[col2])
形式 ファイル データ フレーム 読み込む	pd.read_json(filename, orient='records', lines=True)
ヒストグラム 描画 し その 色 耐火 レンガ 変更 する	plt.hist(データ列, color='firebrick')
データ フレーム カラム 中 いくつ 含ま れる カウント する	df[col].isna().sum()
ラベンダー ブラッシュ ヒストグラム 色 設定 する	plt.hist(データ列, color='lavenderblush')
データ 列 最 頻 値 増やす	ds.fillna(ds.mode().iloc[0])
グラフ 描画 明るい パレット 用いる	sns.set(pallete='bright')
データ フレーム 中 欠損 値 合計 求める	df.isna().sum()
ヒストグラム 色 設定 する	plt.hist(データ列, color='darkslategrey')
綺麗 な プロット 描く 準備 する	import seaborn as sns
オプション コロン 区切り 記号 用いる	sep = ':'
データ フレーム 列 ソート し 下位 件 取り出す	df.sort_values(columns).tail(n)
ファイル 文字 コード 書き込み 用 オープン する	open(filepath, mode='w', encoding=text)
配列 データ フレーム 指定 さ れ た 列 抽出 する	df[column].values
辞書 階層 化 辞書 する	collections.ChainMap(aDict)
線 グラフ 描画 し その 色 濃い 青 設定 する	plt.plot(データ列, データ列2, color='darkblue')
データ フレーム カラム 何時 調べる	df[col].dt.hour
データ フレーム カラム 中 ある 日付 データ 個数 数える	df[col].isin([value, value2]).sum()
実数 正 数 調べる	x > 0
ミディアムブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='mediumblue')
暗い グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
ヒストグラム 描画 し その 色 ペルー 設定 する	plt.hist(データ列, color='peru')
文字 列 エン コーディング バイト 列 変換 する	s.encode(encoding=encoding)
有理数 使用 する	import fractions
折れ線 グラフ 描画 し その 色 ミント クリーム 設定 する	plt.plot(データ列, データ列2, color='mintcream')
散布 図 カラー コード 下 三角 マーカー 使用 する	plt.plot(xdata, ydata, marker='v', c=rgb)
折れ線 グラフ 色 ナバホホワイト 設定 する	plt.plot(データ列, データ列2, color='navajowhite')
ヒストグラム 描画 し その 色 サドル ブラウン 設定 する	plt.hist(データ列, color='saddlebrown')
文字 列 末尾	s[-1]
データ フレーム 列 グループ 化 し 列 要約 統計 量 求める	df.groupby(column).describe()[column2]
黒い マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='^', c='k')
明るい 色 折れ線 描い 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
オプション 線 種 実線 設定 する	linestyle = 'solid'
データ フレーム 列 一つ 選択 する	df[[column]]
リスト リスト 暗い 色 折れ線 グラフ 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
セット イミュータブル 変換 する	frozenset(aSet)
両端 キュー 先頭 使う	deq[0]
文字 列 内 ひとつ 小文字 含ま れる どう 調べる	any(c.islower() for c in s)
組 順に 表示 する	print(*aTuple)
破線 折れ線 グラフ 設定 する	plt.plot(データ列, データ列2, linestyle='dashed')
ヒストグラム 描画 し その 色 ホワイトスモーク 設定 する	plt.hist(データ列, color='whitesmoke')
データ フレーム 列 値 ごと グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(['A', 'B'])]
折れ線 グラフ 描画 し その 色 ライト ブルー する	plt.plot(データ列, データ列2, color='lightblue')
日本語 グラフ 表示 できる よう する	sns.set(font='IPAexGothic')
折れ線 グラフ ポイント 印 線 幅 変更 する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線 グラフ 描画 し その 色 ホワイト 設定 する	plt.plot(データ列, データ列2, color='white')
正規 表現 文字 列 置き換える	re.sub(pattern, newsub, s)
プロット メモリ 線 付ける	plt.grid(True)
リスト 内 要素 全て 真 調べる	all(aList)
データ フレーム 欠損 値 埋める	df.fillna(x)
データ フレーム 列 インデックス 設定 する	df.set_index(column)
データ 列 イテラブル 淡い 折れ線 描画 し 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
ダーク グリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkgreen')
濃い 色 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
オプション グラフ 色 ミディアムターコイズ 指定 する	color = 'mediumturquoise'
折れ線 グラフ 大 バツ 印 黒く する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
日付 データ 日付 データ 先 調べる	aDate < aDate2
最後 部分 文字 列 使っ 文字 列 二分 する	s.rpartition(sub)
ファイル データ フレーム ファイル 書き込む	df.to_csv(filename)
折れ線 グラフ 描画 し その 色 ミディアムブルー 設定 する	plt.plot(データ列, データ列2, color='mediumblue')
線 グラフ 色 パールバイオレットレッド 変更 する	plt.plot(データ列, データ列2, color='palevioletred')
中央 値 リスト 分割 する	pd.qcut(aList, 2)
散布 図 黒色 クロス マーカー 使う	plt.plot(xdata, ydata, marker='x', c='k')
データ フレーム 列 名 リスト 用い 昇順 破壊 的 ソート する	df.sort_values(by=column, ascending=True, inplace=True)
データ フレーム カラム 欠損 値 最 頻 値 埋める	df[col].fillna(df[col].mode().iloc[0])
文字 列 日本語 含ま れる 調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
日付 データ 曜日 整数 使う	aDate.weekday()
文字 列 走査 し 正規 表現 マッチ する 確認 する	re.search(pattern, s)
データ フレーム 各 列 毎 集計 し 列 個数 求める	df.groupby(column)[column2].count()
データ フレーム 指定 さ れ た 列 抽出 する	df[[column]]
オプション 改行 代わり 文字 列 用いる	end = s
カレント 作業 ディレクトリ 変更 する	os.chdir(os.dirname(filepath))
折れ線 グラフ 赤い 菱形 マーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線 グラフ 色 ターコイズ 設定 する	plt.plot(データ列, データ列2, color='turquoise')
秒 文字 列 日付 データ 変換 する	pd.to_datetime(s, unit='s', utc=True)
グラフ 使う 縦 軸 ラベル つける	plt.ylabel(untitled)
実行 結果 マゼンタ する	f'\033[35m{value}\033[0m'
データ フレーム 中 列 ビン 数 ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
データ フレーム 書式 タイム スタンプ 型 変換 する	pd.to_datetime(df[col], format=fmt)
ヒストグラム 描画 し 色 青 緑 変更 する	plt.hist(データ列, color='turquoise')
折れ線 グラフ マーカー 大 バツ する	plt.plot(データ列, データ列2, marker='X')
行列 重複 除い た 配列 作る	np.unique(aArray)
折れ線 グラフ 描画 し その 色 スノー 指定 する	plt.plot(データ列, データ列2, color='snow')
線 グラフ 描画 し その 色 青 緑 設定 する	plt.plot(データ列, データ列2, color='teal')
データ 列 データ 列 リスト 値 応じ 散布 図 色 変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
句読点 文字 全て 見る	string.punctuation
ブール 型 全 要素 初期 化 さ れ た 行列 初期 化 する	np.zeros(行数, 列数, dtype=np.int32)
オプション クリムゾン 用いる	color = 'crimson'
日付 時刻 データ 形式 文字 列 する	aDatetime.isoformat()
リスト データ 列 散布 図 描い マーカー 右 三 角 指定 する	plt.plot(xdata, ydata, marker='>')
折れ線 グラフ 色 オリベドラブ 設定 する	plt.plot(データ列, データ列2, color='olivedrab')
オブジェクト 論理 値 クラス 調べる	isinstance(obj, bool)
重複 し た 行 抽出 する	df[df.duplicated(keep=False)]
赤い 丸 マーカー リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c='r')
文字 列 右側 改行 除去 する	s.rstrip()
実数 小数点 丸める	round(x)
オプション グラフ 色 ネイビー 指定 する	color = 'navy'
ヒストグラム 描画 し その 色 スラグレー 設定 する	plt.hist(データ列, color='slategrey')
折れ線 グラフ 描画 し その 色 ダーク シアン 設定 する	plt.plot(データ列, データ列2, color='darkcyan')
日付 時刻 データ 分 分 加算 する	aDatetime + datetime.timedelta(minutes=n)
オプション ダーク グレー 使う	color = 'darkgray'
折れ線 グラフ 描画 し その 色 白 設定 する	plt.plot(データ列, データ列2, color='white')
単位 行列 作る	np.eye(行数, 列数)
オプション 珊瑚 色 使う	color = 'coral'
低 頻出 方 カウンタ 列挙 する	aCounter.most_common()[::-1]
小数点 以下 表示 精度 桁 指定 する	pd.set_option('precision', n)
折れ線 グラフ 赤い 印 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
タプル 番目 以降 要素 取り出す	aTuple[n:]
データ 列 タイム ゾーン 日本 設定 する	ds.tz_convert('Asia/Tokyo')
配列 配列 散布 図 赤色 ポイント マーカー 描く	plt.plot(xdata, ydata, marker='.', c='r')
つ 並べて 箱 ひ げ 図 描画 する	plt.boxplot([データ列, データ列2])
プロット タイトル 変更 する	plt.title(untitled)
数式 簡単 化 する	sympy.sympify(e)
辞書 項目 数	len(aDict)
デック 右 イテラブル 各 要素 入れる	deq.extend(iterable)
データ 列 ユニーク な 要素 抽出 し リスト 化 する	ds.unique().tolist()
実数 十 位 丸める	round(x, -1)
オプション ラベンダー ブラッシュ グラフ 色 設定 する	color = 'lavenderblush'
オプション グラフ 色 ダーク オリーブ グリーン 設定 する	color = 'darkolivegreen'
既存 配列 元 全 要素 配列	np.ones_like(aArray)
二つ タプル チェーン する	collections.ChainMap(aDict, aDict2)
三角 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='^')
文字 列 バイト 列 する	s.encode(encoding='sjis', errors='ignore')
ヒストグラム 区間 数 変更 する	plt.hist(データ列, bins=n)
黒い バツ マーカー 用い 散布 図 描く	plt.plot(xdata, ydata, marker='x', c='k')
ファイル ファイル 番目 列 インデックス 読み込む	pd.read_csv(filename, index_col=n)
パステル 調 色 折れ線 描き その 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
実数 指数	math.frexp(x)[1]
ピンク ヒストグラム 色 指定 する	plt.hist(データ列, color='pink')
データ フレーム 列 値 かつ 列 で ある 行 抽出 する	df[(df[column] == x) & (df[column2] == x2)]
もしくは もしくは 等しい 調べる	n == 1 or n == 2 or n == 3
実数 十 六 進 表記 文字 列 変換 する	x.hex()
整数 八 進 文字 列 使う	oct(n)[2:]
データ フレーム リスト カラム 最大 値 設定 する	df[aList].fillna(df[aList].max())
オプション 貝殻 色 使う	color = 'seashell'
文字 列 タブ 区切っ プリント する	print(value, value2, sep='\t')
オプション 下 三角 マーカー 用いる	marker = 'v'
大き さ 配列 配列 散布 図 描画 する	plt.scatter(xdata, ydata, s=n)
要素 集合 含ま れ ない 調べる	element not in aSet
ビン ヒストグラム プロット する	plt.hist(データ列, bins=n)
データ フレーム 要約 統計 量	df.describe()
配列 データ 列 散布 図 描画 し マーカー 設定 する	plt.plot(xdata, ydata, marker='^')
データ フレーム リスト 列 欠損 値 直前 値 設定 する	df[aList].fillna(method='ffill')
日付 データ 週間 前 戻す	aDate - datetime.timedelta(weeks=n)
データ フレーム 破壊 的 二つ 列 ソート する	df.sort_values(by=['A', 'B'], inplace=True)
列 全 順列	itertools.permutations(iterable)
文字 列 シアン する	f'\033[36m{value}\033[0m'
リスト リスト 折れ線 グラフ プロット し 透明 度 指定 する	plt.plot(xdata, ydata, alpha=alpha)
データ 列 折れ線 グラフ 描画 し マーカー 左 三 角 印 する	plt.plot(データ列, データ列2, marker='<')
データ フレーム 行 ソート する	df.sort_index()
折れ線 グラフ 緑色 バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
データ 列 ヒストグラム 描く	plt.hist(ds)
データ フレーム で ファイル 保存 する	df.to_excel(filename)
最初 プログラム 書く	print('Hello World')
本日 書式 文字 列 変換 する	datetime.datetime.today().isoformat()
折れ線 グラフ 大き さ 星 マーカー 描画 する	plt.plot(データ列, データ列2, marker='*', markersize=n)
文字 文字 コード	ord(ch)
折れ線 グラフ 描画 し その 色 インディゴ 設定 する	plt.plot(データ列, データ列2, color='indigo')
要素 全て 初期 値 ベクトル 作る	np.full(要素数, 初期値, dtype=np.int)
散布 図 赤い 星 マーカー プロット する	plt.plot(xdata, ydata, marker='*', c='r')
付き 用い 既存 ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding='utf_8_sig')
リスト イテラブル 折れ線 文字 列 色 描画 する	plt.plot(xdata, ydata, color=s)
データ フレーム 列 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(['A', 'B'])]
文字 列 リスト イテラブル 変換 し カンマ 連結 する	','.join(map(str, iterable))
オプション グラフ 色 ダークゴールデンロッド 設定 する	color = 'darkgoldenrod'
配列 リスト 散布 図 描画 し マーカー ポイント 設定 する	plt.plot(xdata, ydata, marker='.')
実行 時 標準 出力 出力 先 ターミナル 確認 する	os.isatty(sys.stdin.fileno())
列 と列 キー 二つ データ フレーム 左 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
散布 図 濃い 色 マーカー 使う	plt.plot(xdata, ydata, c='deep')
真 なる イテラブル 要素	itertools.takewhile(predicateFunc, iterable)
タプル 長 さ	len(aTuple)
オプション グレー 色 使う	color = 'gray'
データ フレーム カラム 位 丸める	df[col].round(-2)
オプション アリス ブルー グラフ 色 設定 する	color = 'aliceblue'
シアン 変数 プリント する	print(f'\033[36m{value}\033[0m')
データ フレーム 上位 求める	df.quantile(0.25)
ヒストグラム 描画 し その 色 白 設定 する	plt.hist(データ列, color='white')
ファイル 名 テキストファイル 調べる	filename.endswith('.txt')
日付 時刻 データ 水曜日	aDatetime.weekday() == 2
緑色 星 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='g')
線 グラフ 描画 し その 色 グリーン イエロー 設定 する	plt.plot(データ列, データ列2, color='greenyellow')
小さい 順 列 データ フレーム ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
グラフ 横 軸 軸 ラベル 設定 する	plt.xlabel(untitled)
リスト 配列 淡い 折れ線 グラフ 描画 し その 線 幅 セット する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
何 桁	len(str(n))
リスト リスト 青色 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
ヒストグラム 色 ライト ブルー 設定 する	plt.hist(データ列, color='lightblue')
両端 キュー 番目 番目 部分 要素 使う	collections.deque(itertools.islice(deq, start, end))
ヒストグラム 描画 し その 色 アリスブルー セット する	plt.hist(データ列, color='aliceblue')
折れ線 グラフ 印 バツ する	plt.plot(データ列, データ列2, marker='x')
線 グラフ 色 マルーン 設定 する	plt.plot(データ列, データ列2, color='maroon')
折れ線 グラフ 黒い 丸 印 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
青い 暗い 描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
オプション ライト イエロー 色 使う	color = 'lightyellow'
オプション ダイアモンドマーカー 描画 する	marker = 'D'
パラメータ マイナス 無限 大 近づく とき 数式 極限 値 算出 する	sympy.limit(e, z, -oo)
文字 列 タプル 要素 で ない	element not in aTuple
二つ マッピング 階層 化 する	collections.ChainMap(aDict, aDict2)
赤い 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
クラス サブ クラス 調べる	issubclass(サブクラス, クラス)
エクセルファイルファイル 読む	pd.read_excel(filename)
リスト 配列 散布 図 黒色 丸 マーカー 描く	plt.plot(xdata, ydata, marker='o', c='k')
折れ線 グラフ 描画 し その 色 ライト サーモン 変更 する	plt.plot(データ列, データ列2, color='lightsalmon')
オプション シスル 色 使う	color = 'thistle'
カラー コード 星 マーカー 使っ 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c=rgb)
データ フレーム 列 行 取り出す	df[df[column] == x]
データ フレーム 重複 し た データ 残さ ず 削除 する	df.drop_duplicates(keep=False)
リスト リスト 暗い 折れ線 グラフ 描画 し 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
文字 列 リスト つなげる ひとつ 文字 列 する	''.join(map(str, iterable))
データ 列 未 入力 値 第 二 四 分 位 数 する	ds.fillna(ds.median())
オブジェクト 辞書 型	isinstance(obj, dict)
リスト リスト 散布 図 黒い クロス マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c='k')
文字 列 開始 位置 終了 位置 間 部分 文字 列 含ま れる	s.find(sub, start, end) != -1
折れ線 グラフ 描画 し その 色 ブルー バイオレット 設定 する	plt.plot(データ列, データ列2, color='blueviolet')
データ フレーム リスト カラム 欠損 値 最大 値 補う	df[aList].fillna(df[aList].max())
オプション グラフ 色 ミディアムブルー 設定 する	color = 'mediumblue'
配列 数列 散布 図 描い 文字 列 データ ラベル 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
底 する 浮動 小数点 数 対数	math.log2(x)
ファイル 全体 行 単位 分割 し リスト 変換 する	[s.strip() for s in f.readlines()]
データ フレーム カラム 欠損 値 モード 減らす	df[col].fillna(df[col].mode().iloc[0])
折れ線 グラフ 色 ミッドナイト ブルー 設定 する	plt.plot(データ列, データ列2, color='midnightblue')
角度 ラジ アン	math.radians(degree)
エン コーディング	sys.getdefaultencoding()
印字 可能 な 文字 全部 求める	string.printable
年月日 時刻 タイム スタンプ 作る	datetime.datetime(年, 月, 日, 時, 分, 秒)
オプション スカイ ブルー 色 使う	color = 'skyblue'
オプション クロス マーカー 使う	marker = 'x'
黒い 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='k')
線 グラフ 描画 し その 色 フォレストグリーン 設定 する	plt.plot(データ列, データ列2, color='forestgreen')
データ フレーム カラム 日付 データ 変換 し データ フレーム インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
淡い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
データ フレーム 関数 グループ 化 し 記述 統計 量 求める	df.groupby(関数).describe()
ホット ピンク ヒストグラム 色 指定 する	plt.hist(データ列, color='hotpink')
列 昇順 破壊 的 データ フレーム 整列 する	df.sort_values(by='A', ascending=True, inplace=True)
赤い バツ マーカー リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
双方向 キュー 値 インプレース 反転 する	deq.reverse()
データ フレーム 中 存在 する 行 削除 する	df.dropna()
ペールグリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='palegreen')
オブジェクト タプルクラス 調べる	isinstance(obj, tuple)
グラフ 描画 暗い カラー パレット 使う	sns.set(pallete='dark')
集合 別 集合 共通 要素 除く	aSet.symmetric_difference_update(aSet2)
ヒストグラム 描画 し 色 ミスティローズ 変更 する	plt.hist(データ列, color='mistyrose')
データ フレーム リスト カラム 値 調べる	df[aList].isna()
リスト 配列 散布 図 濃い 色 描画 する	plt.plot(xdata, ydata, c='deep')
データ フレーム リスト カラム 四捨五入 し 整数 する	df[aList].round().astype(int)
オールド レース ヒストグラム 色 設定 する	plt.hist(データ列, color='oldlace')
浮動 小数点 数 最小 値	sys.float_info.min
進 数字 全て 使う	string.octdigits
シーケンス 組み合せ	itertools.combinations(iterable, n)
カラー コード 右 三 角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='>', c=rgb)
濃い 色 リスト ヒストグラム 描画 する	plt.hist(xdata, color='deep')
日付 データ 日付 データ 後ろ どう 確認 する	aDate > aDate2
データ フレーム 列 ワン ホット ベクトル 変換 する	pd.get_dummies(df[column])
ヒストグラム 色 サドル ブラウン 変更 する	plt.hist(データ列, color='saddlebrown')
ヒストグラム 描画 し その 色 ベージュ 設定 する	plt.hist(データ列, color='beige')
ヒストグラム 描画 し 半 透明 する	plt.hist(データ列, alpha=0.5)
箱 ひ げ 図 二つ 並べ 描画 する	plt.boxplot([データ列, データ列2])
スラグレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='slategrey')
データ フレーム 列 グループ 分け し それぞれ グループ 毎 合計 求める	df.groupby(column).sum()
線 グラフ 色 ナバホホワイト 変更 する	plt.plot(データ列, データ列2, color='navajowhite')
ライト コーラル 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightcoral')
項目 名 マッピング 上 未定義 どう 調べる	key not in aDict
データ フレーム カラム 尖 度	df[col].skew()
イテラブル イテラブル ペア 化 する	itertools.zip_longest(iterable, iterable2)
暗い 色 折れ線 グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
パステル 調 の 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
タプル 番目	aTuple[n]
符号 付き バイト 列 変換 する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
データ フレーム カラム 未 入力 値 直後 値 する	df[col].fillna(method='bfill')
データ 列 正規 分布 どの 程度 尖っ いる 見る	ds.skew()
イテラブル 配列 散布 図 描画 し マーカー 色 淡い セット する	plt.plot(xdata, ydata, c='muted')
ラベンダー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lavender')
リスト リスト 折れ線 グラフ 描画 し 透明 度 設定 する	plt.plot(xdata, ydata, alpha=alpha)
オプション 左 三 角 マーカー 使用 する	marker = '<'
折れ線 グラフ 星 マーカー 赤く する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
列 名前 一覧 使う	df.columns
データ フレーム グループ 化 し それぞれ 列 最大 値 計算 する	df.groupby(column)[column2].max()
ベクトル 元 全 要素 配列 作る	np.zeros_like(aArray)
ネイピア 数	math.e
ファイル 追加 できる よう 付き 用い オープン する	open(filepath, mode='a', encoding='utf_8_sig')
文字 列 中 パターン 全て マッチ 使う	re.findall(pattern, s)
ファイル オープン する	open(filepath, encoding='euc_jp')
ストリーム 文字 読み込む	f.read(n)
調べる	n == n2
データ フレーム 各 列 毎 集計 し 列 平均 値 計算 する	df.groupby(column)[column2].mean()
オプション グラフ 色 ダークシアグリーン する	color = 'darkseagreen'
線 グラフ 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgrey')
色 差別 ない 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
ヒストグラム 半 透明 する	plt.hist(データ列, alpha=0.5)
緑色 ダイアモンドマーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
グラフ 鉛直 方向 点線 付ける	plt.axvline(x=0, linestyle='dotted')
インスタンス 化 する	datetime.datetime(年, 月, 日, 時, 分, 秒)
ヒストグラム 描画 し その 色 ピンク セット する	plt.hist(データ列, color='pink')
文字 列 リスト 要素 調べる	element in aList
折れ線 グラフ 色 アリスブルー セット する	plt.plot(データ列, データ列2, color='aliceblue')
ヒストグラム 描画 し その 色 ライトグリーン 設定 する	plt.hist(データ列, color='lightseagreen')
オプション レベッカパープル 色 使用 する	color = 'rebeccapurple'
線 グラフ 描画 し その 色 ライトスレイグレー 設定 する	plt.plot(データ列, データ列2, color='lightslategray')
リスト データ 列 散布 図 赤い 右 三 角 マーカー プロット する	plt.plot(xdata, ydata, marker='>', c='r')
データ フレーム ファイル 読み込む	pd.read_csv(filename, sep=',')
カラム 最 頻 値 設定 する	ds.fillna(ds.mode().iloc[0])
オプション 線 種 破線 設定 する	linestyle = 'dashed'
データ フレーム 列 ヒストグラム 描く	plt.hist(df[column])
データ フレーム リスト カラム 十 位 丸め 整数 する	df[aList].round(-1).astype(int)
データ フレーム それぞれ グループ 毎 標準 偏差 計算 する	df.groupby(column).std()
データ フレーム 列 グループ 化 し 平均 値 求める	df.groupby(column).mean()
空 辞書 作る	{}
タプル 要素 昇順 ソート する	sorted(aTuple, reverse=True)
データ フレーム 列 グループ 化 し 最大 値 求める	df.groupby(column).max()
標準 出力 得る	sys.stdout
割り切れ ない	n % 2 == 1
グラフ 使える 色 名 一覧	matplotlib.colors.cnames
両端 キュー 番目 要素 使う	deq[n]
データ フレーム 表示 する とき 折り返し し ない	pd.set_option('expand_frame_repr', False)
配列 変化 折れ線 描画 する	plt.plot(range(len(xdata)), xdata)
ゴールド ヒストグラム 色 指定 する	plt.hist(データ列, color='gold')
オプション ダーク グリーン 色 変更 する	color = 'darkgreen'
データ フレーム 列 値 グループ 化 し グループ ごと 合計 計算 する	df.groupby(column).sum()
リスト 配列 カラー コード 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
破壊 的 列 データ フレーム ソート する	df.sort_values(by=column, inplace=True)
文字 列 中 部分 文字 列 いくつ 含ま れる 調べる	s.count(sub)
データ フレーム 列 三つ 選択 する	df[[column, column2, column3]]
単位 正方 行列 作る	np.identity(N)
組 先頭 使う	aTuple[0]
データ フレーム 中 列 重複 見る	df.duplicated(subset=column)
データ 列 値 正規 表現 まとめ 置き換える	ds.replace(pattern, repl, regex=True)
タプル 行列 変換 する	np.array(iterable)
オプション 無視 する 列 番号 指定 する	skiprows = names
折れ線 グラフ 右 三 角 マーカー 加える	plt.plot(データ列, データ列2, marker='>')
イテラブル リスト 青い 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
キュー 中 要素 インデックス	deq.index(element)
個 文字 列 ある リスト 作る	[element] * n
ヒストグラム 描画 し 色 フローラルホワイト 変更 する	plt.hist(データ列, color='floralwhite')
時間 データ 列 日付 データ 変換 する	pd.to_datetime(ds, unit='s', utc=True)
オプション サンディーブラウン 色 使う	color = 'sandybrown'
折れ線 グラフ 描画 し その 色 サーモン 指定 する	plt.plot(データ列, データ列2, color='salmon')
ヒートマップ 用い データ フレーム リスト 列 相関 行列 グラフ 化 する	sns.heatmap(df[aList].corr())
カラー コード 右 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c=rgb)
パラメータ 数式 積分 算出 する	sympy.integrate(e, z)
線 グラフ 色 スノー 設定 する	plt.plot(データ列, データ列2, color='snow')
文字 列 開始 位置 終了 位置 番目 間 部分 文字 列 含ま れ ない	s.find(sub, start, end) == -1
行 分 標準 入力 読み込ん 改行 取り除く	sys.stdin.readline().rstrip()
小数点 数 小数 部	math.modf(x)[0]
リスト イテラブル 散布 図 黒い ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D', c='k')
オプション 読み込み モード する	mode = 'r'
実数 正接 逆数	math.atan(x)
青い 暗い 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
辞書 インデント 幅 形式 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, indent=n)
濃い 色 折れ線 グラフ 描い 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
データ フレーム カラム 前 行 値 置換 する	df[col].fillna(method='ffill')
日付 時刻 データ 金曜日 どう 調べる	aDatetime.weekday() == 4
イテラブル リスト 散布 図 カラー コード マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c=rgb)
データ 列 濃い 色 ヒストグラム 使っ プロット する	plt.hist(xdata, color='deep')
リスト 値 昇順 ソート する	sorted(aList, reverse=True)
ライト イエロー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightyellow')
散布 図 重なり 見やすく パステル 調 色 描画 する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
データ フレーム 重複 認め ランダム 行 サンプリング する	df.sample(n, replace=True)
スタック 順序 右 個 分 輪番 回す	deq.rotate(n)
ヒストグラム 描画 し 色 パープル 設定 する	plt.hist(データ列, color='purple')
イテラブル 集合 追加 更新 する	aSet.update(iterable)
配列 擬似 逆 行列	np.linalg.pinv(aArray)
ヒストグラム 色 アクア 指定 する	plt.hist(データ列, color='aqua')
ファイル オープン し 読み込み ストリーム 使う	open(filepath, mode='r')
タブ 区切り ファイル ファイル 読み込む	pd.read_csv(filename, encoding='shift_jis')
両端 キュー 中 要素 インデックス 使う	deq.index(element)
折れ線 グラフ 丸 マーカー サイズ 設定 する	plt.plot(データ列, データ列2, marker='o', markersize=n)
実数 十 六 進 表記 文字 列 する	x.hex()
折れ線 グラフ 色 シルバー 設定 する	plt.plot(データ列, データ列2, color='silver')
文字 列 日本語 ある どう	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
綺麗 な グラフ 使う 準備 する	import seaborn as sns
データ フレーム 列 ソート し 更新 する	df.sort_values(by=column, inplace=True)
折れ線 グラフ 描画 し その 色 マルーン 変更 する	plt.plot(データ列, データ列2, color='maroon')
データ フレーム リスト カラム 分 位 数	df[aList].quantile(percent/100)
両端 キュー 末尾 要素 追加 する	deq.append(element)
折れ線 グラフ 色 マゼンタ 指定 する	plt.plot(データ列, データ列2, color='magenta')
配列 数列 散布 図 パステル 調 色 重 見 やすく 描く	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
オプション ブラック 色 使う	color = 'black'
折れ線 グラフ 描画 し その 色 淡い ピンク色 設定 する	plt.plot(データ列, データ列2, color='lightpink')
オプション グラフ 色 シアン 変更 する	color = 'cyan'
関数 データ フレーム グループ 化 する	df.groupby(関数)
データ 列 値 正規 表現 まとめ 置き換える	ds.replace(pattern, repl, regex=True)
ゼロ 埋め さ れ た 行列 初期 化 する	np.zeros(行数, 列数)
折れ線 グラフ 描画 し その 色 コーンフラワーブルー 設定 する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線 グラフ 描画 し その 色 スプリング グリーン 設定 する	plt.plot(データ列, データ列2, color='springgreen')
オプション 色 マゼンタ 設定 する	color = 'magenta'
本日 曜日 見る	datetime.datetime.today().weekday()
両端 キュー 番目 要素	deq[n]
データ 列 ラベル 列 指定 し 横 棒グラフ プロット する	plt.barh(ラベル列, データ列)
配列 間 要素 ごと 最小公倍数	np.lcm(aArray, aArray2)
実行 結果 青色 表示 できる 文字 列 変換 する	f'\033[34m{value}\033[0m'
データ フレーム カラム 秒	df[col].dt.second
ふたつ 集合 集合 互いに 素 調べる	aSet.isdisjoint(aSet2)
データ 列 ラベル 列 指定 し 横 棒グラフ 描画 する	plt.barh(ラベル列, データ列)
文字 列 先頭 パターン マッチ する 確認 する	re.match(pattern, s)
タプル ナンバリング する	enumerate(aTuple)
ヒストグラム 描画 し その 色 茶色 設定 する	plt.hist(データ列, color='brown')
データ フレーム カラム 最 頻 値	df[col].mode()
変数 下線 付き 表示 できる 文字 列 変換 する	f'\033[4m{value}\033[0m'
オプション スノー 色 使用 する	color = 'snow'
折れ線 グラフ 緑色 大 バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
リスト 範囲 ヒストグラム 用い 描画 する	plt.hist(データ列, range=(start, end))
ファイル データ フレーム ファイル 保存 する	df.to_csv(filename)
ラベンダー ブラッシュ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lavenderblush')
リスト データ 列 散布 図 赤い 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<', c='r')
オプション ミディアムオーキッド 色 使う	color = 'mediumorchid'
ロイヤル ブルー ヒストグラム 色 設定 する	plt.hist(データ列, color='royalblue')
日付 データ 水曜日 調べる	aDate.weekday() == 2
線 グラフ 色 オレンジ 指定 する	plt.plot(データ列, データ列2, color='orange')
折れ線 グラフ 左 三 角 マーカー 青く する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
文字 列 太 文字 プリント する	print(f'\033[1m{value}\033[0m')
ふたつ 辞書 結合 する	aDict | aDict2
折れ線 グラフ 大き さ ダイアモンドマーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markersize=n)
日付 時刻 データ 日付 時刻 データ あと 調べる	aDatetime > aDatetime2
全 要素 初期 化 さ れ た 符号 なし ビット 整数 型 行列	np.zeros(行数, 列数, dtype=np.uint8)
折れ線 グラフ 三角 マーカー 青く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
エクセルファイルファイル 全て シート 読み込む	pd.read_excel(filename, sheet_name=None)
カラー コード 左 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c=rgb)
リスト リスト カラー コード 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
数式 変数 階 微分 行う	sympy.diff(e, z, n)
双方向 キュー リスト する	list(deq)
データ 列 書式 日付 データ 変換 する	pd.to_datetime(ds, format=fmt)
文字 コード 最大 値	sys.maxunicode
現在 何 秒 知る	datetime.date.today().second
折れ線 グラフ 右 三 角 マーカー 黒色 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
オプション ダーク グリーン グラフ 色 設定 する	color = 'darkgreen'
一 桁 数 どう 調べる	-9 <= x <= 9
列 標本 標準 偏差	ds.std()
文字 列 カンマ 区切っ 文字 列 リスト する	s.split(',')
データ フレーム 列 と列 重複 あれ 落とす	df.drop_duplicates(subset=[column, column2])
オプション 色 黄 緑 設定 する	color = 'chartreuse'
グラフ 色 指定 する	sns.set(pallete=palleteName)
折れ線 グラフ 描画 し 色 青 設定 する	plt.plot(データ列, データ列2, color='blue')
データ 列 型 変換 し データ フレーム インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
データ フレーム リスト 列 四捨五入 し 整数 型 する	df[aList].round().astype(int)
デフォルト 見た目 適用 する	sns.set()
折れ線 グラフ 描画 し その 色 ライトスカイブルー 設定 する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線 グラフ 描画 し その 色 フォレストグリーン 設定 する	plt.plot(データ列, データ列2, color='forestgreen')
データ フレーム 複数 列 昇順 ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
文字 列 中 正規 表現 マッチ し た 全て 文字 列 リスト する	re.findall(pattern, s)
オプション スラッシュ 分割 記号 用いる	sep = '/'
オプション ライト シアン グラフ 色 指定 する	color = 'lightcyan'
オプション グラフ 色 ラベンダー ブラッシュ 指定 する	color = 'lavenderblush'
最大 長 ある キュー	collections.deque(maxlen=n)
数列 明るい 色 ヒストグラム 描画 する	plt.hist(xdata, color='bright')
線 グラフ 描画 し その 色 スノー 設定 する	plt.plot(データ列, データ列2, color='snow')
データ フレーム 複数 列 集約 し 列挙 する	[(name, group) for name, group in df.groupby(columns)]
ヒストグラム 描画 し その 色 バリーウッド する	plt.hist(データ列, color='burlywood')
文字 列 接頭 辞 部分 文字 列 調べる	s.startswith(sub)
ヒストグラム 描画 し 半 透明 化 する	plt.hist(データ列, alpha=0.5)
折れ線 グラフ 描画 し その 色 サドル ブラウン 変更 する	plt.plot(データ列, データ列2, color='saddlebrown')
線 グラフ 色 ダークターコイズ 設定 する	plt.plot(データ列, データ列2, color='darkturquoise')
データ フレーム カラム 何 分 調べる	df[col].dt.minute
データ フレーム 欠損 値 中央 値 補う	df.fillna(df.median())
行列 形状 求める	aArray.shape
リネン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='linen')
散布 図 黒い マーカー 用いる	plt.plot(xdata, ydata, marker='v', c='k')
実数 整数 部	math.modf(x)[1]
ヒストグラム 描画 し 色 紺碧 設定 する	plt.hist(データ列, color='azure')
オプション グラフ 色 サドル ブラウン 指定 する	color = 'saddlebrown'
データ フレーム 複数 列 値 ごと 集約 し 列挙 する	[(name, group) for name, group in df.groupby(columns)]
配列 最大 値 計算 する	np.max(aArray)
オプション 色 ダーク バイオレット 設定 する	color = 'darkviolet'
データ フレーム 列 ユニーク な 値 個数	df[col].nunique()
折れ線 グラフ 描画 し その 色 マゼンタ 設定 する	plt.plot(データ列, データ列2, color='magenta')
ケン ドール 相関 係数 データ フレーム 相関 行列	df.corr(method='kendall')
オプション グラフ 色 オリーブ 設定 する	color = 'olive'
散布 図 赤い 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c='r')
データ フレーム ファイル 読み込む	pd.read_csv(filename, sep='\t')
パラメータ 数式 積分 求める	sympy.integrate(e, z)
マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='^')
ガンマ 関数	math.gamma(x)
ゼロ 埋め さ れ た 三 二 ビット 整数 型 配列 作る	np.zeros(要素数, dtype=np.int16)
オプション ダーク グレー 色 使用 する	color = 'darkgrey'
線 グラフ 色 赤 指定 する	plt.plot(データ列, データ列2, color='red')
データ フレーム 表示 する とき 行 数 増やす	pd.set_option('display.max_rows', n)
黒い ダイアモンドマーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
本日 年数	datetime.datetime.today().year
散布 図 赤い 四角 マーカー 使用 する	plt.plot(xdata, ydata, marker='s', c='r')
オプション グラフ 色 ダークシアグリーン セット する	color = 'darkseagreen'
折れ線 グラフ 描画 し その 色 ライトグリーン 変更 する	plt.plot(データ列, データ列2, color='lightgreen')
ヒストグラム 色 チョコレート 指定 する	plt.hist(データ列, color='chocolate')
オプション 色 グレー 指定 する	color = 'grey'
パターン マッチ し た 文字 列 新しい 文字 列 置換 する	re.sub(pattern, newsub, s)
文字 列 全て 識別子 名	s.isidentifier()
表 データ 指定 さ れ た 列 名 一覧 列 抽出 する	df[columns]
組 中 要素 少なくとも ひとつ 真 どう	any(aTuple)
ファイル 番目 シート データ フレーム 読む	pd.read_excel(filename, sheet_name=n)
配列 等量 分割 数 用い ビン 分割 する	pd.qcut(aArray, n)
データ フレーム 内 列 と列 重複 あれ マスク する	df.duplicated(subset=[column, column2])
ファイル シート 読み込む	pd.read_excel(filename, sheet_name=[n, n2])
散布 図 黒い 四角 マーカー 用いる	plt.plot(xdata, ydata, marker='s', c='k')
リスト リスト 破線 グラフ 描画 し その 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
濃い 色 散布 図 重なり 見 やすく 描く	plt.plot(xdata, ydata, c='deep', alpha=0.5)
小数点 数 切り上げ 整数 変換 する	math.ceil(x)
数式 簡単 する	sympy.sympify(e)
浮動 小数点 数 十 位 丸める	round(x, -1)
データ フレーム リスト カラム 欠損 値 最小 値 設定 する	df[aList].fillna(df[aList].min())
文字 列 緑色 プリント できる 文字 列 する	f'\033[32m{value}\033[0m'
データ フレーム 列 グループ 化 する	df.groupby('A')
データ フレーム 列 未 入力 値 直前 値 変更 する	df[col].fillna(method='ffill')
折れ線 グラフ 描画 し 色 貝殻 指定 する	plt.plot(データ列, データ列2, color='seashell')
数値 部分 分数 化 行う	sympy.apart(e)
折れ線 グラフ 黄色い 菱形 マーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
数式 数値 求める	float(e)
スクリプト ファイル 絶対 パス 使う	os.path.abspath(__file__)
最 頻 値 データ フレーム 欠損 値 埋める	df.fillna(df.mode().iloc[0])
日付 時刻 データ 土曜日 調べる	aDatetime.weekday() == 5
オプション 分割 記号 改行 する	sep = '\n'
グラフ グリッド 白く する	sns.set(style='whitegrid')
データ フレーム それぞれ グループ 個数	df.groupby(column).count()
データ フレーム インデックス 一覧	df.index
データ 列 欠損 値 最小 値 置換 する	ds.fillna(ds.min())
ヒストグラム 色 フクシア 設定 する	plt.hist(データ列, color='fuchsia')
データ フレーム 列 集約 し 列 要約 統計 量 求める	df.groupby(column).describe()[column2]
年 月 日 日付 時刻 する	datetime.datetime(year=year, month=month, day=day)
ヒストグラム 色 ミディアムスレートブルー 変更 する	plt.hist(データ列, color='mediumslateblue')
折れ線 グラフ 色 スカイ ブルー 設定 する	plt.plot(データ列, データ列2, color='skyblue')
リスト リスト 散布 図 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v')
ミディアムブルー ヒストグラム 色 変更 する	plt.hist(データ列, color='mediumblue')
オプション オー キッド 色 設定 する	color = 'orchid'
パステル 調 折れ線 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
ヒストグラム 描画 し 色 ライトグリーン 設定 する	plt.hist(データ列, color='lightgreen')
折れ線 グラフ 描画 し その 色 ライト サーモン 変更 する	plt.plot(データ列, データ列2, color='lightsalmon')
線 グラフ 色 ライトスカイブルー 設定 する	plt.plot(データ列, データ列2, color='lightskyblue')
リスト 中 要素 少なくとも ひとつ 真	any(aList)
ヒストグラム 描画 し その 色 黄色 変更 する	plt.hist(データ列, color='yellow')
改行 取り除い ファイル 一行 読む	f.readline()
書き込む ファイル 小数点 以下 桁 数 セット する	df.to_csv(filename, float_format='%.3f')
リスト リスト 明るい 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
データ フレーム 欠損 値 最大 値 埋める	df.fillna(df.max())
列 名 リスト データ 型 フィルタ する	df.select_dtypes(型).columns
全 要素 初期 化 さ れ た ビット 整数 型 行列	np.zeros(行数, 列数, dtype=np.int8)
スピアマン 相関 係数 データ フレーム リスト 列 相関 行列	df[aList].corr(method='spearman')
ヒストグラム 描画 し 色 ラベンダー ブラッシュ する	plt.hist(データ列, color='lavenderblush')
折れ線 グラフ 丸 印 青く する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
カウンタ ユニーク な 文字 列 列挙 する	list(aCounter)
オプション イエロー グリーン 色 使う	color = 'yellowgreen'
データ 列 中 ある 文字 列 文字 列 合計 数える	ds.isin([value, value2]).sum()
二つ データ フレーム 異なる カラム キー 左 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
オプション 色 ミディアムシアグリーン 変更 する	color = 'mediumseagreen'
行列 平均 値 計算 する	np.mean(aArray)
リスト リスト 折れ線 グラフ 透明 度 描画 する	plt.plot(xdata, ydata, alpha=alpha)
ファイル 追加 用 オープン する	open(filepath, mode='a')
データ フレーム 列 以上 行 抽出 する	df[df[column] >= x]
ヒストグラム 描画 し その 色 ミディアムアクアマリン 設定 する	plt.hist(データ列, color='mediumaquamarine')
折れ線 グラフ 描画 し その 色 ダーク カーキ 設定 する	plt.plot(データ列, データ列2, color='darkkhaki')
データ 列 曜日 何 日 目 見る	ds.dt.dayofweek
ヒストグラム 描画 し その 色 ダークオーキッド 指定 する	plt.hist(データ列, color='darkorchid')
文字 列 ファイル 書き込む	f.write(s)
データ フレーム まとめ 丸める	df.round()
配列 平坦 する	aArray.flatten()
リスト 行列 初期 化 する	np.array(aList)
ヒストグラム 描画 し 色 ライトスチールブルー セット する	plt.hist(データ列, color='lightsteelblue')
折れ線 グラフ バツ マーカー 黄色 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
小数点 以下 表示 精度 減らす	pd.set_option('precision', n)
オプション どの 列 インデックス し ない	index_col = None
オプション 線 種 実線 セット する	linestyle = 'solid'
折れ線 グラフ 右 三 角 マーカー 線 幅 セット する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
ヒストグラム 色 ライト サーモン 設定 する	plt.hist(データ列, color='lightsalmon')
ヒストグラム 描画 し その 色 シエナ セット する	plt.hist(データ列, color='sienna')
整数 八 進数 文字 列	oct(n)[2:]
ファイル 付き 用い オープン する	open(filepath, encoding='utf_8_sig')
右 三 角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='>')
三 自然 数 最小公倍数	math.lcm(n, n2, n3)
シーケンス カウンタ 作る	collections.Counter(iterable)
割り切れる 調べる	n % n2 == 0
ごと スライス	slice(n, n2, step)
正規 表現 文字 列 全体 マッチ さ せる	re.fullmatch(pattern, s)
データ フレーム 読み込む	pd.read_csv(filename, sep='\t')
赤色 パステル 調 の 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
オプション 先頭 列 行 増やす	index_col = 0
データ フレーム カラム 千 位 丸め 整数 する	df[col].round(-3).astype(int)
配列 リスト カラー コード 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
変数 近づく とき 数式 極限 値 求める	sympy.limit(e, z, 0)
文字 列 全て 数値	s.isnumeric()
破線 グラフ 色 明るい 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
カラム 正規 分布 どの 程度 歪ん いる 見る	ds.kurt()
オプション グラフ 色 サンディーブラウン 設定 する	color = 'sandybrown'
文字 列 中 パターン 全 マッチ 使う	re.findall(pattern, s)
文字 列 文字 列 辞書 順 前 どう 調べる	s < s2
データ フレーム それぞれ グループ 平均 値	df.groupby(column).mean()
オプション ダークオーキッド グラフ 色 する	color = 'darkorchid'
データ 列 リスト 明るい 色 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
日付 時刻 データ 年数	aDatetime.year
オプション マゼンタ 色 用いる	color = 'magenta'
ファイル パス 絶対 ファイル パス 変換 する	os.path.abspath(filepath)
文字 列 走査 し 正規 表現 限定 マッチ する 見る	re.search(pattern, s, flags=re.ASCI)
オプション ミント クリーム 用いる	color = 'mintcream'
列 キー し 二つ データ フレーム 左 結合 する	pd.merge(df, df2, on=column, how='left')
ヒストグラム 描画 し その 色 紺 設定 する	plt.hist(データ列, color='darkblue')
折れ線 グラフ 色 レベッカパープル 変更 する	plt.plot(データ列, データ列2, color='rebeccapurple')
オブジェクト プロパティ 値	getattr(obj, プロパティ名)
リスト リスト 濃い グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
表 データ 列 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(column)]
ヒストグラム 色 オリベドラブ セット する	plt.hist(データ列, color='olivedrab')
書式 文字 列 日付 型 する	pd.to_datetime(s, format=fmt)
リスト リスト 散布 図 左 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='<')
データ フレーム 中 列 等量 ビン 数 ビン 分割 する	pd.qcut(df[col], n)
文字 列 先頭 正規 表現 複数 行 対応 マッチ する 調べる	re.match(pattern, s, flags=re.MULTILINE)
オプション グラフ 色 コーラル 指定 する	color = 'coral'
リスト 重複 除く	sorted(set(aList), key=aList.index)
折れ線 グラフ 色 オレンジ 設定 する	plt.plot(データ列, データ列2, color='orange')
区間 数 設定 し ヒストグラム 描く	plt.hist(データ列, bins=n)
オプション グラフ 色 アクア 設定 する	color = 'aqua'
文字 列 ケース 変換 する	s.casefold()
π	math.pi
オプション ネイビー 色 使う	color = 'navy'
黒い 暗い グラフ プロット する	plt.plot(xdata, ydata, linestyle='dark', color='k')
数式 パラメータ 微分 する	sympy.diff(e, z)
データ フレーム 列 ダミー 変数 する	pd.get_dummies(df[column])
データ 列 標準 偏差	ds.std()
ひとつ 非 大文字 文字 列 中 ある 調べる	any(not c.isupper() for c in s)
行列 列 ごと 最小 値	np.min(aArray, axis=0)
タプル インデント 幅 形式 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, indent=n)
パパイヤウィップ 色 ヒストグラム 描画 する	plt.hist(データ列, color='papayawhip')
文字 列 白色 化 する	f'\033[37m{value}\033[0m'
オプション 色 ダークターコイズ 設定 する	color = 'darkturquoise'
線 グラフ 描画 し その 色 ライトスレイグレー セット する	plt.plot(データ列, データ列2, color='lightslategray')
文字 列 無限 イテラブル 得る	itertools.repeat(element)
折れ線 グラフ マーカー 丸 する	plt.plot(データ列, データ列2, marker='o')
ファイル 拡張 子 付き ファイル 名 使う	os.path.basename(filepath)
ヒストグラム 描画 し 色 オレンジ レッド 指定 する	plt.hist(データ列, color='orangered')
折れ線 グラフ 描画 し その 色 シエナ 設定 する	plt.plot(データ列, データ列2, color='sienna')
同じ 値	n == n2
オプション 色 スラグレー セット する	color = 'slategrey'
データ フレーム リスト カラム 欠損 値 直後 値 設定 する	df[aList].fillna(method='bfill')
折れ線 グラフ 描画 し 色 ブラック 設定 する	plt.plot(データ列, データ列2, color='black')
ヒストグラム 描画 し その 色 プラム 設定 する	plt.hist(データ列, color='plum')
小さい 確認 する	n < n2
文字 列 アンダーライン 付き 表示 する	print(f'\033[4m{value}\033[0m')
リスト 配列 散布 図 描い 星 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='*', c=rgb)
文字 列 改行 区切る	s.splitlines()
ヒストグラム 描画 し その 色 グリーン イエロー 設定 する	plt.hist(データ列, color='greenyellow')
折れ線 グラフ 色 オレンジ レッド する	plt.plot(データ列, データ列2, color='orangered')
黒色 大 バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='X', c='k')
データ フレーム 表示 する とき 列 データ フレーム 表示 できる よう する	pd.set_option('display.max_columns', n)
書き込み 用 ファイル オープン する	open(filepath, mode='w', encoding='shift_jis')
ファイル 読む	pd.read_csv(filename, sep='\t')
オプション ピンク色 使う	color = 'deeppink'
線 グラフ 描画 し 色 リネン 設定 する	plt.plot(データ列, データ列2, color='linen')
リスト リスト 散布 図 描画 し 文字 列 凡例 用 ラベル 設定 する	plt.scatter(xdata, xdata, label=s)
線 グラフ 描画 し その 色 プラム セット する	plt.plot(データ列, データ列2, color='plum')
データ フレーム 複数 列 昇順 ソート する	df.sort_values(by=column, ascending=True)
日付 データ 日付 データ 時間 差 秒 算出 する	(aDate - aDate2).total_seconds()
オプション 文字 列 示す エン コーディング 使う	encoding = s
辞書 キー 値 入れ替える	{v: k for k, v in aDict.items()}
オプション 暗い 赤 グラフ 色 変更 する	color = 'darkred'
折れ線 グラフ 黄色い 四角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
オプション オレンジ レッド 用いる	color = 'orangered'
折れ線 グラフ 色 ミディアムアクアマリン 変更 する	plt.plot(データ列, データ列2, color='mediumaquamarine')
底 する 対数	math.log10(x)
タプル 昇順 並べる	sorted(aTuple, reverse=True)
タプル キー 一覧 見る	list(aDict)
ヒストグラム 描画 し その 色 ゴールド 変更 する	plt.hist(データ列, color='gold')
リスト 配列 散布 図 カラー コード 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c=rgb)
オプション フォレストグリーン 使う	color = 'forestgreen'
ピーチ パフ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='peachpuff')
ヒストグラム 色 インディゴ 設定 する	plt.hist(データ列, color='indigo')
数式 部分 分数 展開 する	sympy.apart(e)
破線 グラフ 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リスト 小さい 方 並べ 変える	sorted(aList, reverse=False)
カラム 欠損 値 中央 値 指定 する	ds.fillna(ds.median())
折れ線 グラフ 丸 マーカー 緑色 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
整数 十 六 進 文字 列 する	hex(n)[2:]
小さい 順 データ フレーム 列 ソート する	df.sort_values(by='A', ascending=True)
リスト リスト 散布 図 描画 し ポイント マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='.', c=rgb)
各 桁 和	sum(map(int, str(n)))
オプション 三 ビット 整数 型 使う	dtype = np.int16
進 表記 変換 する	oct(n)
ポスター グラフ 設定 する	sns.set(context='poster')
ヒストグラム 描画 し その 色 トマト 変更 する	plt.hist(データ列, color='tomato')
小さい 順 列 用い 表 データ ソート し 更新 する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データ フレーム 列 グループ 化 し それぞれ グループ ごと 最大 値 求める	df.groupby(column).max()
実数 逆 余弦	math.acos(x)
変数 名 キー マップ 作成 する	dict(name=element)
データ フレーム 列 多く 小さい 行 取り出す	df[(x < df[column]) & (df[column] < x2)]
データ フレーム 内 列 重複 ある 見る	df.duplicated(subset=column)
日本語 文字 列 ある 調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
折れ線 グラフ 色 紺碧 設定 する	plt.plot(データ列, データ列2, color='azure')
リスト リスト パステル 調 グラフ 描画 し 色 青く する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
オプション ペールグリーン 色 設定 する	color = 'palegreen'
リスト リスト 濃い グラフ 描画 し その 色 黒色 設定 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
行列 転置 する	aArray.T
オプション グラフ 色 ピンク 設定 する	color = 'pink'
オプション 暗い 赤 グラフ 色 設定 する	color = 'darkred'
データ フレーム 複数 列 値 グループ 化 し 要約 統計 量 算出 する	df.groupby(columns).describe()
データ 列 欠損 値 モード 設定 する	ds.fillna(ds.mode().iloc[0])
折れ線 グラフ 描画 し その 色 暗い 赤 設定 する	plt.plot(データ列, データ列2, color='darkred')
線 グラフ 描画 し 色 アクアマリン 設定 する	plt.plot(データ列, データ列2, color='aquamarine')
割り切れる テスト する	n % 2 == 0
縦 方向 二つ 表 データ 一つ まとめる	pd.concat([df, df2])
組 展開 し プリント する	print(*aTuple)
データ フレーム 先頭	df.head()
文字 列 タプル 要素 で ない 調べる	element not in aTuple
折れ線 グラフ 描画 し その 色 パールバイオレットレッド 変更 する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線 グラフ 描画 し その 色 グレー 設定 する	plt.plot(データ列, データ列2, color='grey')
折れ線 グラフ 描画 し 色 コーラル 設定 する	plt.plot(データ列, データ列2, color='coral')
複数 データ フレーム 縦 方向 合体 さ せる	pd.concat([df, df2, df3], axis=0)
暗い 色 折れ線 グラフ プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
行列 次元 変形 する	aArray.reshape(行数, 列数)
線 グラフ 描画 し その 色 ダーク ブルー 指定 する	plt.plot(データ列, データ列2, color='darkblue')
プロット グリッド 線 入れる	plt.grid(True)
グラフ 色 濃く する	sns.set(pallete='deep')
リスト リスト 折れ線 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n)
オプション グラフ 色 イエロー グリーン セット する	color = 'yellowgreen'
パステル 調 の 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
ダーク バイオレット 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkviolet')
真	bool(x)
掛ける 算出 する	n * n2
濃い 色 ヒストグラム リスト 描く	plt.hist(xdata, color='deep')
文字 列 部分 文字 列 取り除く	s.replace(sub, '')
棒グラフ 色 カラー コード 設定 する	plt.bar(ラベル列, データ列, color=rgb)
文字 列 タイトル ケース	s.istitle()
タプル 文字 列 最初 見つかる インデックス 使う	aTuple.index(element)
リスト 等量 ビン 数 分割 する	pd.qcut(aList, n)
自然 数 個 もの 個 取り出し た 場合 並べ方 総数 求める	math.perm(n, k)
データ フレーム カラム 欠損 値 直前 値 設定 する	df[col].fillna(method='ffill')
日付 時刻 データ 日 見る	aDatetime.day
オプション グラフ 色 ミディアムバイオレットレッド 設定 する	color = 'mediumvioletred'
小麦色 ヒストグラム 色 設定 する	plt.hist(データ列, color='wheat')
文字 列 部分 文字 列 分け た とき 前半 文字 列	s.partition(sub)[0]
整数 二 進 表現 する	bin(n)
リスト リスト 散布 図 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o')
ライトグリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightgreen')
集合 要素 数	len(aSet)
データ フレーム 列 ソート し 更新 する	df.sort_values(by='A', inplace=True)
折れ線 グラフ 描画 し その 色 ゴースト ホワイト 指定 する	plt.plot(データ列, データ列2, color='ghostwhite')
オプション ダーク オリーブ グリーン 使う	color = 'darkolivegreen'
オプション シエナ 色 使う	color = 'sienna'
リスト 先頭 要素 除く	aList[n:]
ヒストグラム 色 ライトスレイグレー 設定 する	plt.hist(データ列, color='lightslategray')
折れ線 グラフ 描画 し 色 バリーウッド 指定 する	plt.plot(データ列, データ列2, color='burlywood')
マルーン ヒストグラム 色 セット する	plt.hist(データ列, color='maroon')
データ フレーム リスト カラム 欠損 値 後 行 値 設定 する	df[aList].fillna(method='bfill')
データ フレーム カラム 尖 度 求める	df[col].skew()
データ フレーム 指定 さ れ た 列 配列 変換 する	df[column].values
ヒストグラム 描画 し 透明 度 変更 する	plt.hist(データ列, alpha=x)
グラフ 色 明るく する	sns.set(pallete='bright')
データ フレーム 中 列 ビン 数 ビニング し ラベル つける	pd.cut(df[col], n, labels=names)
オプション グラフ 色 シエナ 設定 する	color = 'sienna'
行列 間 要素 ごと 最小公倍数	np.lcm(aArray, aArray2)
ヒストグラム 描画 し 色 ミディアムスレートブルー 設定 する	plt.hist(データ列, color='mediumslateblue')
折れ線 グラフ 色 ブラック 設定 する	plt.plot(データ列, データ列2, color='black')
折れ線 グラフ 描画 し その 色 ディープスカイブルー 設定 する	plt.plot(データ列, データ列2, color='deepskyblue')
インデックス 用い データ フレーム 全体 整列 する	df.sort_index()
項目 名 辞書 存在 する 調べる	key in aDict
折れ線 グラフ 描画 し その 色 ラベンダー ブラッシュ 設定 する	plt.plot(データ列, データ列2, color='lavenderblush')
数値 平方根 求める	sympy.sqrt(e)
全 要素 初期 化 さ れ た 配列 作成 する	np.ones(要素数, dtype=np.int)
実数 天井 計算 する	math.ceil(x)
オプション ブール 型 使う	dtype = np.int32
データ フレーム 欠損 値 最小 値 設定 する	df.fillna(df.min())
データ フレーム 列 値 グループ 化 し 要約 統計 量 計算 する	df.groupby('A').describe()
本日 曜日 整数 使う	datetime.datetime.today().weekday()
文字 列 中 正規 表現 全て マッチ 使う	re.findall(pattern, s)
リスト 数列 色 差別 ない グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
小さい 判定 する	n < n2
データ フレーム 列 グループ 化 し それぞれ グループ ごと 件数 知る	df.groupby(column).size()
線 グラフ 描画 し その 色 パールゴールデンロッド 変更 する	plt.plot(データ列, データ列2, color='palegoldenrod')
オプション ミディアムブルー 色 使用 する	color = 'mediumblue'
オプション チョコレート 色 使う	color = 'chocolate'
タイムスタンプデータ 日付 時刻 データ 時間 差 何 分 知る	(aDatetime - aDatetime2).total_seconds()//60
データ 列 等しい 量 なる よう ビン 数 ビン 分割 する	pd.qcut(ds, n)
文字 列 先頭 限定 正規 表現 マッチ さ せる	re.match(pattern, s, flags=re.ASCI)
バイト 列 変換 する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
実数 無限 大 調べる	math.isinf(x)
エン コーディング 調べる	sys.getdefaultencoding()
折れ線 グラフ 色 ミスティローズ 設定 する	plt.plot(データ列, データ列2, color='mistyrose')
文字 列 タプル 含ま れ ない 調べる	element not in aTuple
マップ 項目 名 対応 し た 値	aDict.get(key)
組 ひとつ 置き 得る	aTuple[::2]
データ フレーム 列 整列 し 新しい インデックス 加える	df.sort_values(columns).reset_index()
文字 列 部分 文字 列 分け た 時 前半 文字 列 使う	s.partition(sub)[0]
データ フレーム 末尾 行 抽出 する	df.tail(n)
データ フレーム 表示 する とき 列 データ フレーム 表示 可能 な よう する	pd.set_option('display.max_columns', n)
文字 列 秒 日付 データ 変換 する	pd.to_datetime(s, unit='s', utc=True)
両端 キュー 番目 データ 差し込む	deq.insert(n, element)
オプション トマト 色 使用 する	color = 'tomato'
年 月 日 タイム スタンプ	datetime.datetime(year=year, month=month, day=day)
ベクトル 列 ごと 合計 値	np.sum(aArray, axis=0)
整数 十 六 進 文字 列	hex(n)[2:]
箱 ひ げ 図 つ 並べる	plt.boxplot([データ列, データ列2])
大きい 調べる	n > n2
全 要素 初期 化 さ れ た ブール 型 行列	np.zeros(行数, 列数, dtype=np.int32)
集合 値 追加 する	aSet.add(element)
リスト 配列 散布 図 描画 し 色 色 差別 ない する	plt.plot(xdata, ydata, c='colorblind')
オプション カーキ 色 使う	color = 'khaki'
文字 列 番目 カラム インデックス ファイル 読み込む	pd.read_csv(filename, index_col=n)
折れ線 グラフ 左 三 角 印 使用 する	plt.plot(データ列, データ列2, marker='<')
辞書 値 要素 含ま れ いる	element in aDict.values()
ヒストグラム 描画 し その 色 スカイ ブルー 変更 する	plt.hist(データ列, color='skyblue')
ベクトル 列 ごと 合計 求める	np.sum(aArray, axis=0)
配列 行 ごと 平均 値 求める	np.mean(aArray, axis=1)
オプション データ 型 指定 する	dtype = np.uint8
タブ 区切り ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
ファイル 追加 ストリーム オープン し する	f = open(filepath, mode='a')
書式 データ 列 日付 データ 変換 する	pd.to_datetime(ds, format='%Y-%m-%d')
折れ線 グラフ 描画 し その 色 ライトスレイグレー 変更 する	plt.plot(データ列, データ列2, color='lightslategrey')
文字 列 内 ひとつ 英数字 ある	any(c.isalnum() for c in s)
データ フレーム データ 列 横 方向 連結 する	pd.concat([df, ds], axis=1)
データ フレーム 重複 し た 行 抽出 する	df[df.duplicated(keep=False)]
透明 度 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, alpha=alpha)
オプション グラフ 色 ネイビー 変更 する	color = 'navy'
線 グラフ 色 設定 する	plt.plot(データ列, データ列2, color='darkslategrey')
オプション ライトスチールブルー グラフ 色 指定 する	color = 'lightsteelblue'
ファイル バイト 読み込む	f.read(n)
ヒストグラム 色 ミッドナイト ブルー 設定 する	plt.hist(データ列, color='midnightblue')
折れ線 グラフ 色 ミディアムブルー 設定 する	plt.plot(データ列, データ列2, color='mediumblue')
淡い グラフ 描画 し その 線 幅 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
ヒストグラム 描画 し その 色 ブルー バイオレット 設定 する	plt.hist(データ列, color='blueviolet')
タプル 内 要素 少なくとも 一つ 真 どう 調べる	any(aTuple)
赤い 暗い 折れ線 プロット する	plt.plot(xdata, ydata, linestyle='dark', color='r')
リスト 末尾 取り除く	aList[:-1]
文字 列 中 限定 パターン 全て マッチ 使う	re.findall(pattern, s, flags=re.ASCI)
データ フレーム 含め 列 値 分類 する	df.groupby(column, dropna=False)
ダーク カーキ 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkkhaki')
保存 する ファイル 小数点 以下 桁 数 する	df.to_csv(filename, float_format='%.3f')
折れ線 グラフ 描画 し その 色 グレー 設定 する	plt.plot(データ列, データ列2, color='grey')
イテラブル 集合 変換 する	set(iterable)
ヒストグラム 描画 し 色 ミディアムシアグリーン 指定 する	plt.hist(データ列, color='mediumseagreen')
データ フレーム 中 カラム と列 重複 ある 確認 する	df.duplicated(subset=[column, column2])
データ 列 リスト 散布 図 カラー コード ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.', c=rgb)
オプション 大 バツ マーカー 描画 する	marker = 'X'
ファイル パス 読み込み 用 オープン する	open(filepath, mode='r')
	''
日付 時刻 データ 何 曜日 知る	aDatetime.weekday()
リスト データ 列 散布 図 カラー コード 菱形 マーカー 描画 する	plt.plot(xdata, ydata, marker='D', c=rgb)
文字 列 ひ ら なか どう	('ぁ' <= ch <= 'ん')
ヒストグラム 色 コーラル 指定 する	plt.hist(データ列, color='coral')
数列 リスト 散布 図 赤い 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c='r')
ヒストグラム 描画 し その 色 ミディアムパープル 設定 する	plt.hist(データ列, color='mediumpurple')
両端 キュー 右 値 取り出す	deq.pop()
浮動 小数点 数 浮動 小数点 数 かける	x * y
データ フレーム 列 破壊 的 落とす	df.drop(column, axis=1, inplace=True)
データ 列 位 丸める	ds.round(-3)
折れ線 グラフ 色 ディムグレー セット する	plt.plot(データ列, データ列2, color='dimgray')
浮動 小数点 数 二乗 する	x ** 2
ボックス チャート 横 並べ 描画 する	plt.boxplot([データ列, データ列2])
データ フレーム カラム ユニーク な 要素 抽出 し リスト 化 する	df[col].unique().tolist()
リスト 番目 番目 部分	aList[n:n2]
線 グラフ 描画 し 色 ミスティローズ 設定 する	plt.plot(データ列, データ列2, color='mistyrose')
データ フレーム カラム 位 丸め 整数 型 する	df[col].round(-2).astype(int)
ヒストグラム 描画 し 色 ダーク オリーブ グリーン 変更 する	plt.hist(データ列, color='darkolivegreen')
ファイル ベース ファイル 名	os.path.splitext(os.path.basename(filepath))[0]
数列 データ 列 散布 図 明るい 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
マップ キー 値 参照 する	aDict[key]
線 グラフ 描画 し 色 ライト グレー 指定 する	plt.plot(データ列, データ列2, color='lightgray')
文字 列 全て 数字	s.isdigit()
イテラブル リスト 黒い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リスト イテラブル 散布 図 赤い ダイアモンドマーカー 描く	plt.plot(xdata, ydata, marker='D', c='r')
データ フレーム グループ 化 し それぞれ 列 個数 計算 する	df.groupby(column)[column2].count()
ファイル パス 書き込み 用 開く	open(filepath, mode='w')
データ フレーム カテゴリ データ ダミー 変数 変換 する	pd.get_dummies(df)
オプション 黄 緑色 用いる	color = 'chartreuse'
直後 値 データ フレーム カラム 埋める	df[col].fillna(method='bfill')
配列 リスト カラー コード 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
オプション グラフ 色 ダーク グリーン 設定 する	color = 'darkgreen'
データ フレーム リスト 列 欠損 値 モード 設定 する	df[aList].fillna(df[aList].mode().iloc[0])
実数 正	x > 0
データ フレーム ファイル 読み込む	pd.read_json(filename, orient='records', lines=True)
ヒストグラム 描画 し その 色 サーモン 設定 する	plt.hist(データ列, color='salmon')
文字 列 式 評価 する	eval(s)
実数 逆 双曲線 余弦	math.acosh(x)
オプション フォレストグリーン 使用 する	color = 'forestgreen'
データ フレーム 各 列 カラム 組み合わせ 毎 集約 し 合計 求める	df.groupby([column, column2], as_index=False).sum()
文字 列 文字 列 グラフ 凡例 加える	plt.legend([s, s2])
オプション イエロー グリーン 使う	color = 'yellowgreen'
折れ線 グラフ 描画 し 色 ローン グリーン 設定 する	plt.plot(データ列, データ列2, color='lawngreen')
ライト グレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightgray')
既存 ベクトル ベース し 全 要素 初期 値 行列	np.full_like(aArray, 初期値)
リスト リスト 散布 図 プロット し ポイント マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='.', c=rgb)
データ フレーム カラム 最 頻 値 補う	df[col].fillna(df[col].mode().iloc[0])
データ フレーム リスト カラム 母 標準 偏差	df[aList].std(ddof=0)
ヒストグラム 描画 し 色 ライト シアン 変更 する	plt.hist(データ列, color='lightcyan')
リスト リスト 散布 図 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<')
データ フレーム 二つ 列 並べ 直す	df.sort_values(by=['A', 'B'])
モジュール 自分 自身	sys.modules[__name__]
文字 列 黒色 プリント できる 文字 列 変換 する	f'\033[30m{value}\033[0m'
行列 累積 積	np.cumprod(aArray)
濃い 色 マーカー 散布 図 描く	plt.plot(xdata, ydata, c='deep')
リスト ナンバリング する	enumerate(aList, start=n)
データ フレーム カラム 中 いくつ 日 付 データ 存在 する 数える	df[col].isin([value]).sum()
リスト 色 差別 ない 色 ヒストグラム プロット する	plt.hist(xdata, color='colorblind')
自然 数 順列 総数	math.perm(n)
リスト リスト 暗い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
データ フレーム 見る	df.head()
現在 ワーキング ディレクトリ 設定 する	os.chdir(os.dirname(filepath))
散布 図 上 三 角 マーカー 用いる	plt.plot(xdata, ydata, marker='^')
散布 図 カラー コード クロス マーカー 用いる	plt.plot(xdata, ydata, marker='x', c=rgb)
線 グラフ 色 ダーク シアン 設定 する	plt.plot(データ列, データ列2, color='darkcyan')
データ フレーム 列 正規 分布 左右 対称 性	df[col].kurt()
データ フレーム リスト カラム 中 含ま れる 合計 カウント する	df[aList].isin([value]).sum()
バイナリ 対数	math.log2(x)
折れ線 グラフ 描画 し その 色 ゴールド 設定 する	plt.plot(データ列, データ列2, color='gold')
タプル 平均 求める	sum(aTuple)/len(aTuple)
折れ線 グラフ 色 青 設定 する	plt.plot(データ列, データ列2, color='blue')
リスト リスト 散布 図 黒い ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D', c='k')
データ フレーム 中 文字 列 文字 列 ある 調べる	df.isin([value, value2])
列 行列 作成 する	np.array(iterable)
折れ線 グラフ 色 黄 緑 指定 する	plt.plot(データ列, データ列2, color='chartreuse')
オプション 色 サドル ブラウン 設定 する	color = 'saddlebrown'
綺麗 な グラフ プロット する 準備 する	import seaborn as sns
ファイル 名 テキストファイル 判定 する	filename.endswith('.txt')
行列 行 方向 連結 する	np.concatenate([aArray, aArray2], axis=1)
句読点 文字 使う	string.punctuation
タプル 番目 番目 部分 抽出 する	aTuple[n:n2]
範囲 ヒストグラム する	plt.hist(データ列, range=(start, end))
シーケンス 最大 長 両端 キュー 作る	collections.deque(iterable, maxlen=n)
リスト リスト 暗い 描画 し その 色 黒色 設定 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
まとめ データ フレーム カラム 名前 文字 列 文字 列 置換 する	df.columns = [str(x).replace(s, s2) for x in df.columns]
列 データ フレーム グループ 化 し それぞれ グループ 平均 値 計算 する	df.groupby(column).mean()
データ フレーム 列 以上 データ 選ぶ	df[df[column] >= x]
折れ線 グラフ 色 小麦色 設定 する	plt.plot(データ列, データ列2, color='wheat')
ヒストグラム 描画 し その 色 オレンジ レッド セット する	plt.hist(データ列, color='orangered')
リスト リスト 暗い グラフ 描画 し 色 黒 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
サイコロ	random.randint(1, 6)
ヒストグラム 色 ミディアムブルー 指定 する	plt.hist(データ列, color='mediumblue')
上位 集合 もしくは 等しい どう 確認 する	aSet > aSet2
現在 何 分 知る	datetime.date.today().minute
カウンタ 集合 する	set(aCounter)
ヒストグラム 色 ライトグリーン 指定 する	plt.hist(データ列, color='lightseagreen')
データ フレーム 複数 列 降順 ソート する	df.sort_values(by=column, ascending=False)
イテラブル 集合	set(iterable)
ヒストグラム 描画 し その 色 ブラック セット する	plt.hist(データ列, color='black')
文字 列 文字 列 辞書 順 前	s < s2
データ フレーム 十 位 丸める	df.round(-1)
配列 元 全 要素 初期 値 配列	np.full_like(aArray, 初期値)
ヒストグラム 色 アイボリー 設定 する	plt.hist(データ列, color='ivory')
色 濃く する	sns.set(pallete='deep')
列 データ フレーム 集約 し それぞれ グループ ごと 最大 値 求める	df.groupby(column).max()
折れ線 グラフ 色 カーキ 設定 する	plt.plot(データ列, データ列2, color='khaki')
データ フレーム 列 と列 キー 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
散布 図 黒い マーカー 使う	plt.plot(xdata, ydata, marker='^', c='k')
配列 数列 散布 図 描画 し マーカー 左 三 角 指定 する	plt.plot(xdata, ydata, marker='<')
ホワイトスモーク 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='whitesmoke')
ヒストグラム 描画 し その 色 スカイ ブルー 指定 する	plt.hist(データ列, color='skyblue')
データ フレーム 型 リスト データ 型 列 取り出す	df.select_dtypes(include=typeList)
配列 数列 明るい グラフ プロット し その 色 青色 変更 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
分割 数 用い 等量 データ フレーム 中 列 分割 する	pd.qcut(df[col], n)
オプション パールバイオレットレッド 用いる	color = 'palevioletred'
ヒストグラム アルファ 値 指定 する	plt.hist(データ列, alpha=x)
要素 集合 メンバー で ない 調べる	element not in aSet
最小 値 データ フレーム カラム 欠損 値 補う	df[col].fillna(df[col].min())
折れ線 グラフ 色 ティール 設定 する	plt.plot(データ列, データ列2, color='teal')
折れ線 グラフ 描画 し 色 シエナ 変更 する	plt.plot(データ列, データ列2, color='sienna')
ヒストグラム 描画 し その 色 ライトスレイグレー セット する	plt.hist(データ列, color='lightslategrey')
リスト 配列 散布 図 描画 し マーカー 変更 する	plt.plot(xdata, ydata, marker='v')
数 二 乗	x ** 2
折れ線 グラフ マーカー ダイアモンド する	plt.plot(データ列, データ列2, marker='D')
部分 文字 列 文字 列 開始 位置 以降 含ま れる どう 調べる	s.find(sub, start) != -1
折れ線 グラフ 青い マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
データ フレーム 重複 ある 見る	df.duplicated()
データ フレーム ファイル 保存 する	df.to_csv(filename)
論理 値 型 全 要素 初期 化 さ れ た 行列	np.zeros(行数, 列数, dtype=np.int32)
ヒストグラム 描画 し その 色 ダークスレートブルー する	plt.hist(データ列, color='darkslateblue')
棒グラフ 描画 する	plt.bar(ラベル列, データ列)
ヒストグラム 色 グレー 設定 する	plt.hist(データ列, color='gray')
浮動 小数点 数 整数 減算 する	x - y
セット イミュータブル な 集合 変換 する	frozenset(aSet)
非 英数字 文字 列 中 含ま れる 調べる	any(not c.isalnum() for c in s)
ヒストグラム 描画 し 色 ピーチ パフ 設定 する	plt.hist(データ列, color='peachpuff')
ヒストグラム 色 ライム する	plt.hist(データ列, color='lime')
カラム 母 標準 偏差	ds.std(ddof=0)
数列 リスト 折れ線 グラフ 透明 度 描画 する	plt.plot(xdata, ydata, alpha=alpha)
オプション どの カラム 行 設定 し ない	index_col = None
黒い 左 三 角 マーカー 配列 配列 散布 図 プロット する	plt.plot(xdata, ydata, marker='<', c='k')
データ フレーム 列 グループ 化 し それぞれ グループ 毎 最小 値 計算 する	df.groupby(column).min()
オプション ペールグリーン 色 使用 する	color = 'palegreen'
タイム スタンプ データ 列 データ フレーム インデックス する	df.index = pd.DatetimeIndex(ds)
グラフ 使う 準備 する	from sympy import N
データ フレーム 指定 さ れ た 列 抽出 する	df[[column]]
折れ線 グラフ 色 トマト 設定 する	plt.plot(データ列, データ列2, color='tomato')
データ フレーム 中 列 個 等間隔 ビン 分割 する	pd.cut(df[col], n)
オプション パールゴールデンロッド 色 使う	color = 'palegoldenrod'
データ フレーム リスト 列 値 まとめ 置き換える	df[aList].replace(ValueMap)
イテラブル それぞれ 関数 フィルタ する	filter(func, iterable)
リスト データ 列 散布 図 描画 し マーカー ダイアモンド 指定 する	plt.plot(xdata, ydata, marker='D')
実数 天井	math.ceil(x)
行列 列 ごと 標準 偏差 算出 する	np.std(aArray, axis=0)
折れ線 グラフ 描画 し 色 真紅 設定 する	plt.plot(データ列, データ列2, color='crimson')
無限 続く 数列 得る	itertools.repeat(n)
現在 時間	datetime.date.today().hour
データ フレーム カラム 未 入力 値 モード 設定 する	df[col].fillna(df[col].mode().iloc[0])
データ フレーム 列 グループ 化 し それぞれ グループ ごと 標準 偏差 求める	df.groupby(column).std()
パラメータ 無限 大 近づく とき 数値 極限 値 計算 する	sympy.limit(e, z, oo)
ファイル 絶対 パス 使う	os.path.abspath(filepath)
文字 列 回数 制限 し 置き換える	s.replace(sub, newsub, n)
ヒストグラム 色 カデット ブルー 指定 する	plt.hist(データ列, color='cadetblue')
変数 シアン 表示 できる 文字 列 変換 する	f'\033[36m{value}\033[0m'
データ フレーム 型 リスト 指定 さ れ た データ 型 列 除外 する	df.select_dtypes(exclude=typeList)
データ 列 ヒストグラム 色 差別 ない 色 描画 する	plt.hist(xdata, color='colorblind')
リスト リスト 散布 図 描画 し 四角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='s', c=rgb)
リスト リスト 明るい グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
オプション グラフ 色 デピンク 変更 する	color = 'deeppink'
ラベル付け し リスト イテラブル 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, label=untitled)
双方向 キュー 空 で ない 調べる	len(deq) != 0
オブジェクト クラス 調べる	isinstance(obj, クラス)
折れ線 グラフ 色 アンティーク ホワイト 設定 する	plt.plot(データ列, データ列2, color='antiquewhite')
データ フレーム 各 列 毎 グループ 分け し 列 個数 求める	df.groupby(column)[column2].count()
リスト 数列 折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
プロット データ ラベル 場所 指定 する	plt.legend(loc=(x, y))
折れ線 グラフ 描画 し 色 トマト 指定 する	plt.plot(データ列, データ列2, color='tomato')
グラフ 中 日本語 表示 利用 可能 する	sns.set(font='IPAexGothic')
ランダム データ フレーム 選択 する	df.sample()
パステル 調 配列 ヒストグラム プロット する	plt.hist(xdata, color='pastel')
ラベンダー ブラッシュ ヒストグラム 色 セット する	plt.hist(データ列, color='lavenderblush')
リスト リスト パステル 調 色 折れ線 グラフ プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
ラベンダー ブラッシュ 色 ヒストグラム 描画 する	plt.hist(データ列, color='lavenderblush')
エクセルファイルファイル シート 読み込む	pd.read_excel(filename, sheet_name=[n, n2])
データ フレーム カテゴリ データ 列 名 リスト 見る	df.select_dtypes('object').columns
ファイル 入力 ストリーム 見る	open(filepath)
実数 双曲線 正接 求める	math.tanh(x)
複数 列 値 ごと データ フレーム グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(columns)]
折れ線 グラフ バツ マーカー 大き さ 変更 する	plt.plot(データ列, データ列2, marker='x', markersize=n)
リスト リスト 破線 グラフ 描い 色 淡い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
円周 率	math.pi
組 合計 値	sum(aTuple)
濃い 色 青く する	plt.plot(xdata, ydata, linestyle='deep', color='b')
アーク タンジェント	math.atan(x)
暗い 色 配列 柱状 図 プロット する	plt.hist(xdata, color='dark')
論理 値 する	bool(x)
データ フレーム 行 名前 まとめ 付け 直す	df.rename(index={name: name2})
データ フレーム 列 文字 列 始まら ない データ 取り出す	df[not df[column].str.startswith(s)]
折れ線 グラフ 描画 し 色 ディムグレー 設定 する	plt.plot(データ列, データ列2, color='dimgray')
ヒストグラム 色 ミディアムアクアマリン 設定 する	plt.hist(データ列, color='mediumaquamarine')
折れ線 グラフ 四角 印 線 幅 セット する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線 グラフ 描画 し 色 ゴールデン ロッド 設定 する	plt.plot(データ列, データ列2, color='goldenrod')
オプション 色 ビスク 設定 する	color = 'bisque'
リスト 緑色 プリント できる 文字 列 する	f'\033[32m{value}\033[0m'
折れ線 グラフ 描画 し 色 ゴールド 設定 する	plt.plot(データ列, データ列2, color='gold')
最大 長 両端 キュー 作成 する	collections.deque(maxlen=n)
リスト 重複 取り除く	sorted(set(aList), key=aList.index)
組 タプル 加える	aTuple + aTuple2
文字 列 先頭 パターン 複数 行 対応 マッチ する 見る	re.match(pattern, s, flags=re.MULTILINE)
折れ線 グラフ 描画 し その 色 バリーウッド 指定 する	plt.plot(データ列, データ列2, color='burlywood')
個 分 両端 キュー 要素 ロー テンション する	deq.rotate(n)
ファイル 開き バイナリ 書き込み ストリーム 見る	open(filepath, mode='wb')
最初 コマンド 引数 知る	sys.argv[1]
ヒストグラム 描画 し その 色 フォレストグリーン 設定 する	plt.hist(データ列, color='forestgreen')
リネン ヒストグラム 色 設定 する	plt.hist(データ列, color='linen')
データ フレーム 二つ 列 昇順 ソート する	df.sort_values(by=['A', 'B'], ascending=True)
データ フレーム 行 目 行 目 抽出 する	df[start:end]
データ フレーム リスト 列 中 含ま れる 文字 列 文字 列 合計 数える	df[aList].isin([value, value2]).sum()
データ フレーム 重複 する 行 抽出 する	df[df.duplicated(keep=False)]
データ フレーム 列 グループ 化 し 列 要約 統計 量 計算 する	df.groupby(column).describe()[column2]
文字 列 先頭 不要 な 空白 取り除く	s.lstrip()
折れ線 グラフ 色 マルーン 設定 する	plt.plot(データ列, データ列2, color='maroon')
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 標準 偏差 計算 する	df.groupby([column, column2], as_index=False).std()
データ 列 値 欠損 値 調べる	ds.isna()
全 要素 初期 化 さ れ た 三 二 ビット 整数 型 行列	np.zeros(行数, 列数, dtype=np.int16)
最大 長 指定 し 双方向 キュー	collections.deque(maxlen=n)
オブジェクト 文字 列 変換 する	str(obj)
ひとつ 文字 文字 列 内 含ま れる 調べる	any(c.isascii() for c in s)
データ フレーム 列 ソート する	df.sort_values(by='A')
文字 列 片仮名	('ァ' <= ch <= 'ン')
オプション 印 下 三角 変更 する	marker = 'v'
折れ線 グラフ 緑色 左 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
オプション スチール ブルー 色 設定 する	color = 'steelblue'
オプション ライト グレー グラフ 色 設定 する	color = 'lightgray'
リスト リスト 散布 図 カラー コード 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c=rgb)
文字 列 開始 位置 部分 文字 列 探す	s.find(sub, start)
カラム どの 程度 分散 し いる 調べる	ds.var()
カラー コード 右 三 角 マーカー リスト 配列 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c=rgb)
変数 出力 改行 なし 行う	print(value, end='')
折れ線 グラフ 描画 し その 色 コーンフラワーブルー セット する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線 グラフ 描画 し その 色 カーキ 設定 する	plt.plot(データ列, データ列2, color='khaki')
折れ線 グラフ 色 ライム 設定 する	plt.plot(データ列, データ列2, color='lime')
オブジェクト フィールド 値 設定 する	setattr(obj, プロパティ名, 値)
リスト 淡い 色 ヒストグラム プロット する	plt.hist(xdata, color='muted')
データ フレーム 列 一覧	df.info()
データ 列 直後 値 変更 する	ds.fillna(method='bfill')
データ フレーム 行列 ひっくり返す	df.T
ヒストグラム 描画 し その 色 サーモン 変更 する	plt.hist(データ列, color='salmon')
折れ線 グラフ 色 ブランチドアーモンド セット する	plt.plot(データ列, データ列2, color='blanchedalmond')
底 する 小数点 数 対数	math.log10(x)
折れ線 グラフ 描画 し その 色 ブルー バイオレット 設定 する	plt.plot(データ列, データ列2, color='blueviolet')
散布 図 黒い 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c='k')
逆 正弦	math.asin(x)
マッピング フォーマット 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False)
ユーザ 入力 整数 受け取る	int(input())
オプション グラフ 色 ミディアムブルー する	color = 'mediumblue'
オプション 文字 コード 付き 変更 する	encoding = 'utf_8_sig'
文字 列 バイト 列 変換 する	s.encode(encoding='utf-8', errors='strict')
データ フレーム 複数 列 値 集約 し 列挙 する	[(name, group) for name, group in df.groupby(columns)]
タイムスタンプデータ 年数	aDatetime.year
リスト リスト 暗い グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
配列 データ 列 散布 図 描画 し マーカー 左 三 角 設定 する	plt.plot(xdata, ydata, marker='<')
グラフ 中 場所 凡例 入れる	plt.legend(loc=(x, y))
イテラブル 要素 全て 集合 追加 する	aSet.update(iterable)
データ 列 欠損 値 平均 埋める	ds.fillna(ds.mean())
折れ線 グラフ 色 デピンク 設定 する	plt.plot(データ列, データ列2, color='deeppink')
オプション グラフ 色 グレー 設定 する	color = 'grey'
データ フレーム 横 方向 連結 する	pd.concat([df, df2, df3], axis=1)
リスト ヒストグラム 可視 化 する	plt.hist(aList)
オプション グラフ 色 コーラル 設定 する	color = 'coral'
線 グラフ 色 淡い ピンク色 指定 する	plt.plot(データ列, データ列2, color='lightpink')
折れ線 グラフ 描画 し 色 ダークスレートブルー 変更 する	plt.plot(データ列, データ列2, color='darkslateblue')
ファイル 読み込み ストリーム 見る	open(filepath)
リスト 双方向 キュー 作成 する	collections.deque(iterable)
画面 グラフ 目的 変更 する	sns.set(context='notebook')
データ 列 欠損 値 埋める	ds.fillna(x)
日付 時刻 データ 日付 時刻 データ 前 どう 調べる	aDatetime < aDatetime2
ヒストグラム 描画 し その 色 パープル セット する	plt.hist(データ列, color='purple')
リスト リスト 散布 図 濃い 色 描画 する	plt.plot(xdata, ydata, c='deep')
データ 列 折れ線 グラフ 描画 し マーカー バツ する	plt.plot(データ列, データ列2, marker='x')
ふたつ 集合 共通 要素 持た ない 確認 する	aSet.isdisjoint(aSet2)
文字 列 数値 時刻 日付 データ 変換 する	pd.to_datetime(s, unit='s', utc=True)
データ フレーム 列 値 グループ 化 する	df.groupby(column)
折れ線 グラフ 色 ホワイトスモーク 設定 する	plt.plot(データ列, データ列2, color='whitesmoke')
今日 日曜日	datetime.datetime.today().weekday() == 6
数列 リスト 散布 図 星 マーカー 描く	plt.plot(xdata, ydata, marker='*')
赤い ポイント マーカー リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c='r')
書式 文字 列 日付 時刻 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
ヒストグラム 色 ティール する	plt.hist(データ列, color='teal')
折れ線 グラフ 描画 し 色 モカシン 設定 する	plt.plot(データ列, データ列2, color='moccasin')
データ フレーム 列 正規 表現 文字 列 マッチ する データ 選択 する	df[df[column].str.match(s)]
データ フレーム 列 値 グループ 分け し グループ ごと 個数 求める	df.groupby(column).count()
ピアソン 積 率 相関 係数 データ フレーム リスト 指定 さ れ た 列 相関 行列	df[aList].corr(method='pearson')
列 回 あわせ た デカルト 積	itertools.product(iterable, repeat=2)
改行 付き マッピング 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, indent=n)
行列 列 ごと 最大	np.max(aArray, axis=0)
ヒストグラム 色 ダークスレートブルー 変更 する	plt.hist(データ列, color='darkslateblue')
折れ線 グラフ 大 バツ 印 線 幅 設定 する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
折れ線 グラフ 四角 印 赤色 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
ヒストグラム 描画 し その 色 赤 設定 する	plt.hist(データ列, color='red')
文字 列 タプル 要素	element in aTuple
列 キー 二つ データ フレーム 右 結合 する	pd.merge(df, df2, on=column, how='right')
プロット 見栄え 良く する	import seaborn as sns
赤い 明るい 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
プロット 色 明るく する	sns.set(pallete='bright')
データ 列 欠損 値 直後 値 設定 する	ds.fillna(method='bfill')
年 月 日 時 タイム スタンプ オブジェクト 化 する	datetime.datetime(year=year, month=month, day=day, hour=hour)
タイムスタンプデータ 数値 する	aDatetime.timestamp()
散布 図 赤い ダイアモンドマーカー 使用 する	plt.plot(xdata, ydata, marker='D', c='r')
暗い グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
明るい 色 リスト ヒストグラム 描画 する	plt.hist(xdata, color='bright')
黒い 星 マーカー データ 列 データ 列 散布 図 プロット する	plt.plot(xdata, ydata, marker='*', c='k')
タブ 区切り ファイル 読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
データ フレーム リスト 列 欠損 値 最大 値 設定 する	df[aList].fillna(df[aList].max())
折れ線 グラフ 描画 し その 色 ミディアムオーキッド 変更 する	plt.plot(データ列, データ列2, color='mediumorchid')
データ フレーム 中 ある 文字 列 合計 数える	df.isin([value]).sum()
変数 紫色 する	f'\033[35m{value}\033[0m'
リスト 番目	aList[n]
線 グラフ 色 ドジャーブルー 変更 する	plt.plot(データ列, データ列2, color='dodgerblue')
日付 時刻 データ 火曜日 調べる	aDatetime.weekday() == 1
ヒストグラム 色 ダークスラテグレー 指定 する	plt.hist(データ列, color='darkslategray')
黒い 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
折れ線 グラフ 四角 マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線 グラフ 描画 し その 色 茶色 設定 する	plt.plot(データ列, データ列2, color='brown')
ヒストグラム 描画 し その 色 フクシア 指定 する	plt.hist(データ列, color='fuchsia')
ファイル データ フレーム 読み込む	pd.read_json(filename, orient='records', lines=True)
赤い ポイント マーカー リスト イテラブル 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c='r')
切り下げ 整数 変換 する	math.floor(x)
オプション グラフ 色 ミディアムオーキッド 指定 する	color = 'mediumorchid'
イエロー グリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='yellowgreen')
バイナリ モード ファイル オープン する	open(filepath, mode='rb')
オプション グレー 色 設定 する	color = 'grey'
文字 列 中 正規 表現 マッチ し た 全 文字 列 リスト 変換 する	re.findall(pattern, s)
やわらかい 青色 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='cornflowerblue')
ヒストグラム 描画 し 色 リネン 指定 する	plt.hist(データ列, color='linen')
リスト リスト カラー コード 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
データ フレーム カラム 位 丸める	df[col].round(-3)
オプション ホワイトスモーク 色 使う	color = 'whitesmoke'
要素 両端 キュー 末尾 取り除く	deq.pop()
文字 列 中 大文字 小文字 無視 し 正規 表現 マッチ し た 文字 列 リスト 変換 する	re.findall(pattern, s, flags=re.IGNORECASE)
三つ データ フレーム 横 方向 連結 する	pd.concat([df, df2, df3], axis=1)
以上 以下 どう	-9 <= n <= 9
ヒストグラム 色 グレー 指定 する	plt.hist(データ列, color='gray')
ゼロ 埋め さ れ た 符号 なし ビット 整数 型 配列	np.zeros(要素数, dtype=np.uint8)
ファイル 書き込み できる よう 開く	open(filepath, mode='w', encoding='utf-8')
線 グラフ 色 グリーン イエロー 設定 する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線 グラフ 描画 し その 色 ダークシアグリーン 指定 する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線 グラフ 描画 し その 色 イエロー グリーン 設定 する	plt.plot(データ列, データ列2, color='yellowgreen')
文字 列 数字 どう 判定 する	s.isdigit()
オプション ダーク グリーン 色 用いる	color = 'darkgreen'
オプション 下 三角 マーカー 加える	marker = 'v'
日付 時刻 データ 日付 時刻 データ 時間 差 秒 数 求める	(aDatetime - aDatetime2).total_seconds()//60
エラー なく リスト 文字 列 位置 見る	aList.index(element) if element in aList else -1
リスト データ 列 散布 図 描画 し マーカー 星 する	plt.plot(xdata, ydata, marker='*')
ヒストグラム 描画 し その 色 スカイ ブルー 設定 する	plt.hist(データ列, color='skyblue')
折れ線 グラフ 描画 し 色 貝殻 設定 する	plt.plot(データ列, データ列2, color='seashell')
配列 行 ごと 標準 偏差 計算 する	np.std(aArray, axis=1)
ファイル ファイル 辞書 変換 する	json.load(fin)
等間隔 個 データ 列 分割 する	pd.cut(ds, n)
データ 列 要約 統計 量 求める	ds.describe()
折れ線 グラフ 描画 し その 色 オーキッド 設定 する	plt.plot(データ列, データ列2, color='orchid')
折れ線 グラフ 描画 し 印 クロス 印 する	plt.plot(データ列, データ列2, marker='x')
画面 プロット 用途 設定 する	sns.set(context='notebook')
データ フレーム 列 降順 破壊 的 ソート する	df.sort_values(by='A', ascending=False, inplace=True)
ヒストグラム 色 ゲインズボロ 変更 する	plt.hist(データ列, color='gainsboro')
リスト リスト 散布 図 明るい 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
イテラブル 累加 する	itertools.accumulate(iterable)
データ フレーム 列 パーセンタイル	df[col].quantile(0.75)
ファイル クローズ する	f.close()
ヒストグラム 描画 し その 色 オリーブ 変更 する	plt.hist(データ列, color='olive')
データ フレーム 指定 さ れ た 列 配列 する	df[column].values
二つ 並べ 箱 ひ げ 図 描画 する	plt.boxplot([データ列, データ列2])
中央 値 データ フレーム 中 列 ビン 分割 する	pd.qcut(df[col], 2)
追加 モード ファイル パス 開く	open(filepath, mode='a')
データ 列 ラベル 列 指定 し 積み上げ 横 棒グラフ 描く	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ フレーム 列 整列 し 新しい インデックス 加える	df.sort_values(columns).reset_index()
イテラブル リスト 黒い 淡い プロット する	plt.plot(xdata, ydata, linestyle='muted', color='k')
形式 文字 列 辞書 する	json.loads(jsonString)
折れ線 グラフ 星 マーカー 青色 する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
オプション ミント クリーム 使用 する	color = 'mintcream'
リスト 範囲 柱状 図 用い 描画 する	plt.hist(データ列, range=(start, end))
データ フレーム 表示 する とき ヘッダー 行 左寄せ 設定 する	pd.set_option('colheader_justify', 'left')
ヒストグラム 描画 し その 色 真紅 設定 する	plt.hist(データ列, color='crimson')
折れ線 グラフ 色 パールゴールデンロッド 変更 する	plt.plot(データ列, データ列2, color='palegoldenrod')
データ フレーム 列 ごと グループ 化 し 各 グループ 毎 平均 値 求める	df.groupby(column).mean()
柱状 グラフ 描画 し 区間 数 設定 する	plt.hist(データ列, bins=n)
データ フレーム 行 以降 抽出 する	df[n:]
リスト 数列 散布 図 パステル 調 色 描画 する	plt.plot(xdata, ydata, c='pastel')
データ 列 正規 分布 どの 程度 尖っ いる 見る	ds.skew()
オブジェクト クラス 使う	type(obj)
星 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='*')
ヒストグラム 描画 し その 色 ダーク レッド 指定 する	plt.hist(データ列, color='darkred')
オプション ビスク 使用 する	color = 'bisque'
折れ線 グラフ 青い クロス マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
リスト リスト 散布 図 ポイント マーカー プロット する	plt.plot(xdata, ydata, marker='.')
ヒストグラム 描画 し 色 ゲインズボロ 設定 する	plt.hist(データ列, color='gainsboro')
オプション サーモン 用いる	color = 'salmon'
マッピング キーワード 引数 用い 更新 する	aDict.update(**kwargs)
リスト イテラブル 散布 図 描い マーカー 大 バツ 指定 する	plt.plot(xdata, ydata, marker='X')
データ フレーム 列 未満 行 取り出す	df[df[column] < x]
文字 列 部分 文字 列 区切る	s.split(sub)
グラフ 軸 ラベル 変更 する	plt.xlabel(untitled)
データ フレーム 行 取り出す	df[start:end]
ヒストグラム 描画 し 色 ゴールデン ロッド 設定 する	plt.hist(データ列, color='goldenrod')
データ フレーム カラム 位 丸め 整数 型 する	df[col].round(-3).astype(int)
折れ線 グラフ 青い 左 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
文字 列 文字 列 辞書 順 前	s < s2
オプション バリー ウッド 色 用いる	color = 'burlywood'
オプション 白色 用いる	color = 'white'
タプル 要素 ソート する	sorted(aTuple)
データ フレーム 表示 する とき 列 数 最大 値 セット する	pd.set_option('display.max_columns', n)
ゼロ 埋め さ れ た ブール 型 配列	np.zeros(要素数, dtype=np.int32)
大きく かつ 小さい 確認 する	n < n2 and n2 < n3
論文 プロット 用途 設定 する	sns.set(context='paper')
グラフ 目盛り 線 加える	plt.grid(True)
オプション サドル ブラウン 色 使用 する	color = 'saddlebrown'
現在 処理 中 例外 情報	sys.exc_info()
オプション ペールグリーン 使用 する	color = 'palegreen'
ライトゴールドロディイエロー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
データ 列 値 まとめ 置き換える	ds.replace(ValueMap)
パラメータ 近づく とき 数式 極限 値 求める	sympy.limit(e, z, 0)
データ フレーム カラム 何 分 調べる	df[col].dt.minute
環境 判定 する	sys.platform.startswith('win32')
線 グラフ 色 ゴースト ホワイト 指定 する	plt.plot(データ列, データ列2, color='ghostwhite')
散布 図 プロット する	plt.scatter(xdata, ydata)
データ フレーム 平均 値	df.mean()
ヒストグラム 描画 し 色 シーグリーン セット する	plt.hist(データ列, color='seagreen')
ヒストグラム 描画 し その 色 ナバホホワイト 指定 する	plt.hist(データ列, color='navajowhite')
行列 行 選択 する	aArray[行番号]
文字 列 中 複数 行 対応 パターン 全て マッチ 使う	re.findall(pattern, s, flags=re.MULTILINE)
濃い イテラブル ヒストグラム 描画 する	plt.hist(xdata, color='deep')
ユークリッド 距離	math.dist(point, point2)
ベクトル スカラー 倍	aArray * n
ヒストグラム 描画 し その 色 紺碧 指定 する	plt.hist(データ列, color='azure')
タプル 中 最大 値	max(aTuple)
ダーク カーキ ヒストグラム 色 設定 する	plt.hist(データ列, color='darkkhaki')
データ フレーム リスト カラム 未 入力 値 前 値 指定 する	df[aList].fillna(method='ffill')
オプション グラフ 色 ロージーブラウン 設定 する	color = 'rosybrown'
折れ線 グラフ 描画 し その 色 ダーク サーモン 設定 する	plt.plot(データ列, データ列2, color='darksalmon')
オプション ポイント マーカー 使う	marker = '.'
実数 有限	math.isfinite(x)
オプション グリーン 色 使う	color = 'green'
グラフ 点線 付ける	plt.axhline(y=0, linestyle='dotted')
イテラブル リスト 散布 図 色 差別 ない 色 描画 する	plt.plot(xdata, ydata, c='colorblind')
つ データ フレーム 異なる カラム キー 左 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
両端 キュー 上限	deq.maxlen
折れ線 グラフ マーカー 黒く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線 グラフ 描画 し その 色 ホワイトスモーク 指定 する	plt.plot(データ列, データ列2, color='whitesmoke')
行列 逆 行列 求める	np.linalg.inv(aArray)
大 バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='X')
偽	False
カウンタ 各 要素 カウント 列挙 する	aCounter.elements()
青い 濃い グラフ 描く	plt.plot(xdata, ydata, linestyle='deep', color='b')
線 グラフ 描画 し 色 ブルー バイオレット 設定 する	plt.plot(データ列, データ列2, color='blueviolet')
黒色 バツ マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='x', c='k')
ヒストグラム 描画 する	plt.hist(データ列)
集合 空 で ない 調べる	len(aSet) != 0
文字 列 文字 列 グラフ 補足 入れる	plt.legend([s, s2])
濃い 折れ線 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
リスト リスト 散布 図 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='x')
折れ線 グラフ 描画 し その 色 小麦色 設定 する	plt.plot(データ列, データ列2, color='wheat')
入力 ストリーム 全部 読み込む	f.read()
折れ線 グラフ 丸 マーカー 黄色く する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
ヒストグラム 色 シーグリーン 設定 する	plt.hist(データ列, color='seagreen')
ケース 無視 し 正規 表現 文字 列 分割 する	re.split(pattern, s, flags=re.IGNORECASE)
ヒストグラム 描画 し その 色 ライト コーラル セット する	plt.hist(データ列, color='lightcoral')
折れ線 グラフ マーカー 赤色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
配列 個 分割 し ラベル つける	pd.cut(aArray, n, labels=names)
オプション グラフ 色 インディアン レッド 設定 する	color = 'indianred'
紺色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkblue')
実数 進 対数 算出 する	math.log(x, k)
重 見やすく 淡い 色 使っ 散布 図 描く	plt.plot(xdata, ydata, c='muted', alpha=0.5)
キュー 中 値 数 数える	deq.count(element)
グラフ 中 縦 軸 軸 名 指定 する	plt.ylabel(untitled)
タイムスタンプデータ 日	aDatetime.day
ヒストグラム 描画 し 色 真紅 変更 する	plt.hist(データ列, color='crimson')
リスト リスト 散布 図 描画 し 文字 列 補足 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
散布 図 赤い マーカー 使う	plt.plot(xdata, ydata, marker='v', c='r')
文字 列 先頭 正規 表現 複数 行 対応 マッチ する 見る	re.match(pattern, s, flags=re.MULTILINE)
データ フレーム 形式 ファイル 保存 する	df.to_csv(filename)
オプション フォレストグリーン 色 使う	color = 'forestgreen'
データ フレーム 列 まとめ 置き換える	df[col].replace(ValueMap)
ミディアムブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mediumblue')
日付 データ タプル 変換 する	aDate.timetuple()
オプション オレンジ グラフ 色 設定 する	color = 'orange'
ヒストグラム 描画 し 色 パウダー ブルー 指定 する	plt.hist(データ列, color='powderblue')
データ フレーム 列 欠損 値 モード 埋める	df[col].fillna(df[col].mode().iloc[0])
ふたつ 集合 集合 交わり 持た ない	aSet.isdisjoint(aSet2)
データ フレーム 相関 行列 ヒートマップ グラフ 化 する	sns.heatmap(df.corr())
ヒストグラム 色 ピンク 変更 する	plt.hist(データ列, color='pink')
オプション ゴールド 色 使う	color = 'gold'
最後 エントリ マッピング ポップ する	aDict.popitem()
オプション 真紅 使う	color = 'crimson'
赤い ダイアモンドマーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='D', c='r')
タイムスタンプデータ 分 分 加算 する	aDatetime + datetime.timedelta(minutes=n)
未満 または 以上 調べる	n < n2 or n >= n3
グラフ 見た目 綺麗 する	import seaborn as sns
オプション グラフ 色 サンディーブラウン 指定 する	color = 'sandybrown'
オブジェクト 集合 調べる	isinstance(obj, set)
折れ線 グラフ 線 幅 星 マーカー 描画 する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
ファイル 追加 ストリーム オープン し する	f = open(filepath, mode='a')
データ 列 欠損 値 モード 埋める	ds.fillna(ds.mode().iloc[0])
パステル 調 色 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, c='pastel')
データ フレーム 未 入力 値 中央 値 設定 する	df.fillna(df.median())
ヒストグラム 描画 し その 色 変更 する	plt.hist(データ列, color='darkslategrey')
カウンタ トップ リスト し 得る	aCounter.most_common(k)
グリーン イエロー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='greenyellow')
データ フレーム 列 名 リスト グループ 化 する	df.groupby(columns)
値 両端 キュー 右 追加 する	deq.append(element)
データ フレーム リスト カラム 位 丸める	df[aList].round(-2)
散布 図 大 バツ マーカー 使う	plt.plot(xdata, ydata, marker='X')
全 要素 初期 化 さ れ た 三 二 ビット 整数 型 行列 作る	np.zeros(行数, 列数, dtype=np.int16)
調べる	n == n2
配列 イテラブル 散布 図 黒色 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c='k')
折れ線 グラフ 星 マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
列 データ フレーム 昇順 ソート する	df.sort_values(by=column, ascending=True)
イテラブル 長 さ 順列 得る	itertools.permutations(iterable, n)
値 黒色 表示 する	print(f'\033[30m{value}\033[0m')
数列 横 軸 指定 し リスト 変化 描画 する	plt.plot(range(len(xdata)), xdata)
ヒストグラム 描画 し その 色 ライトスチールブルー 設定 する	plt.hist(データ列, color='lightsteelblue')
データ フレーム リスト カラム 正規 分布 どれ 歪ん いる 確認 する	df[aList].kurt()
日付 時刻 データ 時間 前 戻す	aDatetime - datetime.timedelta(hours=n)
ファイル パス ディレクトリ 名	os.path.dirname(filepath)
オブジェクト 辞書 調べる	isinstance(obj, dict)
折れ線 グラフ 大 バツ 印 赤く する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
ヒストグラム 描画 し その 色 ダーク カーキ セット する	plt.hist(データ列, color='darkkhaki')
黒色 ポイント マーカー イテラブル リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c='k')
データ フレーム 降順 列 名 リスト 並べ 直す	df.sort_values(by=column, ascending=False)
データ フレーム 複数 列 用い ソート し 更新 する	df.sort_values(by=column, inplace=True)
パステル 調 色 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, c='pastel')
カラー コード 左 三 角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='<', c=rgb)
オブジェクト リスト 要素 で ない	element not in aList
現在 日付 時刻	datetime.datetime.now()
一 桁 正 数 調べる	0 <= x <= 9
要素 セット 要素 含ま れる 調べる	element in aSet
個 等量 データ フレーム 中 列 分割 する	pd.qcut(df[col], n)
進 数字 全部 使う	string.octdigits
ヒストグラム 描画 し 色 ネイビー 設定 する	plt.hist(データ列, color='navy')
文字 列 改行 分割 し 文字 列 リスト 変換 する	s.splitlines()
リスト リスト 散布 図 描画 し マーカー 色 パステル 調 の 指定 する	plt.plot(xdata, ydata, c='pastel')
データ フレーム 列 並べ 下 方 件 取り出す	df.sort_values(columns).tail(n)
データ フレーム リスト カラム 百 位 丸める	df[aList].round(-2)
文字 列 部分 文字 列 全て 除く	s.replace(sub, '')
データ フレーム 各 列 毎 グループ 分け し 文字 列 名前 グループ 使う	df.groupby(column).get_group(s)
データ 列 箱 髭 図 使っ 可視 化 する	plt.boxplot(データ列)
淡い 茶色 色 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='tan')
ヒストグラム 色 シルバー する	plt.hist(データ列, color='silver')
小さい 調べる	n < n2
文字 列 中 タブ 文字 個 空白 置き換える	s.expandtabs(tabsize=n)
折れ線 グラフ ダイアモンドマーカー 緑色 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
大 バツ マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='X')
イテラブル イテラブル 続け た イテラブル	itertools.chain(iterable, iterable2)
イテラブル リスト 黒色 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
整数 八 進数 表現 変換 する	oct(n)
濃い 色 リスト リスト 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
オプション ゴールデン ロッド グラフ 色 変更 する	color = 'goldenrod'
データ フレーム 型 リスト データ 型 列 除外 する	df.select_dtypes(exclude=typeList)
変数 黒色 表示 できる 文字 列 変換 する	f'\033[30m{value}\033[0m'
列 データ フレーム ソート する	df.sort_values(by=column)
オプション グラフ 色 コーンズシルク 設定 する	color = 'cornsilk'
折れ線 グラフ 描画 し その 色 ミディアムオーキッド する	plt.plot(データ列, データ列2, color='mediumorchid')
一 点 鎖線 グラフ 描画 する	plt.plot(データ列, データ列2, linestyle='dashbot')
組 最後 要素 取り除く	aTuple[:-n]
タプル 形式 ファイル 保存 する	json.dump(aDict, fout, ensure_ascii=False)
折れ線 グラフ バツ マーカー 赤色 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
リスト リスト 色 差別 ない グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
逆 正接 求める	math.atan(x)
データ フレーム 中 列 列 重複 削除 する	df.drop_duplicates(subset=column)
データ 列 リスト 折れ線 描画 し 色 文字 列 設定 する	plt.plot(xdata, ydata, color=s)
オプション ミディアムスプリンググリーン 使う	color = 'mediumspringgreen'
配列 配列 パステル 調 の 描画 し 色 黒く する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
既存 ベクトル 元 し 全 要素 初期 値 配列	np.full_like(aArray, 初期値)
ブール 型 ゼロ 埋め し た 行列 作る	np.zeros(要素数, dtype=np.int32)
オブジェクト デバッグ 向け 文字 列 変換 する	repr(obj)
ダーク カーキ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkkhaki')
以上 以下	-9 <= x <= 9
データ フレーム カラム 曜日 数	df[col].dt.dayofweek
配列 ベース 全 要素 ベクトル	np.ones_like(aArray)
オプション グラフ 色 フクシア セット する	color = 'fuchsia'
ファイル 書き込み モード オープン し する	f = open(filepath, mode='w')
データ フレーム 列 カテゴリ データ 変換 する	df[col].astype(object)
ヒストグラム 色 ダーク シアン 設定 する	plt.hist(データ列, color='darkcyan')
整数 八 進数 文字 列 変換 する	oct(n)[2:]
黒い 右 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c='k')
折れ線 グラフ マーカー 大き さ 指定 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
書式 引数 フォーマット する	formatText.format(*args)
データ 列 何 日 見る	ds.dt.day
セット すべて 要素 別 セット 含ま れる	aSet.issubset(aSet2)
文字 列 右側 空白 消す	s.rstrip(' ')
カラム 中 文字 列 ある どう	ds.isin([value])
折れ線 グラフ 描画 し 色 耐火 レンガ 変更 する	plt.plot(データ列, データ列2, color='firebrick')
ヒストグラム 描画 し その 色 マルーン 設定 する	plt.hist(データ列, color='maroon')
ヒストグラム 描画 し その 色 デピンク する	plt.hist(データ列, color='deeppink')
データ フレーム カラム 最大 値 補う	df[col].fillna(df[col].max())
文字 列 最後 部分 文字 列 二分 し 最初 文字 列 使う	s.rpartition(sub)[0]
赤色 四角 マーカー リスト リスト 散布 図 描く	plt.plot(xdata, ydata, marker='s', c='r')
リスト リスト 散布 図 菱形 マーカー 描く	plt.plot(xdata, ydata, marker='D')
折れ線 グラフ 色 アイボリー 設定 する	plt.plot(データ列, データ列2, color='ivory')
列 列 データ フレーム ソート し 先頭 する	df.sort_values(by=['A', 'B'], na_position='first')
日付 データ 年数	aDate.year
ベクトル 分散 計算 する	np.var(aArray)
オプション カデット ブルー 色 設定 する	color = 'cadetblue'
イテラブル 数列 色 差別 ない グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
折れ線 グラフ ダイアモンド 印 青く する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線 グラフ マーカー 大き さ 変更 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
カラム 中 欠損 値 数 数える	ds.isna().sum()
文字 列 中 ひとつ 非 アルファベット 含ま れる	any(not c.isalpha() for c in s)
文字 列 内 空白 ある どう 調べる	any(c.isspace() for c in s)
青色 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
二つ 辞書 チェーン する	collections.ChainMap(aDict, aDict2)
データ フレーム リスト カラム 値 欠損 値	df[aList].isna()
散布 図 黒い 右 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='>', c='k')
オプション グラフ 色 ミディアムパープル 設定 する	color = 'mediumpurple'
今日 何 日 知る	datetime.datetime.today().day
ファイル 全て シート 読み込む	pd.read_excel(filename, sheet_name=None)
黒い バツ マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='x', c='k')
濃い パレット グラフ 描画 使用 する	sns.set(pallete='deep')
データ フレーム 表示 する とき データ フレーム 列 表示 可能 な よう する	pd.set_option('display.max_columns', n)
タン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='tan')
線 グラフ 描画 し 色 シーグリーン 設定 する	plt.plot(データ列, データ列2, color='seagreen')
淡い 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
折れ線 グラフ マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
オプション グラフ 色 青 設定 する	color = 'blue'
ライト サーモン 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightsalmon')
変数 数式 微分 行う	sympy.diff(e, z)
オプション グラフ 色 ライトスレイグレー 設定 する	color = 'lightslategray'
かけ た 値 代入 する	n *= n2
折れ線 グラフ 描画 し その 色 シルバー 設定 する	plt.plot(データ列, データ列2, color='silver')
パールバイオレットレッド ヒストグラム 色 設定 する	plt.hist(データ列, color='palevioletred')
二つ カラム データ フレーム グループ 化 し 要約 統計 量 求める	df.groupby(['A', 'B']).describe()
つ 数値 文字 列 区切っ プリント する	print(value, value2, sep=s)
リスト 最後 番目 以前 要素 取り出す	aList[:-n]
ヒストグラム 色 マルーン 指定 する	plt.hist(データ列, color='maroon')
データ フレーム 列 破壊 的 ソート する	df.sort_values(by=column, inplace=True)
黒い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
ひとつ 置き タプル 取り出す	aTuple[::2]
折れ線 グラフ 大き さ 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
データ フレーム リスト カラム 中 存在 する 文字 列 数 数える	df[aList].isin([value]).sum()
オプション 右 三 角 マーカー 使う	marker = '>'
データ フレーム カラム 最大 値 増やす	df[col].fillna(df[col].max())
サンディーブラウン ヒストグラム 色 指定 する	plt.hist(データ列, color='sandybrown')
折れ線 グラフ 描画 し その 色 設定 する	plt.plot(データ列, データ列2, color='darkslategrey')
項目 名 辞書 存在 する	key not in aDict
カラム 位 丸める	ds.round(-1)
ヒストグラム 色 白 設定 する	plt.hist(データ列, color='white')
ファイル パス 追加 モード オープン する	open(filepath, mode='a')
カウンタ	collections.Counter()
ヒストグラム 描画 し その 色 ライト グレー 変更 する	plt.hist(データ列, color='lightgrey')
常用 対数 求める	math.log10(x)
オプション 文字 コード 指定 する	encoding = 'utf-8'
データ 列 中 文字 列 文字 列 いくつ ある カウント する	ds.isin([value, value2]).sum()
リスト 配列 折れ線 グラフ 文字 列 色 描画 する	plt.plot(xdata, ydata, color=s)
データ フレーム 二つ 列 値 グループ 化 し 要約 統計 量 求める	df.groupby(['A', 'B']).describe()
赤い 右 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c='r')
表 データ イン ポート する	import pandas as pd
辞書 キー 要素 変更 する	aDict[key] = element
黒い 四角 マーカー リスト データ 列 散布 図 描く	plt.plot(xdata, ydata, marker='s', c='k')
タプル 項目 名 値	aDict.get(key)
ファイル パス 絶対 パス 変換 する	os.path.abspath(filepath)
データ フレーム 複数 列 用い 破壊 的 ソート する	df.sort_values(by=column, inplace=True)
データ フレーム カラム 歪 度	df[col].kurt()
折れ線 グラフ 線 幅 右 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
データ フレーム ジョイン する	pd.merge(df, df2)
オプション 標準 出力 使う	file = sys.stdout
部分 文字 列 文字 列 最後 探す	s.rfind(sub)
オプション 星 マーカー 描画 する	marker = '*'
整数 十 六 進 表現	hex(n)
整数 符号 付き 長 さ バイナリ 変換 する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
タプル 集合	set(iterable)
散布 図 赤い 丸 マーカー 用いる	plt.plot(xdata, ydata, marker='o', c='r')
散布 図 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<')
イテラブル リスト カラー コード 濃い グラフ プロット する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
オプション グラフ 色 ミディアムスプリンググリーン 変更 する	color = 'mediumspringgreen'
シーケンス 累加 する	itertools.accumulate(iterable)
配列 リスト 散布 図 淡い 色 プロット する	plt.plot(xdata, ydata, c='muted')
リスト リスト カラー コード 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
折れ線 グラフ 四角 印 青く する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
文字 列 最後 部分 文字 列 分け た 場合 後半 文字 列 見る	s.rpartition(sub)[-1]
プロット 横 軸 軸 ラベル 設定 する	plt.xlabel(untitled)
ヒストグラム 描画 し その 色 アリスブルー 設定 する	plt.hist(データ列, color='aliceblue')
集合 イテラブル 要素 全て 追加 する	aSet.update(iterable)
組 平均 値 求める	sum(aTuple)/len(aTuple)
データ フレーム 各 列 間 相関 係数 計算 する	df.corr()
数列 リスト 用い 濃い 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
オプション ローン グリーン グラフ 色 設定 する	color = 'lawngreen'
データ 列 数列 散布 図 描き マーカー 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, c='pastel')
データ 列 折れ線 グラフ 描画 し 印 星 印 する	plt.plot(データ列, データ列2, marker='*')
データ フレーム ファイル 書き込む	df.to_excel(filename)
リスト リスト 折れ線 グラフ ラベル付け し 描画 する	plt.plot(xdata, ydata, label=untitled)
折れ線 グラフ 描画 し その 色 ライム グリーン 設定 する	plt.plot(データ列, データ列2, color='limegreen')
黒色 大 バツ マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='X', c='k')
文字 列 部分 文字 列 終わる	s.endswith(sub)
データ フレーム カラム 中 いくつ ある カウント する	df[col].isna().sum()
ヒストグラム 描画 し 色 スプリング グリーン 設定 する	plt.hist(データ列, color='springgreen')
番目 要素 ポップ する	aList.pop(n)
列 データ フレーム グループ 化 し それぞれ グループ ごと 最大 値 求める	df.groupby(column).max()
双方向 キュー 空 で ない 調べる	len(deq) != 0
データ フレーム それぞれ グループ ごと 個数	df.groupby(column).count()
ヒストグラム 描画 し その 色 コーンズシルク 設定 する	plt.hist(データ列, color='cornsilk')
実数 仮数 部	math.frexp(x)[0]
サンディーブラウン 色 ヒストグラム 描画 する	plt.hist(データ列, color='sandybrown')
リスト 末尾 要素 取り除く	aList[:-n]
リスト 配列 暗い 折れ線 プロット し その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
データ フレーム 指定 さ れ た 列	df[column]
データ フレーム 中 文字 列 ある	df.isin([value])
分子 割る 分母	fractions.Fraction(分子, 分母)
プログラム 異常 停止 する	sys.exit(1)
データ フレーム カラム 中 日付 データ 日付 データ 存在 する どう 確認 する	df[col].isin([value, value2])
データ 列 リスト 散布 図 赤い 左 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='<', c='r')
イテラブル それぞれ 関数 フィルタ する	map(func, iterable)
折れ線 グラフ 四角 マーカー 黄色く する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
文字 列 シアン プリント する	print(f'\033[36m{value}\033[0m')
リスト 配列 散布 図 描き 四角 マーカー 色 カラー コード セット する	plt.plot(xdata, ydata, marker='s', c=rgb)
データ 列 位 丸め 整数 する	ds.round(-1).astype(int)
折れ線 グラフ 描画 し 色 シアン 指定 する	plt.plot(データ列, データ列2, color='cyan')
線 グラフ 描画 し その 色 ダーク シアン 設定 する	plt.plot(データ列, データ列2, color='darkcyan')
どう 調べる	n == n2
リスト リスト 青い 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
リスト イテラブル 散布 図 淡い 色 プロット する	plt.plot(xdata, ydata, c='muted')
文字 列 中 部分 文字 列 存在 し ない	sub not in s
範囲 ヒストグラム 用い データ 列 描画 する	plt.hist(データ列, range=(start, end))
自然 数 個 個 取り出し た とき 順列 総数	math.perm(n, k)
データ フレーム カラム 平均 値	df[col].mean()
データ フレーム 文字 列 欠損 値 変換 する	df.replace(s, np.nan)
ヒストグラム 色 フォレストグリーン 設定 する	plt.hist(データ列, color='forestgreen')
淡い グラフ 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
リスト リスト 散布 図 右 三 角 マーカー プロット する	plt.plot(xdata, ydata, marker='>')
紺色 ヒストグラム 描画 する	plt.hist(データ列, color='darkblue')
オプション 右 三 角 印 使う	marker = '>'
タプル リスト 変換 する	list(aTuple)
文字 列 下線 付き 化 する	f'\033[4m{value}\033[0m'
グローバル 変数 一覧	globals()
データ 列 配列 明るい グラフ プロット し その 色 青色 設定 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
データ ラベル 文字 列 文字 列 表示 する	plt.legend([s, s2])
ヒストグラム 描画 し その 色 茶色 変更 する	plt.hist(データ列, color='brown')
日付 時刻 データ 日 分 減算 する	aDatetime - datetime.timedelta(days=n)
オプション ライト ブルー 用いる	color = 'lightblue'
数列 リスト 破線 グラフ 描画 し 色 淡い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
標準 エラー 使う	sys.stderr
折れ線 グラフ 描画 し マーカー 印 する	plt.plot(データ列, データ列2, marker='^')
パウダー ブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='powderblue')
折れ線 グラフ 描画 し その 色 ロージーブラウン 設定 する	plt.plot(データ列, データ列2, color='rosybrown')
実数 以下 最大 整数	math.floor(x)
データ フレーム 複数 列 で 降順 並べる	df.sort_values(by=column, ascending=False)
黒い 上 三 角 マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='^', c='k')
赤い 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
横 方向 二つ データ フレーム 連結 する	pd.concat([df, df2], axis=1)
折れ線 グラフ 描画 し その 色 ライム 設定 する	plt.plot(データ列, データ列2, color='lime')
リスト イテラブル 散布 図 赤い 左 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='<', c='r')
改行 取り除い 行 標準 入力 読む	sys.stdin.readline().rstrip()
淡い 色 赤 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
色 差別 ない リスト ヒストグラム プロット する	plt.hist(xdata, color='colorblind')
変数 シアン する	f'\033[36m{value}\033[0m'
折れ線 グラフ 色 ミント クリーム 設定 する	plt.plot(データ列, データ列2, color='mintcream')
文字 列 タプル 含ま れ ない	element not in aTuple
データ 列 等間隔 個 ビン 分割 する	pd.cut(ds, n)
データ 列 値 正規 表現 まとめ 変更 する	ds.replace(pattern, repl, regex=True)
データ フレーム 最小 値 埋める	df.fillna(df.min())
データ 列 分	ds.dt.minute
シャルトリューズ 色 ヒストグラム 描画 する	plt.hist(データ列, color='chartreuse')
オプション グラフ 色 グレー 指定 する	color = 'gray'
カウンタ シーケンス 更新 する	aCounter.update(iterable)
マッピング 浅く 複製 する	dict(aDict)
オプション 青 紫色 用いる	color = 'violet'
プロット パレット 指定 する	sns.set(pallete=palleteName)
ヒストグラム 描画 し 色 ダークマゼンタ セット する	plt.hist(データ列, color='darkmagenta')
ファイル パス 区切り 記号	os.sep
オプション ミディアムバイオレットレッド グラフ 色 設定 する	color = 'mediumvioletred'
限定 正規 表現 文字 列 分ける	re.split(pattern, s, flags=re.ASCI)
線 グラフ 描画 し その 色 シーグリーン 指定 する	plt.plot(データ列, データ列2, color='seagreen')
時間 用いる	import time
パステル 調 グラフ 色 赤 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
カテゴリー データ 出現 頻度 順 ソート する	df['A'].value_counts().sort_index().index
プロット 描画 淡い 色 使う	sns.set(pallete='muted')
データ フレーム カラム 日付 データ 変換 し データ フレーム インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
ヒストグラム 描画 し その 色 クリムゾン 変更 する	plt.hist(データ列, color='crimson')
標準 入力 使用 する	sys.stdin
暗い 色 ヒストグラム 配列 描く	plt.hist(xdata, color='dark')
ヒストグラム 色 ライト コーラル 設定 する	plt.hist(データ列, color='lightcoral')
ヒストグラム 色 トマト 設定 する	plt.hist(データ列, color='tomato')
ホット ピンク色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='hotpink')
小数点 以下 桁 ファイル データ フレーム 保存 する	df.to_csv(filename, float_format='%.3f')
データ フレーム ファイル 書き込む	df.to_csv(filename)
散布 図 黒い 左 三 角 マーカー 使用 する	plt.plot(xdata, ydata, marker='<', c='k')
リスト リスト 明るい グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
文字 列 リスト 含ま れる	element in aList
カラー コード 左 三 角 マーカー リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c=rgb)
折れ線 グラフ 印 使う	plt.plot(データ列, データ列2, marker='v')
散布 図 赤い 右 三 角 マーカー 使っ 描画 する	plt.plot(xdata, ydata, marker='>', c='r')
黒い 右 三 角 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c='k')
折れ線 グラフ 描画 し その 色 ディムグレー 設定 する	plt.plot(データ列, データ列2, color='dimgray')
双方向 キュー 空か 調べる	len(deq) == 0
黒い 星 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c='k')
赤い 大 バツ マーカー 散布 図 使用 する	plt.plot(xdata, ydata, marker='X', c='r')
複数 列 データ フレーム 小さい 順 破壊 的 ソート する	df.sort_values(by=column, ascending=True, inplace=True)
データ フレーム 指定 さ れ た 二つ 列 抽出 する	df[[column, column2]]
ダークスレートブルー ヒストグラム 色 設定 する	plt.hist(データ列, color='darkslateblue')
グラフ フォント 日本語 セット する	sns.set(font='IPAexGothic')
ラジアン 角度	math.degrees(x)
日付 データ 時間 分 加算 する	aDate + datetime.timedelta(hours=n)
ヒストグラム 描画 し その 色 ビスク 設定 する	plt.hist(データ列, color='bisque')
バリー ウッド ヒストグラム 色 設定 する	plt.hist(データ列, color='burlywood')
ヒストグラム 描画 し その 色 設定 する	plt.hist(データ列, color='darkslategrey')
文字 コード 文字 変換 する	chr(unicode)
値 青色 する	f'\033[34m{value}\033[0m'
配列 数列 散布 図 描画 し ポイント マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='.', c=rgb)
イテラブル リスト 散布 図 描画 し マーカー 右 三 角 設定 する	plt.plot(xdata, ydata, marker='>')
ヘッダー 行 右寄せ 設定 する	pd.set_option('colheader_justify', 'right')
カラー コード 大 バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='X', c=rgb)
文字 列 文字 列 区切っ 出力 する	print(value, value2, sep=s)
折れ線 グラフ 描画 し 色 フローラルホワイト 設定 する	plt.plot(データ列, データ列2, color='floralwhite')
プログラム 正しく 止める	sys.exit(0)
イテラブル スタック 作る	collections.deque(iterable)
線 グラフ 色 パパイヤウィップ する	plt.plot(データ列, データ列2, color='papayawhip')
右 三 角 マーカー 用い 散布 図 描く	plt.plot(xdata, ydata, marker='>')
オプション グラフ 色 ミディアムアクアマリン 設定 する	color = 'mediumaquamarine'
要素 ひとつ 組 作る	(element,)
部分 文字 列 文字 列 開始 位置 以降 始まる 調べる	s.startswith(sub, start)
値 表示 する	print(value)
オプション 印 ダイアモンド 変更 する	marker = 'D'
リスト リスト 濃い 色 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
グラフ デフォルト いい 感じ 設定 する	sns.set()
標準 出力 パイプ	not sys.stdout.isatty()
パラメータ 名前 付き タプル インスタンス 化 する	C._make(パラメータ)
本日 金曜日	datetime.datetime.today().weekday() == 4
ピンク色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='deeppink')
オレンジ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='orange')
両端 キュー 先頭 要素 追加 する	deq.appendleft(element)
ゲインズボロ 色 ヒストグラム 描画 する	plt.hist(データ列, color='gainsboro')
線 グラフ 色 ダークシアグリーン 設定 する	plt.plot(データ列, データ列2, color='darkseagreen')
数式 平方根 求める	sympy.sqrt(e)
データ フレーム ヘッダ 付け ず ファイル 書き込む	df.to_csv(filename, header=None)
黒い 下 三角 マーカー 配列 リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='v', c='k')
分の 一 する	n /= n2
実数 正弦	math.sin(x)
ロード さ れ た モジュール 一覧	sys.modules
線 グラフ 描画 し 色 青 紫 設定 する	plt.plot(データ列, データ列2, color='violet')
要素 セット メンバー 含ま れ ない 調べる	element not in aSet
本日 月 使う	datetime.datetime.today().month
タプル 要素 数	len(aTuple)
配列 リスト 散布 図 濃い 色 描く	plt.plot(xdata, ydata, c='deep')
オプション ネイビー 色 使用 する	color = 'navy'
文字 列 部分 文字 列 分け た とき 後半 文字 列 使う	s.partition(sub)[-1]
実数	math.cosh(x)
データ 列 十 位 丸め 整数 する	ds.round(-1).astype(int)
ヒストグラム 描画 し その 色 ディムグレー 設定 する	plt.hist(データ列, color='dimgrey')
データ フレーム 数値 一 度 小数点 以下 桁 四捨五入 する	df.round(n)
データ 列 何 分 見る	ds.dt.minute
グラフ 色 淡く する	sns.set(pallete='muted')
ヒートマップ データ フレーム リスト 指定 さ れ た カラム 相関 行列 描画 する	sns.heatmap(df[aList].corr())
度数 分布 図 ビン 数 変更 する	plt.hist(データ列, bins=n)
配列 配列 散布 図 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<')
オプション 未 入力 値 無視 し ない	dropna = True
折れ線 グラフ 大き さ 丸 マーカー 描画 する	plt.plot(データ列, データ列2, marker='o', markersize=n)
スピアマン 相関 係数 データ フレーム リスト 列 相関 行列	df[aList].corr(method='spearman')
オプション 色 青 紫 設定 する	color = 'violet'
オプション 含め ない	dropna = True
ヒストグラム 描画 し その 色 アイボリー セット する	plt.hist(データ列, color='ivory')
リスト 多重 集合 作る	collections.Counter(iterable)
リスト 紫色 表示 できる 文字 列 変換 する	f'\033[35m{value}\033[0m'
折れ線 グラフ 描画 し 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgray')
データ フレーム カラム 欠損 値 最大 値 設定 する	df[col].fillna(df[col].max())
リスト 最後 要素	aList[-1]
折れ線 グラフ 描画 し その 色 ペルー 設定 する	plt.plot(データ列, データ列2, color='peru')
ヒストグラム 描画 し その 色 貝殻 設定 する	plt.hist(データ列, color='seashell')
データ フレーム 番目 列 除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
折れ線 グラフ 色 グリーン する	plt.plot(データ列, データ列2, color='green')
リスト リスト 色 差別 ない グラフ 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
文字 列 緑色 する	f'\033[32m{value}\033[0m'
オプション ライトスカイブルー グラフ 色 変更 する	color = 'lightskyblue'
赤い パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リスト 番目 要素 使う	aList[n]
オプション グラフ 色 ミディアムブルー 変更 する	color = 'mediumblue'
データ 列 中 いくつ ある 求める	ds.isna().sum()
事前 正規 表現 コンパイル する	re.compile(pattern)
オブジェクト 同じ どう 調べる	obj is obj2
折れ線 グラフ 色 ゴールド 変更 する	plt.plot(データ列, データ列2, color='gold')
折れ線 グラフ 描画 し その 色 耐火 レンガ 設定 する	plt.plot(データ列, データ列2, color='firebrick')
整数 進 表現 する	hex(n)
つ タプル チェーン する	collections.ChainMap(aDict, aDict2)
データ フレーム 関数 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(関数)]
辞書 キー その 値 列挙 する	aDict.items()
データ フレーム 重複 し た 行 残さ ず 削除 する	df.drop_duplicates(keep=False)
データ フレーム グループ 化 し それぞれ 列 平均 値 計算 する	df.groupby(column)[column2].mean()
オプション グラフ 色 ロイヤル ブルー 設定 する	color = 'royalblue'
データ フレーム 複数 列 破壊 的 ソート する	df.sort_values(by=column, inplace=True)
濃い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
折れ線 グラフ 描画 し その 色 ドジャーブルー 指定 する	plt.plot(データ列, データ列2, color='dodgerblue')
散布 図 丸 マーカー 使う	plt.plot(xdata, ydata, marker='o')
モカシン ヒストグラム 色 設定 する	plt.hist(データ列, color='moccasin')
折れ線 グラフ 色 フォレストグリーン 設定 する	plt.plot(データ列, データ列2, color='forestgreen')
データ フレーム 小さい 順 複数 列 並べ 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
折れ線 グラフ 描画 し その 色 ダーク オリーブ グリーン 指定 する	plt.plot(データ列, データ列2, color='darkolivegreen')
本日 日付 時刻	datetime.datetime.now()
折れ線 グラフ マーカー 黒く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
リスト データ 列 散布 図 カラー コード ポイント マーカー プロット する	plt.plot(xdata, ydata, marker='.', c=rgb)
ヒストグラム 描画 し その 色 ペルー セット する	plt.hist(データ列, color='peru')
データ フレーム 列 インデックス 指定 する	df.set_index(column)
文字 列 カンマ 区切っ 列挙 する	s.split(',')
データ フレーム 中 列 個 分割 する	pd.cut(df[col], n)
データ フレーム インデックス 名 一覧	df.index
オプション ライト シアン グラフ 色 設定 する	color = 'lightcyan'
カウンタ 全 カウント	aCounter.total()
リスト リスト 追加 し 拡張 する	aList.extend(aList2)
オプション グラフ 色 ライトスカイブルー 設定 する	color = 'lightskyblue'
赤色 淡い グラフ プロット する	plt.plot(xdata, ydata, linestyle='muted', color='r')
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 最小 値 求める	df.groupby([column, column2], as_index=False).min()
カウンタ 最 頻出 な 項目	aCounter.most_common()[0]
折れ線 グラフ 色 モカシン 設定 する	plt.plot(データ列, データ列2, color='moccasin')
ファイル パス バイナリ モード オープン する	open(filepath, mode='rb')
散布 図 黒色 ポイント マーカー 使用 する	plt.plot(xdata, ydata, marker='.', c='k')
文字 列 回 繰り返す イテラブル	itertools.repeat(element, n)
論文 グラフ 目的 設定 する	sns.set(context='paper')
ミディアムアクアマリン ヒストグラム 色 セット する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラム 描画 し その 色 スレート ブルー 設定 する	plt.hist(データ列, color='slateblue')
データ フレーム 二つ 列 整列 し 更新 する	df.sort_values(by=['A', 'B'], inplace=True)
ふたつ 集合 積 集合	aSet.intersection(aSet2)
列 と列 キー し 二つ データ フレーム ジョイン する	pd.merge(df, df2, left_on='A', right_on='B')
データ 列 ラベル 指定 し 棒 描画 する	plt.bar(ラベル列, データ列)
二つ 集合 対称 差 集合	aSet.symmetric_difference(aSet2)
折れ線 グラフ 描画 し その 色 ダークマゼンタ 設定 する	plt.plot(データ列, データ列2, color='darkmagenta')
オプション ファイル 使う	file = sys.open(filename, 'w')
ユニ コード 対応 する 文字	chr(unicode)
折れ線 グラフ 描画 し 色 ミディアムスレートブルー 変更 する	plt.plot(データ列, データ列2, color='mediumslateblue')
オプション マーカー 用いる	marker = '^'
折れ線 グラフ 描画 し その 色 赤 設定 する	plt.plot(データ列, データ列2, color='red')
オプション グラフ 色 オーキッド 指定 する	color = 'orchid'
配列 スカラー 倍	aArray * n
無限 続く 整数 リスト 求める	itertools.repeat(n)
日付 時刻 データ 火曜日	aDatetime.weekday() == 1
ヒストグラム 描画 し その 色 フローラルホワイト 変更 する	plt.hist(データ列, color='floralwhite')
整数 バイト 長	(n.bit_length() + 7) // 8
配列 個 ビン 分割 し ラベル つける	pd.cut(aArray, n, labels=names)
日付 データ 日付 データ 後ろ	aDate > aDate2
データ フレーム カラム 中 ある 日付 データ 日付 データ 合計 カウント する	df[col].isin([value, value2]).sum()
タプル 回 連結 する	aTuple * n
イン ポート する	import math
異なる 列 キー 二つ データ フレーム 外部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
グラフ カラー パレット 設定 する	sns.set(pallete=palleteName)
オプション グラフ 色 プラム 指定 する	color = 'plum'
データ 列 中 日付 データ 文字 列 いくつ ある 数える	ds.isin([value, value2]).sum()
整数 配列 一つ 調べる	n in aArray
オプション ダーク サーモン 色 使う	color = 'darksalmon'
折れ線 グラフ 色 ディムグレー 指定 する	plt.plot(データ列, データ列2, color='dimgray')
ヒストグラム 描画 し その 色 シエナ 設定 する	plt.hist(データ列, color='sienna')
文字 列 長 さ	len(s)
実行 時 標準 出力 出力 先 ターミナル どう 調べる	sys.stdout.isatty()
書式 データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], format='%Y-%m-%d')
折れ線 グラフ 描画 し 色 ブラック 変更 する	plt.plot(データ列, データ列2, color='black')
データ フレーム 読み込む	pd.read_csv(filename, sep=',')
文字 列 中 文字 列挙 する	list(s)
データ フレーム カラム 小さい 順 並べ 直し 更新 する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データ フレーム 列 リスト 含ま れる 行 取り出す	df[df[column].isin(aList)]
折れ線 グラフ 描画 し その 色 オレンジ レッド 設定 する	plt.plot(データ列, データ列2, color='orangered')
データ フレーム カラム 名 指定 さ れ た 列 名前 一覧 置き換える	df.columns = columns
折れ線 グラフ 描画 し 色 チョコレート 変更 する	plt.plot(データ列, データ列2, color='chocolate')
ヒストグラム 描画 し その 色 ライト サーモン 設定 する	plt.hist(データ列, color='lightsalmon')
等しい どう 判定 する	n == n2
リスト 配列 破線 グラフ 描画 し その 色 暗い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
有理数 分母 最大 値 指定 し 近似 する	q.limit_denominator(max_denominator=1000000)
折れ線 グラフ スタイル 点線 設定 する	plt.plot(データ列, データ列2, linestyle='dotted')
データ フレーム 二つ 列 ソート し 先頭 する	df.sort_values(by=['A', 'B'], na_position='first')
数 実数 加える	x + y
折れ線 グラフ 描画 し その 色 ミディアムスレートブルー 設定 する	plt.plot(データ列, データ列2, color='mediumslateblue')
数値 青色 プリント できる 文字 列 変換 する	f'\033[34m{value}\033[0m'
タプル 先頭 取り除く	aTuple[1:]
マップ 浅い コピー 生成 する	aDict.copy()
リスト リスト 散布 図 黒い 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c='k')
タプル キー 要素 変更 する	aDict[key] = element
配列 ビン 数 ビニング し ラベル つける	pd.cut(aArray, n, labels=names)
オブジェクト 浮動 小数点 数 型 インスタンス	isinstance(obj, float)
オプション グラフ 色 ミディアムスレートブルー 指定 する	color = 'mediumslateblue'
データ 列 中 いくつ 文字 列 ある 求める	ds.isin([value]).sum()
今日 曜日 整数 使う	datetime.datetime.today().weekday()
淡い 色 黒く する	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ フレーム 中 列 等量 個 ビン 分割 する	pd.qcut(df[col], n)
データ フレーム 列 度数 分布 図 描画 する	plt.hist(df[column])
年 月 日 日付 時刻 変換 する	datetime.datetime(year=year, month=month, day=day)
試し 何 動かす	print('Hello World')
データ フレーム 列 用い 降順 破壊 的 ソート する	df.sort_values(by=column, ascending=False, inplace=True)
折れ線 グラフ 色 ゲインズボロ 変更 する	plt.plot(データ列, データ列2, color='gainsboro')
ヒストグラム 描画 し 色 赤 設定 する	plt.hist(データ列, color='red')
タプル ひとつ 置き 取り出す	aTuple[::2]
最大 値 最小 値 整数 乱数 発生 さ せる	random.randint(最小値, 最大値)
明るい 色 重 見やすく 散布 図 描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
ヒストグラム 描画 し その 色 アクア 設定 する	plt.hist(データ列, color='aqua')
オプション アクアマリン グラフ 色 設定 する	color = 'aquamarine'
オプション ダークオーキッド 色 使う	color = 'darkorchid'
配列 リスト 散布 図 描画 し 丸 マーカー 色 カラー コード 指定 する	plt.plot(xdata, ydata, marker='o', c=rgb)
データ フレーム 数値 まとめ 丸める	df.round()
オプション 色 使う	color = 'darkslategrey'
リスト リスト 色 差別 ない プロット し その 色 黒色 指定 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
ヒストグラム 色 ダーク サーモン 指定 する	plt.hist(データ列, color='darksalmon')
ヒストグラム 描画 し その 色 グレー 指定 する	plt.hist(データ列, color='grey')
文字 列 全て 識別子 名 どう	s.isidentifier()
オブジェクト プロパティ 値 値 指定 する	setattr(obj, プロパティ名, 値)
データ フレーム 各 グループ 毎 個数	df.groupby(column).count()
データ フレーム 指定 さ れ た 列 抽出 する	df[[column, column2, column3, column4]]
現在 モジュール	sys.modules[__name__]
明るい 色 ヒストグラム イテラブル 描画 する	plt.hist(xdata, color='bright')
リスト リスト 散布 図 パステル 調 色 描画 する	plt.plot(xdata, ydata, c='pastel')
ファイル ファイル 入力 辞書 変換 する	json.load(fin)
折れ線 グラフ 緑色 ダイアモンドマーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
最大 値 最小 値 範囲 一様 な 疑似 乱数	random.uniform(最小値, 最大値)
ベクトル 列 ごと 分散 求める	np.var(aArray, axis=0)
データ 列 位 丸め 整数 型 する	ds.round(-1).astype(int)
データ フレーム 列 文字 列 含ま れ ない データ 抽出 する	df[not df[column].str.contains(s)]
日付 データ 月曜日 どう 調べる	aDate.weekday() == 0
辞書 順 二つ 文字 列 比較 する	s < s2
マップ コピー 新規 生成 する	dict(aDict)
オプション 色 ダーク サーモン 変更 する	color = 'darksalmon'
オプション ブランチドアーモンド 使う	color = 'blanchedalmond'
ミディアムシアグリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線 グラフ 描画 し その 色 パープル 設定 する	plt.plot(データ列, データ列2, color='purple')
折れ線 グラフ 色 ゴールデン ロッド セット する	plt.plot(データ列, データ列2, color='goldenrod')
ヒストグラム 描画 し その 色 カーキ 設定 する	plt.hist(データ列, color='khaki')
ファイル オープン し 追加 ストリーム 使う	open(filepath, mode='a')
シーケンス ひとつ ランダム 選ぶ	random.choice(iterable)
折れ線 グラフ 青い 印 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
文字 列 中 非 大文字 ある	any(not c.isupper() for c in s)
オプション 色 ミディアムスプリンググリーン 設定 する	color = 'mediumspringgreen'
青い バツ マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
線 グラフ 色 ミディアムパープル 設定 する	plt.plot(データ列, データ列2, color='mediumpurple')
二つ タプル 階層 的 つなぐ	collections.ChainMap(aDict, aDict2)
実数 逆数 求める	math.asinh(x)
データ フレーム 中 存在 する 文字 列 数 数える	df.isin([value]).sum()
データ フレーム リスト 指定 さ れ た 列 各 列 間 相関 係数 求める	df[aList].corr()
データ フレーム 列 名 リスト ソート する	df.sort_values(by=column)
線 グラフ 描画 し 色 スカイ ブルー 設定 する	plt.plot(データ列, データ列2, color='skyblue')
黄色い 丸 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
ファイル 絶対 ファイル パス 使う	os.path.abspath(filepath)
ファイル 付き 書き込み 用 オープン する	open(filepath, mode='w', encoding='utf_8_sig')
黄色い 丸 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
データ フレーム 欠損 値 平均 値 置換 する	df.fillna(df.mean())
オプション 色 ドジャーブルー 設定 する	color = 'dodgerblue'
折れ線 グラフ 色 ゲインズボロ 指定 する	plt.plot(データ列, データ列2, color='gainsboro')
文字 列 中 部分 文字 列 含ま れ ない どう	sub not in s
列 ビン 数 ビン 分割 する	pd.cut(ds, n)
分子 分母 有理数 作る	fractions.Fraction(分子, 分母)
折れ線 グラフ 色 フクシア 変更 する	plt.plot(データ列, データ列2, color='fuchsia')
データ フレーム リスト カラム 空文字 ドロップ する	df[aList].replace('', np.nan).dropna()
辞書 キーワード 引数 更新 する	aDict.update(**kwargs)
文字 列 青色 プリント できる 文字 列 する	f'\033[34m{value}\033[0m'
ファイル 一行 読み込む	f.readline()
列 最大 長 両端 キュー 作る	collections.deque(iterable, maxlen=n)
オプション グラフ 色 スカイ ブルー 設定 する	color = 'skyblue'
アンティーク ホワイト 色 ヒストグラム 描画 する	plt.hist(データ列, color='antiquewhite')
列 各 要素 関数 フィルタ する	filter(func, iterable)
データ フレーム 列 降順 破壊 的 整列 する	df.sort_values(by='A', ascending=False, inplace=True)
リスト リスト 散布 図 描画 し ダイアモンドマーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='D', c=rgb)
データ フレーム 欠損 値 最小 値 埋める	df.fillna(df.min())
辞書 項目 名 存在 し ない 時 要素 追加 する	aDict.setdefault(key, element)
日付 時刻 データ 週間 分 減算 する	aDatetime - datetime.timedelta(weeks=n)
イエロー グリーン ヒストグラム 色 設定 する	plt.hist(データ列, color='yellowgreen')
データ フレーム 行 目 破壊 的 削除 する	df.drop(n, axis=0, inplace=True)
オブジェクト タプル 含ま れ ない 調べる	element not in aTuple
組 中 最小 値 求める	min(aTuple)
データ フレーム カラム 直前 値 埋める	df[col].fillna(method='ffill')
線 グラフ 描画 し その 色 グリーン イエロー 指定 する	plt.plot(データ列, データ列2, color='greenyellow')
本日 文字 列 フォーマット し 文字 列 変換 する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
ファイル パス 読み込み モード オープン し する	f = open(filepath, mode='r')
両端 キュー 要素 エン キュー する	deq.appendleft(element)
つ 文字 列 辞書 順 比較 する	s < s2
オプション グラフ 色 ダークゴールデンロッド する	color = 'darkgoldenrod'
未 初期 化 行列	np.empty((行数, 列数), dtype=np.int)
小数点 以下 桁 表示 する	print(':.3f'.format(x))
つ データ フレーム 列 と列 キー 外部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
データ 列 空文字 欠損 値 変換 し ドロップ する	ds.replace('', np.nan).dropna()
タプル 内 要素 全て 真 調べる	all(aTuple)
年 月 日付	datetime.date(year=year, month=month, day=1)
折れ線 グラフ 四角 マーカー 黒色 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
データ フレーム 列 名 リスト グループ 化 し 基本 統計 量 求める	df.groupby(columns).describe()
折れ線 グラフ 印 する	plt.plot(データ列, データ列2, marker='^')
無限 カウントアップ する	itertools.count(start=n)
データ フレーム インデックス 降順 並べる	df.sort_index(ascending=False)
リスト リスト 散布 図 カラー コード 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c=rgb)
文字 列 開始 位置 終了 位置 間 部分 文字 列 存在 する 判定 する	s.find(sub, start, end) != -1
オプション グラフ 色 ラベンダー 設定 する	color = 'lavender'
データ フレーム リスト カラム 欠損 値 メディアン 埋める	df[aList].fillna(df[aList].median())
リスト リスト 散布 図 描画 し マーカー 色 濃い 設定 する	plt.plot(xdata, ydata, c='deep')
折れ線 グラフ 色 青 緑 指定 する	plt.plot(データ列, データ列2, color='teal')
配列 データ 列 暗い 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
ファイル 番目 カラム インデックス 読む	pd.read_csv(filename, index_col=n)
行 昇順 表 ソート する	df.sort_index(ascending=True)
日付 データ 月 見る	aDate.month
文字 列 コード エスケープ バイト 列 変換 する	s.encode(encoding='unicode_escape')
整数 セット どれ 調べる	n in aSet
文字 列 末尾 範囲 指定 し 部分 文字 列 探す	s.find(sub, start, end)
散布 図 カラー コード 左 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='<', c=rgb)
リスト リスト 破線 グラフ 描画 し その 色 明るい 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
二つ 実行 結果 カンマ 区切っ 出力 する	print(value, value2, sep=',')
プロット 描画 暗い 色 テーマ 使う	sns.set(pallete='dark')
ヒストグラム 色 ロージーブラウン 設定 する	plt.hist(データ列, color='rosybrown')
線 グラフ 描画 し その 色 ターコイズ 変更 する	plt.plot(データ列, データ列2, color='turquoise')
バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='x')
データ フレーム 歪 度 求める	df.kurt()
オプション グラフ 色 パレットトルコイズ 設定 する	color = 'paleturquoise'
カウンタ 多い 順 リスト し 得る	aCounter.most_common()
非 数	math.nan
タプル 内 要素 全て 真 調べる	all(aTuple)
回 数値 イテラブル 使う	range(n)
オプション 色 ライトスカイブルー セット する	color = 'lightskyblue'
文字 列 先頭 空白 消す	s.lstrip()
散布 図 三角 マーカー 使う	plt.plot(xdata, ydata, marker='^')
実数 非 数	math.isnan(x)
日付 時刻 データ タイム ゾーン	aDatetime.timetz()
実数 ノルム 求める	math.hypot(x, y)
ヒストグラム 描画 し その 色 ハニーデュー 設定 する	plt.hist(データ列, color='honeydew')
ヒストグラム 描画 し 正規 化 する	plt.hist(データ列, density=True)
四角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='s')
ヒストグラム 描画 し 色 ホワイトスモーク 指定 する	plt.hist(データ列, color='whitesmoke')
ヒストグラム 描画 し 色 白 設定 する	plt.hist(データ列, color='white')
フォーマット 文字 列 日付 データ 変換 する	pd.to_datetime(s, format='%Y-%m-%d')
リスト リスト 散布 図 描画 し マーカー 下 三角 設定 する	plt.plot(xdata, ydata, marker='v')
赤色 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
文字 列 左側 タブ 取り除く	s.lstrip('\t')
ファイル カンマ 区切り ファイル 文字 化け し ない よう 読み込む	pd.read_csv(filename, encoding='shift_jis')
実数 絶対 値	math.fabs(x)
オプション グレー 色 使う	color = 'grey'
オブジェクト リスト 要素	element in aList
リスト リスト 黒い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
オー キッド ヒストグラム 色 変更 する	plt.hist(データ列, color='orchid')
散布 図 赤い ポイント マーカー 使用 する	plt.plot(xdata, ydata, marker='.', c='r')
折れ線 グラフ 右 三 角 マーカー 黄色 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
以上	n >= n2
イテラブル リスト 暗い グラフ 描い その 色 黒 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
データ フレーム 列 値 集約 し 最大 値 求める	df.groupby(column).max()
折れ線 グラフ 色 ロージーブラウン 設定 する	plt.plot(データ列, データ列2, color='rosybrown')
印字 可能 な 文字 全て 求める	string.printable
散布 図 赤い 丸 マーカー 使用 する	plt.plot(xdata, ydata, marker='o', c='r')
データ フレーム カテゴリ データ ベクトル 変換 する	pd.get_dummies(df)
ヒストグラム 描画 し その 色 ミディアムシアグリーン 設定 する	plt.hist(データ列, color='mediumseagreen')
オプション 標準 エラー 使う	file = sys.stderr
データ フレーム 指定 さ れ た 列 抽出 する	df[[column]]
折れ線 グラフ 右 三 角 マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='>', markersize=n)
イテラブル 重複 組み合わせ	itertools.combinations_with_replacement(iterable, n)
オプション ゴールデン ロッド 色 使用 する	color = 'goldenrod'
折れ線 グラフ 印 四角 する	plt.plot(データ列, データ列2, marker='s')
データ フレーム 各 列 列 組み合わせ 毎 集約 し 個数 求める	df.groupby([column, column2], as_index=False).count()
オプション カンマ セパレータ 用いる	sep = ','
イテラブル 個 ランダム 選ぶ	random.choices(iterable, k=n)
ヒストグラム 描画 し その 色 フォレストグリーン 変更 する	plt.hist(データ列, color='forestgreen')
配列 ユニーク な 要素 その 位置	u, indices = np.unique(aArray, return_index=True)
データ 列 各 データ 何 回 出現 する 調べる	ds.value_counts()
オプション 改行 コード 変更 する	newline = '\n'
ヒストグラム 色 ティール 変更 する	plt.hist(データ列, color='teal')
整数 型 ゼロ 埋め さ れ た ベクトル	np.zeros(要素数, dtype=np.int)
折れ線 グラフ 描画 し マーカー 四角 印 する	plt.plot(データ列, データ列2, marker='s')
部分 文字 列 部分 文字 列 始まる どう 確認 する	s.startswith(sub)
データ 列 欠損 値 最 頻 値 補う	ds.fillna(ds.mode().iloc[0])
データ 列 データ 列 散布 図 黒い 下 三角 マーカー 描く	plt.plot(xdata, ydata, marker='v', c='k')
折れ線 グラフ 丸 マーカー 大き さ する	plt.plot(データ列, データ列2, marker='o', markersize=n)
データ フレーム 列 値 多い 行 抽出 する	df[df[column] > x]
浮動 小数点 数 実数 掛ける	x * y
ビン 数 配列 分割 する	pd.cut(aArray, n)
折れ線 グラフ マーカー 黄色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
データ フレーム リスト 列 中 いくつ 欠損 値 ある 数える	df[aList].isna().sum()
日付 時刻 データ 木曜日 どう 調べる	aDatetime.weekday() == 3
ヒストグラム 色 ダークシアグリーン 設定 する	plt.hist(データ列, color='darkseagreen')
行 列 二 次元 リスト	[[0] * n for _ in range(n2)]
文字 列 文字 リスト 変換 する	list(s)
変数 マゼンタ する	f'\033[35m{value}\033[0m'
折れ線 色 文字 列 変更 する	plt.plot(xdata, ydata, color=s)
変数 最大 値 求める	max(x, y, z)
オプション ディープスカイブルー 色 用いる	color = 'deepskyblue'
ヒストグラム 描画 し 色 モカシン 設定 する	plt.hist(データ列, color='moccasin')
無限 整数 リスト	itertools.repeat(n)
列 名 一覧 データ 型 フィルタ する	df.select_dtypes(型).columns
オプション 黄色 用いる	color = 'yellow'
リスト 濃い 色 柱状 グラフ 描く	plt.hist(xdata, color='deep')
リスト 先頭 取り除く	aList[1:]
ファイル 拡張 子 使う	os.path.splitext(filepath)[1].lstrip('.')
折れ線 グラフ 丸 印 赤く する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
文字 列 中 ひとつ 非 英数字 ある 調べる	any(not c.isalnum() for c in s)
折れ線 グラフ 色 ペルー 変更 する	plt.plot(データ列, データ列2, color='peru')
ファイル 文字 列 示す エン コーディング 追加 できる よう オープン する	open(filepath, mode='a', encoding=s)
折れ線 グラフ 描画 し 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgray')
折れ線 グラフ 描画 し その 色 ラベンダー 変更 する	plt.plot(データ列, データ列2, color='lavender')
折れ線 グラフ 描画 し その 色 リネン 設定 する	plt.plot(データ列, データ列2, color='linen')
変数 マイナス 無限 大 近づく 場合 数値 極限 値 求める	sympy.limit(e, z, -oo)
小数点 数 天井	math.ceil(x)
ヒストグラム 色 ゴールド 設定 する	plt.hist(データ列, color='gold')
データ フレーム 列 グループ 化 し それぞれ グループ ごと 標準 偏差 求める	df.groupby(column).std()
範囲	range(n)
ファイル パス オープン する	open(filepath, encoding='utf-8')
折れ線 グラフ 描画 し その 色 インディゴ 変更 する	plt.plot(データ列, データ列2, color='indigo')
倍 する	n *= n2
なら ない 列 要素	itertools.dropwhile(predicateFunc, iterable)
データ フレーム ファイル 読み込む	pd.read_json(filename, orient='records', lines=True)
黒い 丸 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='o', c='k')
暗い 折れ線 グラフ 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
カラム 第 一 四 分 位 数 算出 する	ds.quantile(0.25)
ファイル ヘッダ 指定 せ ず 読み込む	pd.read_csv(filename, header=None)
データ フレーム リスト カラム 空文字 未 入力 値 変換 し ドロップ する	df[aList].replace('', np.nan).dropna()
タイムスタンプデータ 日 加える	aDatetime + datetime.timedelta(days=n)
部分 文字 列 文字 列 開始 位置 以降 含ま れ ない 調べる	s.find(sub, start) == -1
ターコイズ 色 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='turquoise')
リスト 長 さ 繰り返す	range(len(aList))
暗い 色 重 見やすく リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
行列 要素 ごと 積 計算 する	np.multiply(aArray, aArray2)
配列 データ 列 散布 図 プロット し マーカー 星 設定 する	plt.plot(xdata, ydata, marker='*')
折れ線 グラフ 描画 し その 色 ダークターコイズ 設定 する	plt.plot(データ列, データ列2, color='darkturquoise')
ヒストグラム 色 ライトグリーン 設定 する	plt.hist(データ列, color='lightseagreen')
オプション 左 三 角 印 使う	marker = '<'
自然 数 並べ方 総数	math.perm(n)
データ フレーム カラム 整数 四捨五入 する	df[col].round()
リスト リスト 散布 図 描い 右 三 角 マーカー 色 カラー コード 指定 する	plt.plot(xdata, ydata, marker='>', c=rgb)
文字 列 カンマ 用い 区切っ 列挙 する	s.split(',')
データ 列 リスト 散布 図 パステル 調 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
文字 列 走査 し 正規 表現 マッチ する 見る	re.search(pattern, s)
リスト リスト カラー コード 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
折れ線 グラフ 描画 し その 色 グレー 指定 する	plt.plot(データ列, データ列2, color='gray')
リスト リスト 黒い 淡い 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
書き込み 用 ファイル 文字 コード 用い オープン する	open(filepath, mode='w', encoding=text)
日付 データ 週間 分 減算 する	aDate - datetime.timedelta(weeks=n)
折れ線 グラフ 大き さ クロス マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線 グラフ 描画 し その 色 アクア 設定 する	plt.plot(データ列, データ列2, color='aqua')
ヒストグラム 描画 し 色 アクアマリン 設定 する	plt.hist(データ列, color='aquamarine')
赤い 下 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v', c='r')
ヒストグラム 描画 し 色 マルーン 設定 する	plt.hist(データ列, color='maroon')
データ フレーム 列 昇順 並べ 更新 する	df.sort_values(by='A', ascending=True, inplace=True)
データ フレーム 列 以下 行 抽出 する	df[df[column] <= x]
マッピング 並べ 直し 形式 文字 列 する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
現在 作業 ディレクトリ 使う	os.getcwd()
データ フレーム 列 名 指定 さ れ た 列 名 一覧 置き換える	df.columns = columns
データ フレーム カラム 値 どう 調べる	df[col].isna()
本日 金曜日 調べる	datetime.datetime.today().weekday() == 4
文字 列 いつ 繰り返す 列	itertools.repeat(element)
オプション 標準 出力 用いる	file = sys.stdout
文字 コード 最大 値 調べる	sys.maxunicode
等しい 識別子	None
平均 データ フレーム リスト 列 欠損 値 埋める	df[aList].fillna(df[aList].mean())
配列 リスト 濃い グラフ 描画 し その 色 青く する	plt.plot(xdata, ydata, linestyle='deep', color='b')
折れ線 グラフ 色 レベッカパープル 設定 する	plt.plot(データ列, データ列2, color='rebeccapurple')
文字 化け 防ぐ	sns.set(font='IPAexGothic')
データ フレーム 列 降順 ソート する	df.sort_values(by=column, ascending=False)
結果 切り上げ	(n + n2 - 1) // n2
ファイル バイナリ できる よう オープン する	open(filepath, mode='rb')
データ 列 欠損 値 直後 値 埋める	ds.fillna(method='bfill')
ベクトル 型	aArray.dtype()
ヒストグラム 色 ミスティローズ 指定 する	plt.hist(データ列, color='mistyrose')
線 グラフ 色 タン 設定 する	plt.plot(データ列, データ列2, color='tan')
データ フレーム カラム 中 文字 列 ある どう 調べる	df[col].isin([value])
データ フレーム 列 四捨五入 する	df[col].round()
ヒストグラム 破線 描画 する	plt.hist(データ列, linestyle='dashed')
データ フレーム 列 集約 し それぞれ グループ ごと 個数 求める	df.groupby(column).count()
真 部分 集合 調べる	aSet < aSet2
文字 列 キーワード	keyword.iskeyword(s)
プロット カラー パレット 明るく する	sns.set(pallete='bright')
オプション ターコイズ グラフ 色 セット する	color = 'turquoise'
リスト リスト 散布 図 描画 し マーカー 左 三 角 設定 する	plt.plot(xdata, ydata, marker='<')
自然 数 最小公倍数	math.lcm(n, n2)
リスト 等量 個 ビニング する	pd.qcut(aList, n)
カラー バー 描画 する	plt.colorbar()
ヒストグラム 描画 し 色 紺 設定 する	plt.hist(データ列, color='darkblue')
大文字 全て 求める	string.ascii_uppercase
ヒストグラム 色 暗い 赤 設定 する	plt.hist(データ列, color='darkred')
リスト 配列 散布 図 描き マーカー 丸 変更 する	plt.plot(xdata, ydata, marker='o')
文字 列 片仮名 ひ ら なに 変換 する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
オプション ブラック グラフ 色 設定 する	color = 'black'
データ フレーム グループ 化 し 列 最小 値 求める	df.groupby(column)[column2].min()
データ フレーム つ カラム ソート し 先頭 する	df.sort_values(by=['A', 'B'], na_position='first')
整数 リスト いづれ 調べる	n in aList
カラー パレット 明るく する	sns.set(pallete='bright')
線 グラフ 色 ライト ブルー 指定 する	plt.plot(データ列, データ列2, color='lightblue')
ヒストグラム 描画 し その 色 ライトスレイグレー する	plt.hist(データ列, color='lightslategrey')
整数 符号 付き 長 さ バイト 列 する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
オプション インディゴ 使う	color = 'indigo'
本日 日付 時刻	datetime.datetime.today()
ヒストグラム 色 ライト グレー 設定 する	plt.hist(データ列, color='lightgrey')
赤色 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
リスト 内 要素 少なくとも ひとつ 真 調べる	any(aList)
イテラブル 各 要素 真 で あれ その 要素 出力 する	itertools.takewhile(predicateFunc, iterable)
二つ 列 並べ 箱 髭 図 する	plt.boxplot([df[column], df[column2]])
データ フレーム タブ 区切り ファイル 保存 する	df.to_csv(filename, sep='\t')
文字 列 十 進 数字 調べる	s.isdecimal()
オプション 色 ローン グリーン 設定 する	color = 'lawngreen'
辞書 値 一覧	aDict.values()
線 グラフ 描画 し その 色 バリーウッド 設定 する	plt.plot(データ列, データ列2, color='burlywood')
カウンタ 最 頻出 項目	aCounter.most_common()[0]
カラー コード 左 三 角 マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='<', c=rgb)
範囲 指定 し 乱数 生成 する	random.randint(最小値, 最大値)
スライド 用 グラフ 変更 する	sns.set(context='talk')
ミディアムパープル ヒストグラム 色 設定 する	plt.hist(データ列, color='mediumpurple')
列 欠損 値 最大 値 設定 する	ds.fillna(ds.max())
左 三 角 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='<')
文字 列 内 ひとつ 小文字 含ま れる 調べる	any(c.islower() for c in s)
スチール ブルー ヒストグラム 色 設定 する	plt.hist(データ列, color='steelblue')
オプション グラフ 色 グリーン 設定 する	color = 'green'
時間 データ フレーム タイム スタンプ 型 変換 する	pd.to_datetime(df[col], unit='s', utc=True)
折れ線 グラフ 描画 し その 色 設定 する	plt.plot(データ列, データ列2, color='darkslategrey')
線 グラフ 描画 し その 色 カデット ブルー 設定 する	plt.plot(データ列, データ列2, color='cadetblue')
カラー コード ダイアモンドマーカー 用い 散布 図 描く	plt.plot(xdata, ydata, marker='D', c=rgb)
整数 列	list(range(n, n2+1))
データ 列 イテラブル 淡い 描画 し その 色 青色 設定 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
イテラブル セット 変換 する	set(iterable)
オプション 出力 先 標準 出力 設定 する	file = sys.stdout
黒い クロス マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='x', c='k')
リスト 空か 調べる	len(aList) == 0
折れ線 グラフ 赤い 大 バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
パステル 調 の 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
追加 できる よう 文字 コード 使っ 既存 ファイル 開く	open(filepath, mode='a', encoding=text)
データ 列 どの 程度 分散 し いる 見る	ds.var()
散布 図 バツ マーカー 使う	plt.plot(xdata, ydata, marker='x')
シーケンス 累加 し た 列	itertools.accumulate(iterable)
コレクション 用いる	import collections
上位 集合	aSet.issuperset(aSet2)
オプション ブルー バイオレット 使う	color = 'blueviolet'
文字 列 数値 時刻 日付 データ 変換 する	pd.to_datetime(s, unit='s', utc=True)
ヒストグラム 描画 し その 色 ダーク シアン 指定 する	plt.hist(データ列, color='darkcyan')
折れ線 グラフ 星 マーカー 青く する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線 グラフ 描画 し その 色 グリーン イエロー 指定 する	plt.plot(データ列, データ列2, color='greenyellow')
データ フレーム 関数 グループ 化 し 要約 統計 量 計算 する	df.groupby(関数).describe()
折れ線 グラフ 三角 マーカー 黒く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線 グラフ 大き さ 菱形 マーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markersize=n)
データ フレーム 列 最 頻 値 求める	df[col].mode()
二 変数 最大 値	max(x, y)
データ 列 リスト カラー コード 暗い グラフ 描く	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
折れ線 グラフ 右 三 角 マーカー 青く する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
折れ線 グラフ 色 紺 する	plt.plot(データ列, データ列2, color='darkblue')
両端 キュー 要素 プッシュ する	deq.append(element)
データ フレーム 各 列 毎 グループ 化 し 列 最小 値 算出 する	df.groupby(column)[column2].min()
ファイル オープン し 書き込み ストリーム 使う	open(filepath, mode='w')
実行 環境 リナックス	sys.platform.startswith('linux')
日付 データ データ フレーム カラム インデックス する	df.index = pd.DatetimeIndex(df[col])
線 グラフ 色 ライム 変更 する	plt.plot(データ列, データ列2, color='lime')
マスク さ れ た タプル 要素 取り出す	itertools.compress(iterable, selectors=iterable2)
線 グラフ 描画 し その 色 スレート ブルー 指定 する	plt.plot(データ列, データ列2, color='slateblue')
列 と列 キー し 二つ データ フレーム 外部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
散布 図 黒色 星 マーカー 使用 する	plt.plot(xdata, ydata, marker='*', c='k')
濃い シアン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkcyan')
キー マッピング 上 定義 済み	key in aDict
折れ線 グラフ 描画 し その 色 淡い ピンク色 変更 する	plt.plot(データ列, データ列2, color='lightpink')
線 グラフ 色 ネイビー 指定 する	plt.plot(データ列, データ列2, color='navy')
事前 限定 正規 表現 コンパイル する	re.compile(pattern, flag=re.ASCI)
日付 時刻 データ 日 減らす	aDatetime - datetime.timedelta(days=n)
黒い 丸 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='o', c='k')
文字 列 置き換える	s.replace(sub, newsub)
丸 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='o')
変数 シアン 表示 する	print(f'\033[36m{value}\033[0m')
折れ線 グラフ 色 シーグリーン 指定 する	plt.plot(データ列, データ列2, color='seagreen')
折れ線 グラフ 色 スノー 設定 する	plt.plot(データ列, データ列2, color='snow')
非 空白 文字 列 中 含ま れる	any(not c.isspace() for c in s)
データ フレーム 位 丸め 整数 型 する	df.round(-2).astype(int)
マッピング キー 一覧	aDict.keys()
データ フレーム 使う	import pandas as pd
ヒストグラム 線 スタイル 破線 設定 する	plt.hist(データ列, linestyle='dashed')
色 差別 ない 色 リスト 柱状 図 描画 する	plt.hist(xdata, color='colorblind')
二つ 集合 ユニオン 計算 する	aSet.union(aSet2)
青 紫色 ヒストグラム 描画 する	plt.hist(データ列, color='violet')
データ フレーム カラム モード 設定 する	df[col].fillna(df[col].mode().iloc[0])
実行 結果 出力 改行 せ ず 行う	print(value, end='')
異なる 列 キー し つ データ フレーム 内部 ジョイン する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
データ フレーム 列 大きい データ 抽出 する	df[df[column] > x]
折れ線 グラフ 描画 し その 色 ミディアムスプリンググリーン セット する	plt.plot(データ列, データ列2, color='mediumspringgreen')
データ 列 折れ線 グラフ 描画 し マーカー 右 三 角 印 する	plt.plot(データ列, データ列2, marker='>')
タブ 区切り ファイル ファイル 読む	pd.read_csv(filename, encoding='shift_jis')
リスト 配列 散布 図 大き さ 描画 する	plt.scatter(xdata, ydata, s=n)
重 見やすく データ 列 リスト 散布 図 パステル 調 色 描画 する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
タイムスタンプデータ 水曜日 調べる	aDatetime.weekday() == 2
線 グラフ 描画 し その 色 ターコイズ 設定 する	plt.plot(データ列, データ列2, color='turquoise')
オー キッド ヒストグラム 色 設定 する	plt.hist(データ列, color='orchid')
カラム 中 いくつ 文字 列 含ま れる 求める	ds.isin([value]).sum()
プログラム 強制 的 停止 する	sys.exit()
文字 列 タイトル ケース 調べる	s.istitle()
ダークオーキッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkorchid')
整数 リスト	list(range(n, n2+1))
カウンタ 同士 積 集合	aCounter & aCounter2
文字 列 コロン 区切っ プリント する	print(value, value2, sep=':')
緑色 クロス マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
線 グラフ 描画 し その 色 チョコレート 設定 する	plt.plot(データ列, データ列2, color='chocolate')
小さく する	n -= n2
リスト 配列 明るい 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
辞書 フォーマット インデント 幅 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, indent=n)
列 キー し 二つ データ フレーム 右 結合 する	pd.merge(df, df2, on=column, how='right')
リスト 数列 黒色 明るい グラフ 描く	plt.plot(xdata, ydata, linestyle='bright', color='k')
文字 列 空白 区切っ 整数 リスト 変換 する	map(int, s.split())
リスト リスト パステル 調 の 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
実数 乗 し 浮動 小数点 数 余り 求める	pow(x, n, y)
列 各 データ 値 出現 数	ds.value_counts()
明るい 色 折れ線 グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
折れ線 グラフ 緑色 菱形 印 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
オプション ダークゴールデンロッド グラフ 色 設定 する	color = 'darkgoldenrod'
スタック 中 要素 インデックス	deq.index(element)
リスト リスト 散布 図 描い 三角 マーカー 色 カラー コード 変更 する	plt.plot(xdata, ydata, marker='^', c=rgb)
線 グラフ 描画 し その 色 ダークターコイズ 設定 する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線 グラフ 描画 し その 色 チョコレート 設定 する	plt.plot(データ列, データ列2, color='chocolate')
カラー コード 大 バツ マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='X', c=rgb)
セット 何 いい ひとつ 取り出す	aSet.pop()
リスト リスト 散布 図 描画 し マーカー 右 三 角 指定 する	plt.plot(xdata, ydata, marker='>')
日付 データ 日 求める	aDate.day
文字 列 水色 表示 する	print(f'\033[36m{value}\033[0m')
オプション ポイント マーカー 用いる	marker = '.'
コーンフラワーブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='cornflowerblue')
最初 部分 文字 列 用い 文字 列 二分 する	s.partition(sub)
文字 列 末尾 部分 文字 列	s.endswith(sub)
キュー 空 で ない 調べる	len(deq) != 0
オプション ベージュ 色 使う	color = 'beige'
濃い 色 用い 散布 図 描画 する	plt.plot(xdata, ydata, c='deep')
データ フレーム 縦 方向 連結 する	pd.concat([df, df2])
変数 数式 積分 求める	sympy.integrate(e, z)
印字 できる 文字 列 する	ascii(x)
データ フレーム 二つ 列 ソート し 更新 する	df.sort_values(by=['A', 'B'], inplace=True)
データ フレーム 一行 ランダム 抽出 する	df.sample()
データ フレーム 位 丸め 整数 型 する	df.round(-1).astype(int)
リスト リスト 青色 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
データ 列 折れ線 グラフ 描画 し マーカー 三角 印 する	plt.plot(データ列, データ列2, marker='^')
未満 または 以上 調べる	n < n2 or n >= n3
列 イテラブル 続け た イテラブル	itertools.chain(iterable, iterable2)
オブジェクト 文字 列 クラス 調べる	isinstance(obj, str)
実行 結果 黒色 プリント できる 文字 列 変換 する	f'\033[30m{value}\033[0m'
折れ線 グラフ 描画 し その 色 ドジャーブルー 設定 する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線 グラフ 緑色 菱形 マーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
ヒストグラム 描画 し 色 ミディアムターコイズ する	plt.hist(データ列, color='mediumturquoise')
プラットフォーム コード ポイント 最大 値	sys.maxunicode
オプション タブ 区切り 使う	sep = '\t'
データ フレーム 千 位 丸め 整数 型 する	df.round(-3).astype(int)
ヒストグラム 描画 し その 色 レモン シフォン 設定 する	plt.hist(データ列, color='lemonchiffon')
ヒストグラム 色 ミディアムパープル 設定 する	plt.hist(データ列, color='mediumpurple')
ヒストグラム 描画 し その 色 ミスティローズ 設定 する	plt.hist(データ列, color='mistyrose')
オプション 標準 エラー 出力 する	file = sys.stderr
日付 時刻 データ 日付 時刻 データ 時間 差 秒 数 計算 する	(aDatetime - aDatetime2).total_seconds()
オプション 色 青 指定 する	color = 'blue'
データ フレーム 値 欠損 値 調べる	df.isna()
色 差別 ない グラフ 色 青 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リスト 番号 付け する	enumerate(aList)
カウンタ 項目 数	len(aCounter)
イテラブル 配列 散布 図 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>')
折れ線 グラフ 描画 し その 色 ライトグリーン 指定 する	plt.plot(データ列, データ列2, color='lightseagreen')
丸 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='o')
グラフ 実線 つける	plt.axhline(y=0, linestyle='solid')
リスト データ 列 散布 図 明るい 色 描く	plt.plot(xdata, ydata, c='bright')
オプション 右 三 角 マーカー 加える	marker = '>'
データ 列 ユニーク な 値 個数	ds.nunique()
黒い クロス 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
ヒストグラム 描画 し その 色 ミディアムスプリンググリーン 設定 する	plt.hist(データ列, color='mediumspringgreen')
リスト リスト パステル 調 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
ヒストグラム 描画 し その 色 スプリング グリーン 設定 する	plt.hist(データ列, color='springgreen')
プロット 色 濃く する	sns.set(pallete='deep')
日付 時刻 データ 日 前 する	aDatetime - datetime.timedelta(days=n)
前もって 大文字 小文字 無視 し 正規 表現 コンパイル する	re.compile(pattern, flag=re.IGNORECASE)
データ フレーム 複数 列 まとめ た グループ	df.groupby(columns)
組 番目 以降 部分 取り出す	aTuple[n:]
折れ線 グラフ 色 真紅 設定 する	plt.plot(データ列, データ列2, color='crimson')
リスト 配列 折れ線 カラー コード 描画 する	plt.plot(xdata, ydata, color=rgb)
オプション グラフ 色 ライトゴールドロディイエロー 設定 する	color = 'lightgoldenrodyellow'
ゼロ 埋め さ れ た 整数 型 配列	np.zeros(要素数, dtype=np.int)
全 八 進 数字	string.octdigits
アルファ 折れ線 グラフ プロット する	plt.plot(xdata, ydata, alpha=alpha)
ビン 数 ヒストグラム 描く	plt.hist(データ列, bins=n)
全 要素 初期 値 初期 化 さ れ た 配列	np.full(要素数, 初期値, dtype=np.int)
縦 棒グラフ 積み上げ する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
カウンタ 同士 和 集合 計算 する	aCounter | aCounter2
オレンジ レッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='orangered')
集合 エラー なく 値 取り除く	aSet.discard(element)
右 シフト する	n >> n2
カウンタ 少ない 順 列挙 する	aCounter.most_common()[::-1]
ヒストグラム 描画 し その 色 フクシア する	plt.hist(データ列, color='fuchsia')
ヒストグラム 描画 し その 色 グレー 変更 する	plt.hist(データ列, color='grey')
折れ線 グラフ 描画 し その 色 ドジャーブルー 設定 する	plt.plot(データ列, データ列2, color='dodgerblue')
日付 データ 形式 文字 列 変換 する	aDate.isoformat()
データ フレーム カテゴリ データ カラム 抽出 する	df.select_dtypes('object')
リスト リスト 境界 値 分割 する	pd.cut(aList, aList)
オプション グラフ 色 シーグリーン 指定 する	color = 'seagreen'
ヒストグラム 色 デピンク セット する	plt.hist(データ列, color='deeppink')
タプル 番目 番目 部分	aTuple[n:n2]
データ フレーム リスト カラム 中 いくつ 文字 列 ある カウント する	df[aList].isin([value]).sum()
折れ線 グラフ 描画 し その 色 ゴールデン ロッド 設定 する	plt.plot(データ列, データ列2, color='goldenrod')
データ フレーム それぞれ グループ ごと 個数 求める	df.groupby(column).count()
つ オブジェクト 等しい どう 確認 する	obj == obj2
リスト リスト 散布 図 文字 列 凡例 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
オプション 未 入力 値 含める	dropna = True
折れ線 グラフ 印 する	plt.plot(データ列, データ列2, marker='v')
配列 ビン 数 分割 する	pd.cut(aArray, n)
オプション グラフ 色 パウダー ブルー 指定 する	color = 'powderblue'
形式 ファイル データ フレーム 読む	pd.read_json(filename, orient='records', lines=True)
折れ線 グラフ 描画 し 色 ダークシアグリーン 設定 する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線 グラフ 左 三 角 マーカー サイズ 変更 する	plt.plot(データ列, データ列2, marker='<', markersize=n)
ミディアムターコイズ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mediumturquoise')
ライト シアン ヒストグラム 色 指定 する	plt.hist(データ列, color='lightcyan')
折れ線 グラフ ポイント 印 黄色く する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
散布 図 赤い ポイント マーカー 使う	plt.plot(xdata, ydata, marker='.', c='r')
濃い 色 使っ 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
カウンタ 高 頻出 方 列挙 する	aCounter.most_common()
データ フレーム データ 列 横 方向 つなぐ	pd.concat([df, ds], axis=1)
線 グラフ 描画 し その 色 ダーク カーキ 設定 する	plt.plot(データ列, データ列2, color='darkkhaki')
ベクトル 行 ごと 最大 値	np.max(aArray, axis=1)
暗い 赤色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkred')
データ フレーム 複数 列 昇順 ソート する	df.sort_values(by=column, ascending=True)
リスト リスト 散布 図 カラー コード 四角 マーカー プロット する	plt.plot(xdata, ydata, marker='s', c=rgb)
浮動 小数点 数 負 数	x < 0
データ フレーム 最後 列 除く	df[df.columns[:-1]]
プロット カラー パレット パステル 調 する	sns.set(pallete='pastel')
データ 列 位 丸め 整数 型 する	ds.round(-3).astype(int)
年月日 時刻 日付 時刻	datetime.datetime(年, 月, 日, 時, 分, 秒)
以下 または 以上 判定 する	n <= n2 or n >= n3
線 グラフ 描画 し 色 赤 指定 する	plt.plot(データ列, データ列2, color='red')
折れ線 グラフ 描画 し 色 スラグレー 設定 する	plt.plot(データ列, データ列2, color='slategray')
ふたつ 集合 差 集合	aSet.difference(aSet2)
色 差別 ない 色 赤 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
折れ線 グラフ 星 印 線 幅 設定 する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
散布 図 赤い ダイアモンドマーカー 用い 描画 する	plt.plot(xdata, ydata, marker='D', c='r')
カウンタ ユニーク な 項目 リスト し 得る	list(aCounter)
アルファベット 全部 使う	string.ascii_letters
浮動 小数点 数 小数点 以下 第 一 位 丸める	round(x, 1)
辞書 辞書 項目 更新 する	aDict.update(aDict2)
散布 図 ポイント マーカー 用いる	plt.plot(xdata, ydata, marker='.')
文字 列 文字 調べる	s.isascii()
赤い マーカー リスト データ 列 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
文字 列 右側 部分 文字 列	s.endswith(sub)
スカイ ブルー ヒストグラム 色 指定 する	plt.hist(データ列, color='skyblue')
データ フレーム リスト 列 中 文字 列 文字 列 いくつ 存在 する 求める	df[aList].isin([value, value2]).sum()
マッピング コピー する	dict(aDict)
日付 データ 秒 加算 する	aDate + datetime.timedelta(seconds=n)
文字 列 数値	s.isnumeric()
文字 列 青色 表示 する	print(f'\033[34m{value}\033[0m')
アクアマリン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='aquamarine')
ヒストグラム 描画 し その 色 パールゴールデンロッド する	plt.hist(データ列, color='palegoldenrod')
実数 ノルム	math.hypot(x, y)
オリーブ色 ヒストグラム 描画 する	plt.hist(データ列, color='olive')
折れ線 グラフ 描画 し その 色 ペールグリーン 設定 する	plt.plot(データ列, データ列2, color='palegreen')
リスト 文字 列 位置 エラー なく 使う	aList.index(element) if element in aList else -1
ヒストグラム 色 オリベドラブ 設定 する	plt.hist(データ列, color='olivedrab')
リスト リスト カラー コード パステル 調 の 描く	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
破線 ヒストグラム 描画 する	plt.hist(データ列, linestyle='dashed')
オプション フローラルホワイト 色 用いる	color = 'floralwhite'
データ フレーム 各 カラム 毎 グループ 化 し 列 個数 求める	df.groupby(column)[column2].count()
データ フレーム 列 破壊 的 ソート する	df.sort_values(by='A', inplace=True)
タプル 引数 展開 し プリント する	print(*aTuple)
オプション グラフ 色 紺 設定 する	color = 'darkblue'
クラス サブ 型 確認 する	issubclass(サブクラス, クラス)
データ フレーム 列 値 グループ 化 し 要約 統計 量 求める	df.groupby('A').describe()
オプション グラフ 色 ホワイトスモーク 変更 する	color = 'whitesmoke'
日付 時刻 データ 時刻	aDatetime.time()
マッピング 項目 名 値 もしくは 要素 得る	aDict.get(key, element)
数値 黒色 する	f'\033[30m{value}\033[0m'
ヒストグラム 一 点 鎖線 用い 描画 する	plt.hist(データ列, linestyle='dashbot')
黒い 右 三 角 マーカー リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c='k')
ファイル パス バイナリ できる よう オープン する	open(filepath, mode='rb')
オプション グラフ 色 ホワイトスモーク 設定 する	color = 'whitesmoke'
文字 列 部分 文字 列 終わる 調べる	s.endswith(sub)
リスト リスト 色 差別 ない グラフ 描画 し その 色 青く する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
文字 列 日付 データ 変換 する	pd.to_datetime(s)
データ フレーム エクセルファイルファイル 用い ファイル 書き込む	df.to_excel(filename)
折れ線 グラフ 緑色 右 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
暗い 色 折れ線 グラフ 描い 線 幅 セット する	plt.plot(xdata, ydata, linewidth=n, color='dark')
折れ線 グラフ 描画 し その 色 パウダー ブルー 指定 する	plt.plot(データ列, データ列2, color='powderblue')
文字 列 中 ケース 無視 し 正規 表現 全て マッチ 使う	re.findall(pattern, s, flags=re.IGNORECASE)
折れ線 グラフ 四角 マーカー 大き さ 変更 する	plt.plot(データ列, データ列2, marker='s', markersize=n)
データ フレーム 列 と列 重複 あれ 消す	df.drop_duplicates(subset=[column, column2])
散布 図 パステル 調 色 マーカー 用いる	plt.plot(xdata, ydata, c='pastel')
集合 補 集合	aSet.difference(aSet2)
本日 ローカル な 日付 時刻	datetime.datetime.today()
配列 間 各 要素 最小公倍数 求める	np.lcm(aArray, aArray2)
ファイル ストリーム 読み込ん する	file = open(filepath)
折れ線 グラフ 色 マルーン する	plt.plot(データ列, データ列2, color='maroon')
データ フレーム 列 文字 列 長 列 見る	df[col].str.len()
日付 時刻 データ 日 分 加算 する	aDatetime + datetime.timedelta(days=n)
リスト データ 列 散布 図 赤い 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
赤い 丸 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='o', c='r')
リスト 空か	len(aList) == 0
カウンタ 正 数 残す	+aCounter
折れ線 グラフ 黄色い ダイアモンドマーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
散布 図 赤色 四角 マーカー 用いる	plt.plot(xdata, ydata, marker='s', c='r')
折れ線 グラフ 色 ピンク 設定 する	plt.plot(データ列, データ列2, color='pink')
双方向 キュー 先頭 要素 付け加える	deq.appendleft(element)
ディムグレー ヒストグラム 色 設定 する	plt.hist(データ列, color='dimgrey')
線 グラフ 描画 し その 色 スプリング グリーン 指定 する	plt.plot(データ列, データ列2, color='springgreen')
データ フレーム 値 欠損 値	df.isna()
二 次元 リスト	[[0] * n for _ in range(n2)]
グラフ 色 暗く する	sns.set(pallete='dark')
ファイル 閉じる	f.close()
オプション 白色 使う	color = 'white'
オプション 大 バツ マーカー 使用 する	marker = 'X'
文字 列 小文字 する	s.casefold()
データ フレーム つ 列 整列 し 更新 する	df.sort_values(by=['A', 'B'], inplace=True)
データ フレーム リスト 列 ヒートマップ 描画 する	sns.heatmap(df[aList].corr())
データ フレーム 表示 する とき 行 データ フレーム 表示 できる よう する	pd.set_option('display.max_rows', n)
ポイント マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='.')
黒色 菱形 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D', c='k')
データ フレーム 昇順 列 用い 破壊 的 ソート する	df.sort_values(by=column, ascending=True, inplace=True)
赤い 色 差別 ない 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
行列 累積 積 求める	np.cumprod(aArray)
グラフ 用途 スライド 設定 する	sns.set(context='talk')
データ フレーム カラム 中央 値	df[col].median()
双方向 キュー 右側 要素 追加 する	deq.append(element)
オプション バッファリング サイズ 設定 する	buffering = 4096
書式 引数 フォーマット する	formatText.format(*args)
データ フレーム リスト カラム 未 入力 値 最 頻 値 埋める	df[aList].fillna(df[aList].mode().iloc[0])
破壊 的 列 データ フレーム 昇順 ソート する	df.sort_values(by='A', ascending=True, inplace=True)
真 上位 集合 調べる	aSet > aSet2
データ フレーム 列 破壊 的 並べる	df.sort_values(by=column, inplace=True)
セット どれ どう 調べる	n in aSet
折れ線 グラフ 描画 し 色 白く する	plt.plot(データ列, データ列2, color='w')
リスト 番目 番目 得る	aList[n:n2]
ヒストグラム 色 赤 設定 する	plt.hist(データ列, color='red')
文字 列 中 ひとつ 非 アルファベット 含ま れる 確認 する	any(not c.isalpha() for c in s)
グラフ カラー パレット 暗く する	sns.set(pallete='dark')
ヒストグラム 描画 し その 色 ダーク オレンジ 設定 する	plt.hist(データ列, color='darkorange')
行列 列 ごと 合計 値	np.sum(aArray, axis=0)
ヒストグラム 描き ビン 設定 する	plt.hist(データ列, bins=n)
リスト リスト 色 差別 ない 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
オプション グラフ 色 モカシン 指定 する	color = 'moccasin'
散布 図 赤い クロス マーカー 使う	plt.plot(xdata, ydata, marker='x', c='r')
変数 数式 インテグラル 行う	sympy.integrate(e, z)
データ フレーム 表示 する とき 折り返し オフ 指定 する	pd.set_option('expand_frame_repr', False)
オプション スラグレー 色 設定 する	color = 'slategrey'
オブジェクト バイト サイズ 確認 する	sys.getsizeof(obj)
両端 キュー 先頭	deq[0]
グラフ 描画 暗い カラー パレット 用いる	sns.set(pallete='dark')
線 グラフ 描画 し その 色 ダーク バイオレット 設定 する	plt.plot(データ列, データ列2, color='darkviolet')
配列 数列 カラー コード 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
データ 列 記述 統計 量	ds.describe()
オプション アンティーク ホワイト グラフ 色 設定 する	color = 'antiquewhite'
黄色い 四角 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
オプション シルバー 色 用いる	color = 'silver'
データ 列 個 ビニング し ラベル つける	pd.cut(ds, n, labels=names)
データ 列 折れ線 グラフ 描画 し マーカー 下 三角 印 する	plt.plot(データ列, データ列2, marker='v')
ダーク レッド 色 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkred')
明るい 色 赤 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
データ フレーム 列 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby('A')]
文字 列 全体 正規 表現 マッチ する 見る	re.fullmatch(pattern, s)
イテラブル 数列 使っ 色 差別 ない 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
オプション 標準 出力 出力 先 する	file = sys.stdout
データ フレーム それぞれ グループ 毎 最大 値	df.groupby(column).max()
青色 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
データ フレーム リスト カラム 文字 列 する	df[aList].replace(s, np.nan)
コマンド フラグ 状態	sys.flags
カラム 欠損 値 最小 値 補う	ds.fillna(ds.min())
ゴールデン ロッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='goldenrod')
グラフ 使用 する フォント 日本語 設定 する	sns.set(font='IPAexGothic')
初期 値 全 要素 初期 化 さ れ た 行列	np.full(要素数, 初期値, dtype=np.int)
列 用い で データ フレーム 大きい 順 ソート する	df.sort_values(by=column, ascending=False)
文字 列 空白 区切る	s.split()
折れ線 グラフ 丸 マーカー 用いる	plt.plot(データ列, データ列2, marker='o')
日付 時刻 データ 時間 分 加算 する	aDatetime + datetime.timedelta(hours=n)
折れ線 グラフ 黒い ダイアモンドマーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
オプション ゴールデン ロッド グラフ 色 設定 する	color = 'goldenrod'
オプション 色 マルーン 設定 する	color = 'maroon'
双方向 キュー クリア する	deq.clear()
ヒストグラム 色 モカシン 変更 する	plt.hist(データ列, color='moccasin')
タプル 展開 し プリント する	print(*aTuple)
オプション 標準 出力 出力 する	file = sys.stdout
日付 時刻 データ 秒 分 減算 する	aDatetime - datetime.timedelta(seconds=n)
折れ線 グラフ 描画 し その 色 マゼンタ 指定 する	plt.plot(データ列, データ列2, color='magenta')
イテラブル リスト パステル 調 折れ線 グラフ プロット し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リスト リスト 淡い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
実数 万 位 丸める	round(x, -4)
バイナリ 書き込み モード 用い ファイル オープン する	open(filepath, mode='wb')
行列 行 ごと 最小 値	np.min(aArray, axis=1)
散布 図 赤い 左 三 角 マーカー 使っ 描画 する	plt.plot(xdata, ydata, marker='<', c='r')
データ フレーム リスト 列 中 ある 文字 列 合計 数える	df[aList].isin([value]).sum()
ブルー バイオレット 色 ヒストグラム 描画 する	plt.hist(データ列, color='blueviolet')
オブジェクト リスト タプル	isinstance(obj, (list)
集合 列 追加 更新 する	aSet.update(iterable)
線 グラフ 描画 し その 色 ドジャーブルー 指定 する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線 グラフ マーカー 赤く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
データ フレーム 列 と列 重複 あれ マスク する	df.duplicated(subset=[column, column2])
リスト 数列 散布 図 黒色 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c='k')
折れ線 グラフ 描画 し 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightseagreen')
データ フレーム 指定 さ れ た 列 選ぶ	df[[column, column2, column3, column4]]
データ 列 時間 日付 データ 変換 する	pd.to_datetime(ds, unit='s', utc=True)
データ 列 中 合計 数える	ds.isna().sum()
明るい 色 散布 図 描画 する	plt.plot(xdata, ydata, c='bright')
組 要素 小さい 方 ソート する	sorted(aTuple, reverse=True)
データ フレーム 列 名前 列挙 する	df.columns
オプション チョコレート 色 使用 する	color = 'chocolate'
ライト グレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightgray')
データ フレーム 欠損 値 最 頻 値 設定 する	df.fillna(df.mode().iloc[0])
割り切れる どう 調べる	n % n2 == 0
エラー なく 辞書 キー 値 得る	aDict.get(key, None)
スピアマン 順位 相関 係数 データ フレーム リスト 列 相関 行列 求める	df[aList].corr(method='spearman')
折れ線 グラフ 色 シーグリーン 変更 する	plt.plot(データ列, データ列2, color='seagreen')
データ フレーム モード 埋める	df.fillna(df.mode().iloc[0])
日付 時刻 データ 木曜日 調べる	aDatetime.weekday() == 3
リスト リスト 散布 図 カラー コード バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c=rgb)
年 日付 時刻	datetime.datetime(year=year, month=1, day=1)
黒い パステル 調 グラフ プロット する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
ヒストグラム 描画 し その 色 オレンジ 設定 する	plt.hist(データ列, color='orange')
オプション コーンズシルク 色 使う	color = 'cornsilk'
折れ線 グラフ 描画 し その 色 茶色 指定 する	plt.plot(データ列, データ列2, color='brown')
データ フレーム 列 大きく 少ない 行 抽出 する	df[(x < df[column]) & (df[column] < x2)]
ファイル 全体 行 ごと 分割 し リスト 変換 する	[s.strip() for s in f.readlines()]
文字 列 内 ひとつ 英数字 含ま れる 調べる	any(c.isalnum() for c in s)
線 グラフ 色 ブランチドアーモンド 変更 する	plt.plot(データ列, データ列2, color='blanchedalmond')
文字 列 先頭 部分 文字 列 除く	s.lstrip(sub)
データ フレーム 行 目 削除 し 入れ替える	df.drop(n, axis=0, inplace=True)
文字 列 左端 空白 取り除く	s.lstrip(' ')
線 グラフ 色 コーンズシルク 変更 する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線 グラフ 黄色い マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
データ フレーム リスト 列 空文字 欠損 値 変換 し ドロップ する	df[aList].replace('', np.nan).dropna()
イテラブル 個 ランダム 選ぶ	random.choice(iterable)
データ 列 分散	ds.var()
リスト 各 要素 双方向 キュー 右側 付け加える	deq.extend(iterable)
既存 ファイル パス 追加 できる よう 用い オープン する	open(filepath, mode='a', encoding='euc_jp')
折れ線 グラフ 描画 し その 色 ミディアムオーキッド 設定 する	plt.plot(データ列, データ列2, color='mediumorchid')
赤い 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
グラフ 破線 つける	plt.axvline(x=0, linestyle='dashed')
オプション グラフ 色 ライム セット する	color = 'lime'
データ 列 リスト 散布 図 描い 四角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='s', c=rgb)
最小 値 データ フレーム リスト カラム 未 入力 値 置き換える	df[aList].fillna(df[aList].min())
小数点 数 逆 双曲線 正接	math.atanh(x)
一 桁 数 調べる	-9 <= n <= 9
オプション グラフ 色 ミスティローズ 変更 する	color = 'mistyrose'
値 両端 キュー 中 ある 調べる	element in deq
ファイル バイナリ 書き込み ストリーム オープン し する	f = open(filepath, mode='wb')
文字 列 区切っ つ 数値 表示 する	print(value, value2, sep=s)
リスト イテラブル つなぐ	itertools.chain(iterable, iterable2)
ヒストグラム 描画 し 色 ダーク グレー 変更 する	plt.hist(データ列, color='darkgrey')
要素 セット メンバー で ない 調べる	element not in aSet
タプル 平均	sum(aTuple)/len(aTuple)
小数点 以下 桁 表示 する	print(':.1f'.format(x))
ヒストグラム 描画 し 色 プラム 設定 する	plt.hist(データ列, color='plum')
カウンタ それぞれ 項目 その カウント 列挙 する	aCounter.elements()
表 データ 二つ 列 用い で 降順 ソート する	df.sort_values(by=['A', 'B'], ascending=False)
文字 列 太字 プリント できる 文字 列 変換 する	f'\033[1m{value}\033[0m'
オプション シャルトリューズ 使う	color = 'chartreuse'
オプション ダークターコイズ 使用 する	color = 'darkturquoise'
文字 列 全体 パターン 複数 行 対応 マッチ する 確認 する	re.fullmatch(pattern, s, flags=re.MULTILINE)
イテラブル 配列 作る	np.array(iterable)
列 値 データ フレーム 含め 集約 する	df.groupby(column, dropna=False)
ファイル ストリーム 開い する	file = open(filepath)
リスト データ 列 カラー コード 暗い 描く	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
折れ線 グラフ 色 貝殻 する	plt.plot(データ列, データ列2, color='seashell')
リスト 数列 カラー コード 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
データ フレーム 指定 し た 列 リスト する	df[column].values.tolist()
文字 列 コロン 区切り 列挙 する	s.split(':')
標準 入力 用いる	sys.stdin
データ フレーム リスト カラム パーセンタイル 計算 する	df[aList].quantile(percent/100)
線 グラフ 色 ミディアムバイオレットレッド 指定 する	plt.plot(データ列, データ列2, color='mediumvioletred')
ふたつ 集合 共通 する 要素 なる 集合	aSet.intersection(aSet2)
散布 図 カラー コード バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c=rgb)
マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v')
データ フレーム 列 値 小さい 行 抽出 する	df[df[column] < x]
黒い 左 三 角 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='<', c='k')
明るい 折れ線 グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
配列 中央 値 ビン 分割 する	pd.qcut(aArray, 2)
オプション スラグレー 色 用いる	color = 'slategray'
数列 リスト 散布 図 左 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='<')
データ フレーム ランダム 重複 あり で 行 サンプリング する	df.sample(n, replace=True)
リスト リスト 散布 図 大き さ 描画 する	plt.scatter(xdata, ydata, s=n)
空 辞書	{}
黒色 濃い グラフ 描く	plt.plot(xdata, ydata, linestyle='deep', color='k')
リスト 淡い 色 ヒストグラム 描画 する	plt.hist(xdata, color='muted')
折れ線 グラフ 描画 し その 色 貝殻 設定 する	plt.plot(データ列, データ列2, color='seashell')
暗い 色 マーカー 散布 図 描く	plt.plot(xdata, ydata, c='dark')
整数 浮動 小数点 数 かける	x * y
リスト 最後 要素 取り除く	aList[:-n]
日付 データ 土曜日	aDate.weekday() == 5
データ フレーム 中 カラム 等量 個 ビニング する	pd.qcut(df[col], n)
リスト リスト 破線 グラフ 描画 し その 色 濃い する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
データ 列 日 求める	ds.dt.day
列 イテラブル ペア リスト する	itertools.zip_longest(iterable, iterable2)
ファイル 全体 行 分割 し 読み込む	f.readlines()
日付 データ 日 後 進める	aDate + datetime.timedelta(days=n)
暗い 折れ線 色 カラー コード 指定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
データ フレーム 各 列 毎 分類 し 列 標準 偏差 求める	df.groupby(column)[column2].std()
データ フレーム 行 目 行 目 抽出 する	df[start:end]
辞書 ソート し 形式 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
日付 データ データ フレーム カラム インデックス する	df.index = pd.DatetimeIndex(df[col])
オプション グラフ 色 深紅 設定 する	color = 'crimson'
菱形 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D')
データ 列 曜日 名	ds.dt.weekday_name
ヒストグラム カラー マップ 使う	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
リスト リスト 青色 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
淡い グラフ 色 カラー コード 指定 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
データ フレーム 列 かつ 列 で ある 行 取り出す	df[(df[column] == x) & (df[column2] == x2)]
オプション グラフ 色 カーキ 設定 する	color = 'khaki'
変数 緑色 プリント できる 文字 列 変換 する	f'\033[32m{value}\033[0m'
正規 分布 疑似 乱数 得る	random.normalvariate(mu=0.5, sigma=0.2)
プロット 凡例 文字 列 文字 列 表示 する	plt.legend([s, s2])
折れ線 グラフ 黄色い バツ 印 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線 グラフ 描画 し 色 スラグレー 変更 する	plt.plot(データ列, データ列2, color='slategray')
データ フレーム リスト 列 相関 行列 ヒートマップ 用い 描画 する	sns.heatmap(df[aList].corr())
ヒストグラム 描画 し その 色 ライム グリーン 指定 する	plt.hist(データ列, color='limegreen')
リスト 配列 暗い 折れ線 グラフ プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
データ フレーム 中 日付 データ 文字 列 ある 調べる	df.isin([value, value2])
リスト データ 列 散布 図 プロット し マーカー 色 濃い セット する	plt.plot(xdata, ydata, c='deep')
カウンタ 要素 増やす	aCounter[element] += 1
リスト 列 選ぶ	df[column].values.tolist()
破線 ヒストグラム 線 スタイル 指定 する	plt.hist(データ列, linestyle='dashed')
オプション ヘッダ 連 番 設定 する	header = None
データ フレーム リスト 列 相関 行列 スピアマン 用い	df[aList].corr(method='spearman')
データ フレーム 列 グループ 化 し 要約 統計 量 求める	df.groupby(column).describe()
実行 適切 終了 する	sys.exit(0)
線 グラフ 色 耐火 レンガ 変更 する	plt.plot(データ列, データ列2, color='firebrick')
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 個数 求める	df.groupby([column, column2], as_index=False).count()
書き込み 用 ファイル 開く	open(filepath, mode='w', encoding='euc_jp')
折れ線 グラフ 色 アクア 指定 する	plt.plot(データ列, データ列2, color='aqua')
リスト リスト 散布 図 描い マーカー 大 バツ 指定 する	plt.plot(xdata, ydata, marker='X')
線 幅 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
空列	[]
二つ 文字 列 改行 区切っ プリント する	print(value, value2, sep='\n')
スノー 色 ヒストグラム 描画 する	plt.hist(データ列, color='snow')
折れ線 グラフ 色 貝殻 設定 する	plt.plot(データ列, データ列2, color='seashell')
文字 列 カンマ 分割 し 列挙 する	s.split(',')
変数 緑色 表示 できる 文字 列 する	f'\033[32m{value}\033[0m'
ヒストグラム 描画 し 色 ライトスレイグレー 指定 する	plt.hist(データ列, color='lightslategray')
データ フレーム 列 文字 列 リネーム する	df.rename(columns={column: name})
グラフ 凡例 付ける	plt.legend()
ベクトル 間 要素 ごと 最大公約数	np.gcd(aArray, aArray2)
ライトグリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightseagreen')
エクセルファイルファイル 番目 シート データ フレーム 読む	pd.read_excel(filename, sheet_name=n)
既存 ファイル 用い 追加 できる よう オープン する	open(filepath, mode='a', encoding='shift_jis')
ファイル オープン する	open(filepath, encoding='utf-8')
折れ線 グラフ クロス マーカー 黒く する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
下 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v')
ヒストグラム 描画 し 色 ダーク バイオレット 設定 する	plt.hist(データ列, color='darkviolet')
日付 データ 分 分 加える	aDate + datetime.timedelta(minutes=n)
本日 日	datetime.datetime.today().day
両端 キュー リスト 変換 する	list(deq)
タプル キー 存在 する	key not in aDict
小数点 数 余弦	math.cos(x)
文字 列 タイトル ケース 調べる	s.istitle()
パステル 調 色 プロット 描画 使う	sns.set(pallete='pastel')
ファイル パス 付き 書き込み 用 オープン する	open(filepath, mode='w', encoding='utf_8_sig')
グラフ 一 点 鎖線 付ける	plt.axhline(y=0, linestyle='dashbot')
ヒストグラム 描画 し 色 レベッカパープル 設定 する	plt.hist(データ列, color='rebeccapurple')
軸 ラベル 指定 する	plt.xlabel(untitled)
折れ線 グラフ 色 バイオレット 設定 する	plt.plot(データ列, データ列2, color='violet')
文字 列 全て アルファベット 判定 する	s.isalpha()
日付 時刻 データ 月曜日 調べる	aDatetime.weekday() == 0
オプション シアン 色 用いる	color = 'cyan'
グラフ カラー パレット 指定 する	sns.set(pallete=palleteName)
ヒストグラム 色 サンディーブラウン 変更 する	plt.hist(データ列, color='sandybrown')
タプル 項目 名 要素 設定 する	aDict[key] = element
折れ線 グラフ 描画 し その 色 ミディアムアクアマリン する	plt.plot(データ列, データ列2, color='mediumaquamarine')
データ フレーム 中 列 等しい 量 なる よう ビン 数 ビン 分割 する	pd.qcut(df[col], n)
ロージーブラウン 色 ヒストグラム 描画 する	plt.hist(データ列, color='rosybrown')
黒い バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='k')
リスト 中央 値 ビン 分割 する	pd.qcut(aList, 2)
リスト イテラブル 淡い グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
オプション グラフ 色 スカイ ブルー 変更 する	color = 'skyblue'
ヒストグラム 描画 し その 色 ダーク グレー 変更 する	plt.hist(データ列, color='darkgray')
数列 リスト 散布 図 黒い 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c='k')
折れ線 グラフ 描画 し 色 ゴールデン ロッド 変更 する	plt.plot(データ列, データ列2, color='goldenrod')
データ フレーム 列 直前 値 設定 する	df[col].fillna(method='ffill')
出力 ストリーム 全体 行 単位 分割 し リスト する	[s.strip() for s in f.readlines()]
折れ線 グラフ 下 三角 印 黒く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
ヒストグラム 描画 し その 色 アイボリー 設定 する	plt.hist(データ列, color='ivory')
データ フレーム 列 値 グループ 化 し 要約 統計 量 算出 する	df.groupby('A').describe()
実行 結果 緑色 プリント できる 文字 列 変換 する	f'\033[32m{value}\033[0m'
ビン 数 リスト ビン 分割 する	pd.cut(aList, n)
オプション バツ マーカー 描画 する	marker = 'x'
柱状 図 描画 し 半 透明 する	plt.hist(データ列, alpha=0.5)
カラー コード バツ マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='x', c=rgb)
折れ線 グラフ 色 紺 設定 する	plt.plot(データ列, データ列2, color='darkblue')
行 標準 入力 読む	sys.stdin.readline()
データ フレーム 列 最初 カテゴリー 除外 し ダミー 変数 変換 する	pd.get_dummies(df[column], drop_first=True)
年 月 日付 時刻 変換 する	datetime.datetime(year=year, month=month, day=1)
値 集合 含ま れ ない 調べる	element not in aSet
一番 左側 列 データ フレーム 除く	df[df.columns[1:]]
太字 リスト 表示 する	print(f'\033[1m{value}\033[0m')
文字 列 パターン マッチ さ せる	re.match(pattern, s)
折れ線 グラフ 色 ダークオーキッド 指定 する	plt.plot(データ列, データ列2, color='darkorchid')
ヒストグラム 描画 し その 色 パールゴールデンロッド 設定 する	plt.hist(データ列, color='palegoldenrod')
オブジェクト 浮動 小数点 数 クラス	isinstance(obj, float)
データ 列 未 入力 値 埋める	ds.fillna(x)
オプション ミディアムバイオレットレッド 色 変更 する	color = 'mediumvioletred'
折れ線 グラフ 印 青く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
データ 列 文字 列 長 列 見る	ds.str.len()
全 要素 行列	np.ones(行数, 列数, dtype=np.int)
線 グラフ 描画 し その 色 ライト シアン 設定 する	plt.plot(データ列, データ列2, color='lightcyan')
ヒストグラム 描画 し その 色 ブラック 設定 する	plt.hist(データ列, color='black')
日付 データ 秒 後 進める	aDate + datetime.timedelta(seconds=n)
データ フレーム 表示 する とき 小数点 以下 表示 精度 指定 する	pd.set_option('precision', n)
リスト 昇順 並べる	sorted(aList, reverse=False)
リスト リスト 折れ線 描画 し ラベル付け する	plt.plot(xdata, ydata, label=untitled)
オプション パレットトルコイズ 色 使う	color = 'paleturquoise'
オプション 番目 カラム インデックス 設定 する	index_col = n
数列 配列 散布 図 カラー コード 下 三角 マーカー 描く	plt.plot(xdata, ydata, marker='v', c=rgb)
折れ線 グラフ バツ 印 青く する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
文字 列 部分 文字 列 区切っ 文字 列 リスト 変換 する	s.split(sub)
オブジェクト プロパティ 値 求める	getattr(obj, プロパティ名)
数値 シアン 出力 する	print(f'\033[36m{value}\033[0m')
データ フレーム リスト 列 前 行 値 設定 する	df[aList].fillna(method='ffill')
辞書 カウンタ 変換 する	collections.Counter(aDict)
スクリプト ファイル 同じ ディレクトリ ファイル パス パス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
イテラブル 配列 散布 図 暗い 色 用い 描画 する	plt.plot(xdata, ydata, c='dark')
データ フレーム データ フレーム 列 横 方向 つなぐ	pd.concat([df, ds], axis=1)
データ フレーム 列 リスト 含ま れる 行 抽出 する	df[df[column].isin(aList)]
データ フレーム 列 列 で 降順 並べる	df.sort_values(by=['A', 'B'], ascending=False)
データ フレーム 表示 する とき ヘッダー 行 右寄せ 変更 する	pd.set_option('colheader_justify', 'right')
実数 整数 調べる	x.is_integer()
折れ線 グラフ 四角 印 サイズ 設定 する	plt.plot(データ列, データ列2, marker='s', markersize=n)
ヒストグラム 描画 し 色 茶色 設定 する	plt.hist(データ列, color='brown')
オプション グラフ 色 淡い ピンク色 設定 する	color = 'lightpink'
線 グラフ 色 ミディアムスプリンググリーン 設定 する	plt.plot(データ列, データ列2, color='mediumspringgreen')
ヒストグラム 描画 し その 色 レモン シフォン 変更 する	plt.hist(データ列, color='lemonchiffon')
データ 列 リスト 散布 図 黒い 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c='k')
文字 列 番目	s[n]
ヒストグラム 描画 し その 色 ホワイトスモーク する	plt.hist(データ列, color='whitesmoke')
データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
折れ線 グラフ ポイント 印 赤く する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
カラー コード ポイント マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c=rgb)
表 データ 行 行 取り出す	df.loc[n]
データ フレーム 最初 列 除く	df[df.columns[1:]]
折れ線 グラフ 黒い 左 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
インデックス 付け ず データ フレーム ファイル 保存 する	df.to_csv(filename, index=None)
オプション グラフ 色 インディアン レッド 指定 する	color = 'indianred'
データ 列 リスト リスト 値 応じ 散布 図 色 変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
ヒストグラム 色 ダーク オリーブ グリーン する	plt.hist(データ列, color='darkolivegreen')
カウンタ 上位 列挙 する	aCounter.most_common(k)
ヒストグラム 描画 し その 色 ラベンダー 設定 する	plt.hist(データ列, color='lavender')
リスト 数列 淡い グラフ 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
オプション ダーク グレー 色 設定 する	color = 'darkgrey'
ヒストグラム 描画 し その 色 フローラルホワイト セット する	plt.hist(データ列, color='floralwhite')
カデット ブルー ヒストグラム 色 設定 する	plt.hist(データ列, color='cadetblue')
散布 図 カラー コード 丸 マーカー 使う	plt.plot(xdata, ydata, marker='o', c=rgb)
カウンタ 辞書 引く	aCounter.subtract(aDict)
配列 元 全 要素 配列	np.ones_like(aArray)
線 グラフ 描画 し 色 コーラル 指定 する	plt.plot(データ列, データ列2, color='coral')
オプション 四角 印 使う	marker = 's'
ファイル 名 テキストファイル 確認 する	filename.endswith('.txt')
文字 列 最初 使う	s[0]
長 さ リスト	[0] * n
整数 型 全 要素 初期 化 さ れ た 行列	np.zeros(行数, 列数, dtype=np.int)
ファイル 付き オープン する	open(filepath, encoding='utf_8_sig')
オプション ペルー 色 使う	color = 'peru'
データ フレーム インデックス 名前 リスト	df.index
文字 列 中 部分 文字 列 存在 する	sub in s
散布 図 四角 マーカー 使う	plt.plot(xdata, ydata, marker='s')
二 次元 リスト 転置 行列 算出 する	[list(x) for x in list(zip(*aList))]
オプション ダイアモンド 印 使う	marker = 'D'
進 文字 列 整数 する	int(s, 8)
折れ線 グラフ 描画 し その 色 サンディーブラウン 設定 する	plt.plot(データ列, データ列2, color='sandybrown')
イテラブル リスト 濃い グラフ 描画 し 色 黒 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
散布 図 大 バツ マーカー プロット する	plt.plot(xdata, ydata, marker='X')
オプション グラフ 色 オールド レース 設定 する	color = 'oldlace'
ヒストグラム 色 プラム 設定 する	plt.hist(データ列, color='plum')
データ フレーム リスト カラム 中 含ま れる 日付 データ 数 数える	df[aList].isin([value]).sum()
文字 列 書式 日付 データ 変換 する	pd.to_datetime(s, format=fmt)
ファイル ファイル 名 どう 調べる	filename.endswith('.json')
アクア ヒストグラム 色 設定 する	plt.hist(データ列, color='aqua')
プロット 色 全般 的 淡く する	sns.set(pallete='muted')
折れ線 グラフ 色 黄 緑 設定 する	plt.plot(データ列, データ列2, color='chartreuse')
文字 列 全て 十 進 数字	s.isdecimal()
ヒストグラム 色 ナバホホワイト 指定 する	plt.hist(データ列, color='navajowhite')
データ フレーム 列 値 集約 し 列挙 する	[(name, group) for name, group in df.groupby('A')]
データ フレーム カラム 第 一 四 分 位 数	df[col].quantile(0.25)
データ フレーム 列 値 正規 表現 まとめ 変更 する	df[col].replace(pattern, repl, regex=True)
折れ線 グラフ 色 コーラル 指定 する	plt.plot(データ列, データ列2, color='coral')
タプル キー その 値 ペア 取り出す	aDict.items()
サイン 逆数	math.asin(x)
昇順 リスト 要素 ソート する	sorted(aList, reverse=False)
リスト 数列 破線 グラフ 描画 し その 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
オプション ゲインズボロ 色 使う	color = 'gainsboro'
入力 ストリーム 文字 読み込む	f.read(n)
ファイル パス 存在 する	os.path.exists(filepath)
マップ 値 要素 含ま れ いる	element in aDict.values()
ヒストグラム 色 ミディアムバイオレットレッド 変更 する	plt.hist(データ列, color='mediumvioletred')
シアン 色 ヒストグラム 描画 する	plt.hist(データ列, color='cyan')
ヒストグラム 描画 し その 色 ターコイズ 設定 する	plt.hist(データ列, color='turquoise')
正規 表現 マッチ し た 文字 列 新しい 文字 列 置き換える	re.sub(pattern, newsub, s)
リスト 行列 作る	np.array(aList)
実数 平方根	math.sqrt(x)
一番 右 列 データ フレーム 消す	df[df.columns[:-1]]
折れ線 グラフ 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgrey')
中央 値 データ フレーム 欠損 値 置換 する	df.fillna(df.median())
エポック 秒 データ 列 日付 型 変換 する	pd.to_datetime(ds, unit='s', utc=True)
データ フレーム 二つ 列 で 降順 ソート する	df.sort_values(by=['A', 'B'], ascending=False)
マッピング キー その 項目 ペア 取り出す	aDict.items()
ヒストグラム 描画 し その 色 ダーク バイオレット する	plt.hist(データ列, color='darkviolet')
乗 求める	n ** 3
複数 シート ファイル 読み込む	pd.read_excel(filename, sheet_name=[n, n2])
折れ線 グラフ 色 ダーク レッド 変更 する	plt.plot(データ列, データ列2, color='darkred')
データ フレーム リスト 列 中 日付 データ いくつ 含ま れる 数える	df[aList].isin([value, value2]).sum()
オプション 丸 マーカー 描画 する	marker = 'o'
オプション ライトゴールドロディイエロー 色 使う	color = 'lightgoldenrodyellow'
データ フレーム 中 列 ビン 数 用い ビン 分割 する	pd.cut(df[col], n)
標準 出力 出力 先 ターミナル 調べる	os.isatty(sys.stdin.fileno())
オプション 色 ブルー バイオレット 設定 する	color = 'blueviolet'
ミディアムターコイズ 色 ヒストグラム 描画 する	plt.hist(データ列, color='mediumturquoise')
加え データ フレーム 列 ワン ホット ベクトル 変換 する	pd.get_dummies(df[column], dummy_na=True)
オプション ピンク 使う	color = 'deeppink'
リスト 最後	aList[-1]
凡例 グラフ 入れる	plt.legend()
データ フレーム カラム 百 位 丸める	df[col].round(-2)
今日 年数 使う	datetime.datetime.today().year
折れ線 グラフ 星 印 大き さ 指定 する	plt.plot(データ列, データ列2, marker='*', markersize=n)
データ フレーム 欠損 値 直前 値 指定 する	df.fillna(method='ffill')
ヒストグラム 描画 し その 色 サドル ブラウン 指定 する	plt.hist(データ列, color='saddlebrown')
文字 列 文字 列 辞書 順 後 調べる	s > s2
文字 列 中 部分 文字 列 新しい 文字 列 全部 置換 する	s.replace(sub, newsub)
オプション シーグリーン 色 使う	color = 'seagreen'
正規 表現 大文字 小文字 無視 し 文字 列 先頭 マッチ さ せる	re.match(pattern, s, flags=re.IGNORECASE)
一 点 鎖線 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, linestyle='dashbot')
ダーク グレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkgrey')
折れ線 グラフ 描画 し その 色 青 緑 指定 する	plt.plot(データ列, データ列2, color='teal')
データ フレーム 指定 さ れ た 列 取り出す	df[[column]]
線 グラフ 描画 し その 色 ダークスレートブルー 設定 する	plt.plot(データ列, データ列2, color='darkslateblue')
浮動 小数点 数 十 六 進 文字 列 する	x.hex()
使用 する	import numpy as np
折れ線 グラフ 色 マゼンタ 設定 する	plt.plot(データ列, データ列2, color='magenta')
等しい	n == n2
ヒストグラム 描画 し その 色 青 緑 設定 する	plt.hist(データ列, color='teal')
文字 列 先頭 パターン 大文字 小文字 無視 し マッチ する 調べる	re.match(pattern, s, flags=re.IGNORECASE)
あらかじめ 正規 表現 コンパイル する	re.compile(pattern)
オブジェクト リスト タプル 調べる	isinstance(obj, (list)
データ フレーム リスト カラム 欠損 値 最小 値 埋める	df[aList].fillna(df[aList].min())
折れ線 グラフ 色 ライトゴールドロディイエロー 設定 する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
データ フレーム 列 並べ 先頭 する	df.sort_values(by=column, na_position='first')
文字 列 シーケンス 変換 し 改行 連結 する	'\n'.join(map(str, iterable))
オプション 色 アイボリー 設定 する	color = 'ivory'
変数 下線 付き プリント できる 文字 列 変換 する	f'\033[4m{value}\033[0m'
折れ線 グラフ 描画 し その 色 ティール 変更 する	plt.plot(データ列, データ列2, color='teal')
オプション スプリング グリーン グラフ 色 設定 する	color = 'springgreen'
オブジェクト 論理 値 クラス インスタンス 調べる	isinstance(obj, bool)
配列 最小 値	np.min(aArray)
オプション 印 変更 する	marker = 'v'
折れ線 グラフ 一 点 鎖線 設定 する	plt.plot(データ列, データ列2, linestyle='dashbot')
プログラム ファイル 名前 知る	sys.argv[0]
折れ線 グラフ 描画 し 色 ミディアムシアグリーン 変更 する	plt.plot(データ列, データ列2, color='mediumseagreen')
オプション ブラウン 使う	color = 'brown'
イテラブル 双方向 キュー 生成 する	collections.deque(iterable)
イテラブル 累積 し た 列 得る	itertools.accumulate(iterable, operator.mul)
オプション レベッカパープル 色 指定 する	color = 'rebeccapurple'
カウンタ 同士 交わり 演算 する	aCounter & aCounter2
暗い グラフ 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
実数 小数 部	math.modf(x)[0]
ヒストグラム 描画 し その 色 暗い 赤 設定 する	plt.hist(データ列, color='darkred')
付き 追加 できる よう 既存 ファイル パス オープン する	open(filepath, mode='a', encoding='utf_8_sig')
折れ線 グラフ 描画 し その 色 ライトゴールドロディイエロー 設定 する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
正 整数	n > 0
データ フレーム カラム どの 値 頻出 調べる	df[col].mode()
折れ線 グラフ 描画 し その 色 ミスティローズ 設定 する	plt.plot(データ列, データ列2, color='mistyrose')
暗い グラフ 色 黒く する	plt.plot(xdata, ydata, linestyle='dark', color='k')
オプション ライト コーラル 色 用いる	color = 'lightcoral'
文字 列 部分 文字 列 区切り 文字 列 リスト 変換 する	s.split(sub)
折れ線 グラフ 印 右 三 角 印 する	plt.plot(データ列, データ列2, marker='>')
線 グラフ 描画 し 色 ゲインズボロ 設定 する	plt.plot(データ列, データ列2, color='gainsboro')
ロイヤル ブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='royalblue')
行列 転置 行列	aArray.T
カラー コード 左 三 角 マーカー 配列 リスト 散布 図 プロット する	plt.plot(xdata, ydata, marker='<', c=rgb)
二つ データ フレーム 結合 する	pd.merge(df, df2)
空白 最後 文字 列 分割 する	s.rsplit()
ヒストグラム 描画 し その 色 ラベンダー 設定 する	plt.hist(データ列, color='lavender')
文字 列 示す エン コーディング ファイル パス 書き込み できる よう オープン する	open(filepath, mode='w', encoding=s)
リスト リスト 黒い パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
シーケンス 累積 する	itertools.accumulate(iterable, operator.mul)
データ 列 欠損 値 中央 値 設定 する	ds.fillna(ds.median())
文字 列 開始 位置 番目 終了 位置 番目 間 部分 文字 列 含ま れ ない どう 確認 する	s.find(sub, start, end) == -1
文字 列 最後 部分 文字 列 探す	s.rfind(sub)
イテラブル 色 差別 ない 色 ヒストグラム 描画 する	plt.hist(xdata, color='colorblind')
表 配列 する	df.values
タプル 末尾 取り除く	aTuple[:-1]
明るい グラフ 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
オプション グラフ 色 スチール ブルー 変更 する	color = 'steelblue'
文字 列 緑色 プリント できる 文字 列 変換 する	f'\033[32m{value}\033[0m'
ヒストグラム 色 ライトグリーン 設定 する	plt.hist(データ列, color='lightgreen')
項目 名 辞書 ある 調べる	key not in aDict
明るい グラフ 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
改行 せ ず 二つ 変数 プリント する	print(value, value2, end='')
文字 列 データ 変換 する	json.loads(b.decode('unicode-escape'))
折れ線 グラフ ポイント マーカー 使用 する	plt.plot(データ列, データ列2, marker='.')
ミッドナイト ブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='midnightblue')
カラー コード ダイアモンドマーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D', c=rgb)
折れ線 グラフ 色 紺碧 変更 する	plt.plot(データ列, データ列2, color='azure')
線 グラフ 色 カーキ 変更 する	plt.plot(データ列, データ列2, color='khaki')
線 グラフ 色 サドル ブラウン 設定 する	plt.plot(データ列, データ列2, color='saddlebrown')
列 累積 し た イテラブル 求める	itertools.accumulate(iterable, operator.mul)
明るい グラフ 色 青 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
オプション 色 白 セット する	color = 'white'
日付 時刻 データ 日付 見る	aDatetime.date()
折れ線 グラフ 描画 し その 色 アンティーク ホワイト 変更 する	plt.plot(データ列, データ列2, color='antiquewhite')
オプション グラフ 色 やわらかい 青 設定 する	color = 'cornflowerblue'
もしくは もしくは 等しい 調べる	x == 1 or x == 2 or x == 3
オプション グラフ 色 ミディアムシアグリーン セット する	color = 'mediumseagreen'
データ フレーム カラム 正規 分布 どの 程度 歪ん いる 見る	df[col].kurt()
ピアソン 相関 係数 データ フレーム 列 列 相関 行列	df[[column, column2]].corr(method='pearson')
数値 黄色 出力 する	print(f'\033[33m{value}\033[0m')
ヒストグラム 描画 し その 色 ミディアムアクアマリン 設定 する	plt.hist(データ列, color='mediumaquamarine')
折れ線 グラフ 描画 し その 色 暗い 赤 する	plt.plot(データ列, データ列2, color='darkred')
ファイル 全体 リスト する	[s.strip() for s in f.readlines()]
データ フレーム 列 用い 降順 破壊 的 整列 する	df.sort_values(by=column, ascending=False, inplace=True)
変数 数式 積分 する	sympy.integrate(e, z)
配列 リスト 作る	np.array(aList)
データ フレーム 列 値 一 度 置き換える	df[col].replace(ValueMap)
ファイル 用い 追加 できる よう 開く	open(filepath, mode='a', encoding='shift_jis')
実数 逆 双曲線 正接	math.atanh(x)
列 累加 し た 列	itertools.accumulate(iterable)
シエナ 色 ヒストグラム 描画 する	plt.hist(データ列, color='sienna')
列 と列 キー データ フレーム 内部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
タプル 内 要素 少なくとも 一つ 真	any(aTuple)
折れ線 グラフ スタイル 点線 指定 する	plt.plot(データ列, データ列2, linestyle='dotted')
左 三 角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='<')
実数 切り下げる	math.floor(x)
列 列 重複 取り除く	df.drop_duplicates(subset=[column, column2])
データ フレーム 列 中 いくつ 文字 列 存在 する 数える	df[col].isin([value]).sum()
オプション アリス ブルー 色 使う	color = 'aliceblue'
アイリス データセット ロード する	sns.load_dataset('iris')
二つ データ フレーム 列 と列 キー し 内部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
黒色 大 バツ マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='X', c='k')
折れ線 グラフ 三角 印 線 幅 指定 する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
スクリプト ファイル 絶対 パス	os.path.abspath(__file__)
文字 列 開始 位置 以降 部分 文字 列 始まる	s.startswith(sub, start)
データ フレーム 列 で 降順 並べ 直す	df.sort_values(by='A', ascending=False)
ヒストグラム 描画 し その 色 パールゴールデンロッド 指定 する	plt.hist(データ列, color='palegoldenrod')
本日 文字 列 フォーマット する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
折れ線 グラフ 青い マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
今日 月数	datetime.datetime.today().month
リスト 先頭	aList[0]
データ フレーム 列 正規 表現 文字 列 マッチ し ない 行 抽出 する	df[not df[column].str.match(s)]
データ フレーム 中 文字 列 文字 列 含ま れる 調べる	df.isin([value, value2])
データ フレーム 列 ソート し インデックス 振り 直す	df.sort_values(columns).reset_index(drop=True)
オプション グラフ 色 青 紫 設定 する	color = 'violet'
折れ線 グラフ 色 ライト サーモン 変更 する	plt.plot(データ列, データ列2, color='lightsalmon')
二つ 文字 列 プリント する	print(value, value2)
第 二 引数 ファイル 名前	sys.argv[1]
オプション ダークマゼンタ グラフ 色 する	color = 'darkmagenta'
実数 数 減算 する	x - y
折れ線 グラフ ダイアモンドマーカー 使う	plt.plot(データ列, データ列2, marker='D')
オプション 整数 型 使用 する	dtype = np.int
折れ線 グラフ 色 ペールグリーン 設定 する	plt.plot(データ列, データ列2, color='palegreen')
オプション ゴールド 色 設定 する	color = 'gold'
逆 行列	np.linalg.inv(aArray)
オプション ブラック 色 用いる	color = 'black'
文字 列 中 複数 行 対応 パターン マッチ し た 全て 文字 列 リスト 変換 する	re.findall(pattern, s, flags=re.MULTILINE)
ヒストグラム 描画 し その 色 アクア 指定 する	plt.hist(データ列, color='aqua')
文字 列 内 ひとつ 空白 含ま れる 確認 する	any(c.isspace() for c in s)
文字 列 全て 空白 なる 調べる	s.isspace()
配列 配列 黒い 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
文字 列 平仮名 調べる	('ぁ' <= ch <= 'ん')
オプション グラフ 色 ミディアムブルー セット する	color = 'mediumblue'
ゼロ 埋め し た 整数 型 配列	np.zeros(要素数, dtype=np.int)
環境 マック 調べる	sys.platform.startswith('darwin')
偶整数 列 得る	list(range(2, n, 2))
年 月 日 時 日付 時刻 オブジェクト 化 する	datetime.datetime(year=year, month=month, day=day, hour=hour)
リスト 下線 付き 化 する	f'\033[4m{value}\033[0m'
表 データ 先頭 行	df.head(n)
散布 図 黒い バツ マーカー 使う	plt.plot(xdata, ydata, marker='x', c='k')
デック 要素 エン キュー する	deq.appendleft(element)
線 グラフ 描画 し 色 ライト コーラル 設定 する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線 グラフ 色 タン 設定 する	plt.plot(データ列, データ列2, color='tan')
データ フレーム データ 列 連結 する	pd.concat([df, ds], axis=1)
列 値 表 グループ 化 し 各 グループ ごと 件数 知る	df.groupby(column).size()
ヒストグラム 描画 し その 色 紺碧 セット する	plt.hist(データ列, color='azure')
文字 列 最初 部分 文字 列 分割 し た とき 最初 文字 列	s.partition(sub)[0]
カンマ 区切り ファイル データ フレーム 読み込む	pd.read_csv(filename, sep=',')
複数 列 昇順 データ フレーム 整列 し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
既存 ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding='shift_jis')
キー 辞書 上 未 定義	key not in aDict
オプション ピンク色 使う	color = 'pink'
リスト 配列 黒い 色 差別 ない グラフ プロット する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
本日 月曜日 調べる	datetime.datetime.today().weekday() == 0
小数点 数 二 進 対数 算出 する	math.log2(x)
折れ線 グラフ 色 バリーウッド 変更 する	plt.plot(データ列, データ列2, color='burlywood')
折れ線 グラフ 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgray')
リスト 自身 長 さ 順列 得る	itertools.permutations(iterable, n)
集合 空か 調べる	len(aSet) == 0
ヒストグラム 色 レモン シフォン 指定 する	plt.hist(データ列, color='lemonchiffon')
データ フレーム 列 用い ソート し 更新 する	df.sort_values(by=column, inplace=True)
集合 別 集合 共通 要素 全て 取り除く	aSet.symmetric_difference_update(aSet2)
オプション タン 色 使う	color = 'tan'
商 余り 同時に 算出 する	divmod(x, y)
文字 列 正規 表現 区切る	re.split(pattern, s)
データ フレーム ファイル タブ 区切り 保存 する	df.to_csv(filename, sep='\t')
リスト リスト 散布 図 赤い 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c='r')
オプション 読み込む シート 名前 設定 する	sheet_name = names
データ フレーム リスト 列 パーセンタイル	df[aList].median()
リスト 配列 散布 図 黒い 下 三角 マーカー 描く	plt.plot(xdata, ydata, marker='v', c='k')
オプション ロイヤル ブルー グラフ 色 変更 する	color = 'royalblue'
オプション ライトスチールブルー 色 用いる	color = 'lightsteelblue'
マップ 項目 名 値 もしくは 要素 得る	aDict.get(key, element)
文字 列 中 部分 文字 列 出現 回数 数える	s.count(sub)
グラフ スライド 用 設定 する	sns.set(context='talk')
オプション コーンズシルク 使う	color = 'cornsilk'
文字 列 エポック 秒 日付 データ する	pd.to_datetime(s, unit='s', utc=True)
ファイル 書き込み モード 使っ オープン する	open(filepath, mode='w')
データ フレーム 列 ソート し 先頭 する	df.sort_values(by='A', na_position='first')
小数点 数 整数 部	math.modf(x)[1]
赤い 三角 マーカー 使っ 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
乱数 生成 系列 固定 する	random.seed(n)
ヒストグラム 描画 し 色 シアン 指定 する	plt.hist(データ列, color='cyan')
文字 列 ファイル 番目 カラム インデックス し 読み込む	pd.read_csv(filename, index_col=n)
データ フレーム 行 目 削除 し 更新 する	df.drop(n, axis=0, inplace=True)
折れ線 グラフ 描画 し 色 ミディアムターコイズ 設定 する	plt.plot(データ列, データ列2, color='mediumturquoise')
データ フレーム 日付 データ する	pd.to_datetime(df[col])
データ フレーム 列 まとめ た グループ	df.groupby('A')
オプション ブルー バイオレット 用いる	color = 'blueviolet'
データ フレーム 型 リスト データ 型 列 抽出 する	df.select_dtypes(include=typeList)
リスト 文字 列 変換 し 一つ する	''.join(map(str, iterable))
行列 転置 行列 算出 する	aArray.T
方程式 数式 変数 解 計算 する	sympy.solve(e, z)
リスト マゼンタ プリント する	print(f'\033[35m{value}\033[0m')
リスト リスト 散布 図 赤い ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D', c='r')
オプション ゴースト ホワイト 色 使う	color = 'ghostwhite'
データ 列 暗い 色 ヒストグラム 用い 描画 する	plt.hist(xdata, color='dark')
組 中 一番 大きい 値 計算 する	max(aTuple)
割り切れ ない 判定 する	n % n2 != 0
リスト リスト 淡い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
実線 折れ線 グラフ 変更 する	plt.plot(データ列, データ列2, linestyle='solid')
淡い 色 折れ線 グラフ プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='muted')
ヒストグラム 点線 描画 する	plt.hist(データ列, linestyle='dotted')
ヒストグラム 色 サーモン 変更 する	plt.hist(データ列, color='salmon')
オプション セパレータ 改行 する	sep = '\n'
ヒストグラム 色 ダーク ブルー 設定 する	plt.hist(データ列, color='darkblue')
配列 横 ベクトル 変形 する	aArray.reshape(1, -1)
ビン 数 データ フレーム 中 カラム ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
ヒストグラム 色 青 セット する	plt.hist(データ列, color='blue')
両端 キュー 作る	collections.deque()
オプション マーカー ダイアモンド 変更 する	marker = 'D'
データ フレーム リスト カラム 中 ある 文字 列 合計 カウント する	df[aList].isin([value, value2]).sum()
黒い 右 三 角 マーカー 数列 リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c='k')
文字 列 平仮名 どう	('ぁ' <= ch <= 'ん')
データ フレーム リスト 列 中 いくつ 欠損 値 含ま れる 数える	df[aList].isna().sum()
カウンタ キー 回数 列挙 する	aCounter.items()
ライトスカイブルー ヒストグラム 色 指定 する	plt.hist(データ列, color='lightskyblue')
白色 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='white')
データ 列 折れ線 グラフ 描画 し 印 ポイント する	plt.plot(データ列, データ列2, marker='.')
カウンタ ユニオン 演算 する	aCounter | aCounter2
度数 分布 図 並べ 描画 する	plt.hist([データ列, データ列2], color=['b', 'r'])
赤い 濃い 折れ線 グラフ 描く	plt.plot(xdata, ydata, linestyle='deep', color='r')
折れ線 グラフ 描画 し 色 ダーク シアン する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線 グラフ 描画 し その 色 オレンジ レッド 設定 する	plt.plot(データ列, データ列2, color='orangered')
文字 列 末尾 文字	s[-1]
倍数 で ない 調べる	n % n2 != 0
データ フレーム 列 列 重複 見る	df.duplicated(subset=[column, column2])
文字 列 リスト 要素	element in aList
実数 双曲線 正接 逆数	math.atanh(x)
改行 文字 列 分割 する	s.splitlines()
折れ線 グラフ 描画 し その 色 ターコイズ 設定 する	plt.plot(データ列, データ列2, color='turquoise')
色 差別 ない 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
リスト リスト 色 差別 ない グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
オブジェクト リスト クラス 調べる	isinstance(obj, list)
折れ線 グラフ 描画 し その 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightgreen')
配列 ヒストグラム 可視 化 する	plt.hist(aArray)
インデント 付き 辞書 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, indent=n)
書式 文字 列 日付 データ する	pd.to_datetime(s, format='%Y-%m-%d')
文字 コード 対応 する 文字	chr(unicode)
暗い 色 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
折れ線 グラフ 描画 し その 色 ライト コーラル 設定 する	plt.plot(データ列, データ列2, color='lightcoral')
日付 時刻 データ 月曜日	aDatetime.weekday() == 0
文字 列 全て 英字 調べる	s.isalpha()
リスト リスト 明るい グラフ プロット し その 色 青 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
イテラブル リスト 続け た イテラブル	itertools.chain(iterable, iterable2)
列 データ フレーム グループ 化 し それぞれ グループ 標準 偏差 求める	df.groupby(column).std()
値 黄色 プリント する	print(f'\033[33m{value}\033[0m')
文字 列 シンボル し 変数 する	z = sympy.Symbol(s)
青い パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
オプション 青 グラフ 色 設定 する	color = 'blue'
データ フレーム カラム 欠損 値 中央 値 設定 する	df[col].fillna(df[col].median())
整数 タプル どれ	n in aTuple
コマンド 第 一 引数 知る	sys.argv[1]
グラフ デフォルト で イイ 感じ 設定 する	sns.set()
散布 図 カラー コード 菱形 マーカー 使用 する	plt.plot(xdata, ydata, marker='D', c=rgb)
データ 列 欠損 値 直前 値 設定 する	ds.fillna(method='ffill')
配列 次元 数 算出 する	aArray.ndim
横 軸 ラベル 設定 する	plt.xlabel(untitled)
オブジェクト 名前 付き タプル 確認 する	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t')
データ 列 配列 散布 図 描画 し 右 三 角 マーカー 色 カラー コード セット する	plt.plot(xdata, ydata, marker='>', c=rgb)
淡い グラフ 配列 リスト 用い 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
カラー コード ダイアモンドマーカー イテラブル リスト 散布 図 描く	plt.plot(xdata, ydata, marker='D', c=rgb)
濃い グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
折れ線 グラフ マーカー 黒色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
改行 使う	'\n'
オプション エン コーディング 指定 する	encoding = 'shift_jis'
配列 何 データ 型	aArray.dtype()
二 進数 文字 列 バイナリ 変換 する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
線 グラフ 描画 し 色 グリーン イエロー 設定 する	plt.plot(データ列, データ列2, color='greenyellow')
リスト リスト 散布 図 描画 し 左 三 角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='<', c=rgb)
リスト 文字 列 等しい 最初 要素 取り除く	aList.remove(element)
赤色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='red')
データ 列 日付 データ する	pd.to_datetime(ds)
文字 列 代数 計算 変数 変換 する	sympy.Symbol(s)
リスト リスト 散布 図 赤い 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c='r')
散布 図 赤色 マーカー 使用 する	plt.plot(xdata, ydata, marker='^', c='r')
三 自然 数 求める	math.gcd(n, n2, n3)
時間 データ フレーム 日付 型 変換 する	pd.to_datetime(df[col], unit='s', utc=True)
ヒストグラム 色 グレー する	plt.hist(データ列, color='grey')
ファイル 付き 追加 できる よう 開く	open(filepath, mode='a', encoding='utf_8_sig')
シート エクセルファイルファイル 読み込む	pd.read_excel(filename, sheet_name=[n, n2])
リスト 配列 散布 図 描い マーカー 色 カラー コード 指定 する	plt.plot(xdata, ydata, marker='v', c=rgb)
リスト リスト 明るい グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
暗い の 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
文字 列 全て 数字 どう 調べる	s.isdigit()
二つ 集合 共通 部分 使う	aSet.intersection(aSet2)
カラム 四捨五入 する	ds.round()
折れ線 グラフ 緑色 下 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
データ フレーム カラム 値 まとめ 置き換える	df[col].replace(ValueMap)
両端 キュー リスト する	list(deq)
オプション 読み込み モード 指定 する	mode = 'r'
折れ線 グラフ マーカー 三角 印 する	plt.plot(データ列, データ列2, marker='^')
オプション グラフ 色 ゴースト ホワイト 設定 する	color = 'ghostwhite'
棒グラフ 描い 中央 寄せ する	plt.bar(ラベル列, データ列, align='center')
逆 双曲線 余弦 算出 する	math.acosh(x)
数列 リスト 散布 図 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<')
オプション グレー 使う	color = 'gray'
つ 浮動 小数点 数 十分 近い 調べる	math.isclose(x, x2)
ヒストグラム 描画 し 色 フローラルホワイト 設定 する	plt.hist(データ列, color='floralwhite')
両端 キュー 長 さ 制限 する	collections.deque(maxlen=n)
小数点 以下 桁 文字 列 変換 する	':.5f'.format(x)
変数 黄色 プリント する	print(f'\033[33m{value}\033[0m')
数値 下線 付き プリント する	print(f'\033[4m{value}\033[0m')
シーケンス 各 要素 適用 真 で あれ その 要素 出力 する	itertools.takewhile(predicateFunc, iterable)
文字 列 リスト 連結 し 一つ 文字 列 する	''.join(map(str, iterable))
ヒストグラム 色 オリベドラブ する	plt.hist(データ列, color='olivedrab')
部分 文字 列 文字 列 開始 位置 番目 終了 位置 間 含ま れ ない 調べる	s.find(sub, start, end) == -1
ロイヤル ブルー ヒストグラム 色 指定 する	plt.hist(データ列, color='royalblue')
データ フレーム 位 丸める	df.round(-2)
実数 乗 浮動 小数点 数 剰余	pow(x, n, y)
文字 列 片仮名	('ァ' <= ch <= 'ン')
折れ線 グラフ ラベル セット する	plt.plot(xdata, ydata, label=untitled)
データ 列 値 未 入力 値	ds.isna()
部分 集合 調べる	aSet.issubset(aSet2)
ヒストグラム 色 リネン 指定 する	plt.hist(データ列, color='linen')
ヒストグラム ビン 数 設定 する	plt.hist(データ列, bins=n)
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t')
ヒストグラム 描画 し その 色 パールバイオレットレッド 変更 する	plt.hist(データ列, color='palevioletred')
折れ線 グラフ 色 ダークゴールデンロッド 設定 する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線 グラフ 描画 し 色 ダークスレートブルー 設定 する	plt.plot(データ列, データ列2, color='darkslateblue')
実数 整数 確認 する	x.is_integer()
辞書 項目 名 指定 さ れ た 項目 ポップ する	aDict.pop(key)
コマンドラインフラグ 状態	sys.flags
ヒストグラム 描画 し 色 青 設定 する	plt.hist(データ列, color='blue')
複数 行 対応 正規 表現 文字 列 分割 する	re.split(pattern, s, flags=re.MULTILINE)
散布 図 カラー コード 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c=rgb)
データ フレーム フォーマット 用い タイム スタンプ 型 変換 する	pd.to_datetime(df[col], format='%Y-%m-%d')
折れ線 グラフ 色 文字 列 変更 する	plt.plot(xdata, ydata, color=s)
濃い の 線 幅 セット する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
配列 関数 フィルタ する	map(func, iterable)
現在 金曜日 調べる	datetime.datetime.today().weekday() == 4
ライム 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lime')
データ フレーム リスト 列 中 欠損 値 合計 数える	df[aList].isna().sum()
データ フレーム リスト カラム 欠損 値 最大 値 埋める	df[aList].fillna(df[aList].max())
文字 列 内 英字 含ま れる	any(c.isalpha() for c in s)
折れ線 グラフ 色 ロイヤル ブルー 設定 する	plt.plot(データ列, データ列2, color='royalblue')
折れ線 グラフ バツ マーカー 緑色 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
ヒストグラム 色 シャルトリューズ 設定 する	plt.hist(データ列, color='chartreuse')
データ フレーム カラム 欠損 値 直前 値 補う	df[col].fillna(method='ffill')
ヒストグラム 描画 し その 色 マゼンタ 設定 する	plt.hist(データ列, color='magenta')
ヒストグラム 描画 し 色 ホット ピンク 設定 する	plt.hist(データ列, color='hotpink')
オブジェクト クラス	type(obj)
オプション ライム グリーン グラフ 色 設定 する	color = 'limegreen'
オプション ピーチ パフ 色 用いる	color = 'peachpuff'
データ フレーム リスト カラム 位 四捨五入 し 整数 型 する	df[aList].round(-3).astype(int)
データ フレーム リスト カラム 十 位 丸める	df[aList].round(-1)
文字 列 走査 し 正規 表現 限定 マッチ する 調べる	re.search(pattern, s, flags=re.ASCI)
グラフ 格子 線 入れる	plt.grid(True)
文字 列 右端 空白 区切る	s.rsplit()
折れ線 グラフ 描画 し その 色 オリベドラブ セット する	plt.plot(データ列, データ列2, color='olivedrab')
オプション グラフ 種類 破線 変更 する	linestyle = 'dashed'
データ フレーム カラム タイム ゾーン 文字 列 変更 する	df[col].tz_convert(s)
データ フレーム 未 入力 値 直前 値 埋める	df.fillna(method='ffill')
出力 ストリーム 一行 読む	f.readline()
オプション グラフ 色 小麦色 設定 する	color = 'wheat'
文字 列 左側 部分 文字 列 取り除く	s.lstrip(sub)
折れ線 グラフ 描画 し その 色 オレンジ 設定 する	plt.plot(データ列, データ列2, color='orange')
オプション ダークターコイズ グラフ 色 設定 する	color = 'darkturquoise'
リスト リスト 追加 し 拡張 する	aList.extend(aList2)
データ フレーム 表示 する とき 表示 可能 な 最大 行 数 増やす	pd.set_option('display.max_rows', n)
データ フレーム 表示 する とき 小数点 以下 桁 表示 可能 な よう する	pd.set_option('precision', n)
ヒストグラム 描画 し その 色 ミディアムスプリンググリーン 変更 する	plt.hist(データ列, color='mediumspringgreen')
本日 木曜日 どう	datetime.datetime.today().weekday() == 3
辞書 コピー 用意 する	aDict.copy()
折れ線 グラフ 丸 マーカー 線 幅 変更 する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
オプション レモン シフォン グラフ 色 設定 する	color = 'lemonchiffon'
折れ線 グラフ 色 ライト グレー する	plt.plot(データ列, データ列2, color='lightgrey')
文字 列 先頭 正規 表現 マッチ する 調べる	re.match(pattern, s)
分子 分母 分数 生成 する	fractions.Fraction(numerator=n, denominator=m)
折れ線 グラフ マーカー 上 三 角 する	plt.plot(データ列, データ列2, marker='^')
双方向 キュー 右 イテラブル 各 要素 付け加える	deq.extend(iterable)
カウンタ リスト 更新 する	aCounter.update(iterable)
黒い ポイント マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='.', c='k')
オプション 線 種 一 点 鎖線 指定 する	linestyle = 'dashbot'
ゴールド ヒストグラム 色 設定 する	plt.hist(データ列, color='gold')
個 配列 等量 ビニング する	pd.qcut(aArray, n)
リスト リスト 散布 図 描画 し マーカー 色 濃い 設定 する	plt.plot(xdata, ydata, c='deep')
整数 配列 ひとつ	n in aArray
オプション 大文字 小文字 無視 する	flag = re.IGNORECASE
黒色 四角 マーカー 用い 散布 図 描く	plt.plot(xdata, ydata, marker='s', c='k')
折れ線 グラフ 描画 し その 色 ナバホホワイト 変更 する	plt.plot(データ列, データ列2, color='navajowhite')
追加 できる よう 既存 ファイル オープン する	open(filepath, mode='a', encoding='shift_jis')
オプション ダークスレートブルー グラフ 色 設定 する	color = 'darkslateblue'
データ フレーム リスト カラム 中 文字 列 ある	df[aList].isin([value])
正規 表現 文字 列 マッチ さ せる	re.match(pattern, s)
オリーブ色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='olive')
カラー コード 右 三 角 マーカー 配列 配列 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c=rgb)
イテラブル イテラブル ペア リング する	itertools.zip_longest(iterable, iterable2)
両端 キュー 要素 インプレース 反転 する	deq.reverse()
タブ	'\t'
オプション マーカー 加える	marker = 'v'
オプション マーカー 四角 変更 する	marker = 's'
折れ線 グラフ 色 シエナ 設定 する	plt.plot(データ列, データ列2, color='sienna')
アルファベット 小文字 全部 使う	string.ascii_lowercase
ビット 整数 型 全 要素 初期 化 さ れ た 行列	np.zeros(行数, 列数, dtype=np.int8)
横 棒 描画 し 中央 寄せ する	plt.barh(ラベル列, データ列, align='center')
プログラム エラー 終了 する	sys.exit(1)
ヒストグラム 描画 し その 色 オリベドラブ 設定 する	plt.hist(データ列, color='olivedrab')
日付 時刻 データ 何時 知る	aDatetime.hour
リスト ビン 数 ビン 分割 する	pd.cut(aList, n)
赤い 丸 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c='r')
折れ線 グラフ 色 ミディアムスレートブルー 指定 する	plt.plot(データ列, データ列2, color='mediumslateblue')
データ フレーム 二つ 列 値 グループ 化 し 要約 統計 量 計算 する	df.groupby(['A', 'B']).describe()
文字 列 部分 文字 列 用い 二 分割 する	s.partition(sub)
カウンタ リスト 変換 する	list(aCounter)
文字 列 部分 文字 列 二分 する	s.partition(sub)
年 月 タイム スタンプ する	datetime.datetime(year=year, month=month, day=1)
ヒストグラム 描画 し その 色 リネン 指定 する	plt.hist(データ列, color='linen')
データ 列 曜日 名前 見る	ds.dt.weekday_name
データ 列 千 位 四捨五入 し 整数 する	ds.round(-3).astype(int)
散布 図 黒い 左 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='<', c='k')
サーモン ヒストグラム 色 設定 する	plt.hist(データ列, color='salmon')
データ フレーム リスト 列 各 列 間 相関 係数	df[aList].corr()
折れ線 グラフ 描画 し その 色 ライト イエロー 設定 する	plt.plot(データ列, データ列2, color='lightyellow')
カラム 中 合計 数える	ds.isna().sum()
データ フレーム 列 用い 小さい 順 ソート する	df.sort_values(by=column, ascending=True)
線 グラフ 描画 し 色 ダーク オリーブ グリーン 設定 する	plt.plot(データ列, データ列2, color='darkolivegreen')
ヒストグラム 描画 し その 色 ダークスラテグレー 設定 する	plt.hist(データ列, color='darkslategray')
空 辞書 作成 する	{}
濃い 色 赤く する	plt.plot(xdata, ydata, linestyle='deep', color='r')
ファイル 読み込み モード 使っ オープン し する	f = open(filepath, mode='r')
文字 列 フォーマット 日付 データ 変換 する	pd.to_datetime(s, format=fmt)
明るい 色 マーカー 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
データ フレーム 列 キー し 全 結合 する	pd.merge(df, df2, on=column, how='outer')
列 一意 な 値	df[col].unique()
折れ線 グラフ 色 赤 設定 する	plt.plot(データ列, データ列2, color='red')
折れ線 グラフ 描画 し 色 赤 設定 する	plt.plot(データ列, データ列2, color='red')
鉛直 方向 一 点 鎖線 つける	plt.axvline(x=0, linestyle='dashbot')
リスト 回 結合 する	aList * n
日付 時刻 データ 時間 前 する	aDatetime - datetime.timedelta(hours=n)
文字 列 走査 し パターン 大文字 小文字 無視 し マッチ する 確認 する	re.search(pattern, s, flags=re.IGNORECASE)
標準 入力 行 読み取る	input()
オプション 印 変更 する	marker = '^'
線 グラフ 描画 し 色 パールバイオレットレッド 指定 する	plt.plot(データ列, データ列2, color='palevioletred')
コード ポイント 最大 値 知る	sys.maxunicode
文字 列 タプル 要素 調べる	element in aTuple
ファイル 拡張 子	os.path.splitext(filepath)[1].lstrip('.')
データ 列 箱 ひ げ 図 用い 可視 化 する	plt.boxplot(データ列)
インディアン レッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='indianred')
グラフ データ ラベル 位置 設定 する	plt.legend(loc=(x, y))
文字 列 内 ひとつ 空白 含ま れる 調べる	any(c.isspace() for c in s)
折れ線 グラフ 色 シアン 設定 する	plt.plot(データ列, データ列2, color='cyan')
オプション グラフ 色 茶色 変更 する	color = 'brown'
処理 中 例外 情報	sys.exc_info()
部分 文字 列 エラー なく 文字 列 右側 取り除く	s.removesuffix(sub)
実数 正	x > 0
データ フレーム 各 列 毎 グループ 化 し 列 合計 計算 する	df.groupby(column)[column2].sum()
折れ線 グラフ 色 ブランチドアーモンド 変更 する	plt.plot(データ列, データ列2, color='blanchedalmond')
散布 図 四角 マーカー 用いる	plt.plot(xdata, ydata, marker='s')
異なる 列 キー し 二つ データ フレーム 左 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
日付 時刻 データ 分 後 進める	aDatetime + datetime.timedelta(minutes=n)
文字 列 中 ひとつ 非 アルファベット ある 調べる	any(not c.isalpha() for c in s)
数値 変数 数式 置き換える	e.subs(z, e2)
データ フレーム 列 中 含ま れる	df[col].isin([value])
赤い 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
データ フレーム 値 置き換える	df.replace(ValueMap)
オプション ダークターコイズ 使う	color = 'darkturquoise'
マッピング ソート し 形式 文字 列 する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
マルーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='maroon')
線 グラフ 描画 し その 色 インディゴ 変更 する	plt.plot(データ列, データ列2, color='indigo')
データ 列 折れ線 グラフ 描画 し マーカー 右 三 角 印 する	plt.plot(データ列, データ列2, marker='>')
オプション オー キッド 色 使う	color = 'orchid'
パールゴールデンロッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='palegoldenrod')
個 データ フレーム 中 列 ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
データ フレーム カラム 中 欠損 値 合計 数える	df[col].isna().sum()
折れ線 グラフ 色 珊瑚 設定 する	plt.plot(データ列, データ列2, color='coral')
オプション 色 シャルトリューズ 設定 する	color = 'chartreuse'
ヒストグラム 色 パレットトルコイズ 設定 する	plt.hist(データ列, color='paleturquoise')
正規 表現 データ フレーム 列 置換 する	df[col].replace(pattern, repl, regex=True)
整数 十 六 進 文字 列 変換 する	hex(n)[2:]
オプション グラフ 色 ドジャーブルー 設定 する	color = 'dodgerblue'
折れ線 グラフ 大 バツ 印 使う	plt.plot(データ列, データ列2, marker='X')
データ 列 折れ線 グラフ 描画 し マーカー 大 バツ 印 する	plt.plot(データ列, データ列2, marker='X')
十 六 進 表記 文字 列 浮動 小数点 数 する	float.fromhex(十六進表記の文字列)
暗い 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
オプション カンマ 分割 記号 使う	sep = ','
折れ線 グラフ 黄色い 大 バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
データ フレーム リスト カラム 中 いくつ 欠損 値 含ま れる 数える	df[aList].isna().sum()
ケン ドール 相関 係数 データ フレーム 列 列 相関 行列	df[[column, column2]].corr(method='kendall')
事前 正規 表現 複数 行 対応 コンパイル する	re.compile(pattern, flag=re.MULTILINE)
リスト ヒストグラム 濃い プロット する	plt.hist(xdata, color='deep')
線 グラフ 描画 し その 色 グリーン 設定 する	plt.plot(データ列, データ列2, color='green')
列 ビン 分割 する	pd.cut(ds, aList)
文字 列 改行 使っ 分割 する	s.splitlines()
データ 列 欠損 値 第 二 四 分 位 数 セット する	ds.fillna(ds.median())
文字 列 書式 日付 データ 変換 する	pd.to_datetime(s, format=fmt)
データ フレーム 列 ソート し 先頭 来る よう する	df.sort_values(by=column, na_position='first')
エポック 秒 データ 列 日付 データ 変換 する	pd.to_datetime(ds, unit='s', utc=True)
折れ線 グラフ 色 ライム 変更 する	plt.plot(データ列, データ列2, color='lime')
データ フレーム 列 多く 少ない 行 取り出す	df[(x < df[column]) & (df[column] < x2)]
折れ線 グラフ 丸 印 線 幅 設定 する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
オプション アクアマリン 色 使う	color = 'aquamarine'
オプション ダークゴールデンロッド 色 使用 する	color = 'darkgoldenrod'
日付 データ 文字 列 フォーマット し 文字 列 変換 する	"aDate.strftime(""%d/%m/%y"")"
データ 列 数列 黒い 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
オプション グラフ 色 パパイヤウィップ 変更 する	color = 'papayawhip'
部分 文字 列 文字 列 終了 位置 前 存在 する	s.find(sub, 0, end) != -1
カウンタ 共通 する 値	aCounter & aCounter2
データ フレーム 中 列 等量 個 ビンニング する	pd.qcut(df[col], n)
折れ線 グラフ 三角 印 青色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
重 見やすく 散布 図 色 差別 ない 色 マーカー 描画 する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
オブジェクト イテラブル 変換 する	iter(obj)
シーケンス ダミー 変数 変換 する	pd.get_dummies(iterable)
配列 最大	np.max(aArray)
ヒストグラム 描画 し 色 アリスブルー 設定 する	plt.hist(データ列, color='aliceblue')
シード 固定 する	random.seed(n)
正規 表現 モジュール イン ポート する	import re
データ フレーム ランダム 行 重複 あり サンプリング する	df.sample(n, replace=True)
データ フレーム カラム 欠損 値 直後 値 埋める	df[col].fillna(method='bfill')
折れ線 グラフ 描画 し マーカー 大 バツ 印 する	plt.plot(データ列, データ列2, marker='X')
ベクトル 変形 する	aArray.reshape(行数, 列数)
データ フレーム 列 インデックス セット する	df.set_index(column)
ヒストグラム 色 マルーン 設定 する	plt.hist(データ列, color='maroon')
オプション データ 型 指定 する	dtype = np.int16
シーケンス 重複 なく 要素 ランダム 選ぶ	random.sample(iterable, k=n)
本日 木曜日	datetime.datetime.today().weekday() == 3
データ フレーム リスト カラム 中 文字 列 文字 列 いくつ ある 数える	df[aList].isin([value, value2]).sum()
カラー コード バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c=rgb)
文字 列 赤色 化 する	f'\033[31m{value}\033[0m'
折れ線 グラフ 色 ビスク する	plt.plot(データ列, データ列2, color='bisque')
カウンタ 要素 回数	aCounter[element]
データ フレーム 未 入力 値 モード 埋める	df.fillna(df.mode().iloc[0])
ヒストグラム 描画 し その 色 チョコレート 変更 する	plt.hist(データ列, color='chocolate')
右 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='>')
タプル 最初	aTuple[0]
オプション 印 描画 する	marker = 'v'
リスト 数列 パステル 調 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
折れ線 グラフ 丸 印 線 幅 指定 する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
文字 列 組 要素 どう 調べる	element in aTuple
データ フレーム 行 前 抽出 する	df[:n]
データ フレーム カラム 何 曜日 確認 する	df[col].dt.weekday_name
オプション ライトグリーン グラフ 色 セット する	color = 'lightseagreen'
赤い パステル 調 グラフ プロット する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リスト 四 分 位 数 ごと 分割 する	pd.qcut(aList, 4)
文字 列 中 大文字 小文字 無視 し パターン 全て マッチ 使う	re.findall(pattern, s, flags=re.IGNORECASE)
データ フレーム インプレイス 重複 削除 する	df.drop_duplicates(inplace=True)
折れ線 グラフ 描画 し その 色 ミスティローズ 変更 する	plt.plot(データ列, データ列2, color='mistyrose')
データ フレーム 列 列 相関 行列 スピアマン 相関 係数 算出 する	df[[column, column2]].corr(method='spearman')
オプション グラフ 種類 実線 設定 する	linestyle = 'solid'
データ フレーム 欠損 値 最大 値 指定 する	df.fillna(df.max())
カウンタ リセット する	aCounter.clear()
ヒストグラム 描画 し 色 トマト 指定 する	plt.hist(データ列, color='tomato')
ヒストグラム 描画 し アルファ 設定 する	plt.hist(データ列, alpha=x)
黒い 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
タプル 中 文字 列 最初 見つかる 場所	aTuple.index(element)
ファイル 用い オープン する	open(filepath, encoding='euc_jp')
整数 半分 する	n //= 2
ファイル 文字 列 示す 文字 コード 書き込み できる よう 開く	open(filepath, mode='w', encoding=s)
散布 図 黒い 丸 マーカー 使う	plt.plot(xdata, ydata, marker='o', c='k')
日付 時刻 データ 秒 加算 する	aDatetime + datetime.timedelta(seconds=n)
ヒストグラム 描画 し その 色 ロージーブラウン 変更 する	plt.hist(データ列, color='rosybrown')
システム 時刻 乱数 初期 化 する	random.seed()
折れ線 グラフ 描画 し その 色 ビスク 設定 する	plt.plot(データ列, データ列2, color='bisque')
散布 図 カラー コード ダイアモンドマーカー 使う	plt.plot(xdata, ydata, marker='D', c=rgb)
オプション グラフ 色 アイボリー する	color = 'ivory'
データ フレーム 列 グループ 化 し それぞれ グループ ごと 最小 値 求める	df.groupby(column).min()
イテラブル リスト 散布 図 描画 し バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='x', c=rgb)
赤い ポイント マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c='r')
折れ線 グラフ 描画 し 色 ロージーブラウン 変更 する	plt.plot(データ列, データ列2, color='rosybrown')
データ フレーム 各 次元 大き さ 見る	df.shape
実数 数 引く	x - y
配列 リスト 散布 図 描画 し バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='x', c=rgb)
ヒストグラム 描画 し 色 白く する	plt.hist(データ列, color='w')
オプション 出力 先 標準 エラー 設定 する	file = sys.stderr
濃い 色 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, c='deep')
改行 文字 列 分割 し 文字 列 リスト 変換 する	s.splitlines()
要素 セット 含ま れる	element in aSet
列 データ フレーム ソート し 下位 件 取り出す	df.sort_values(columns).tail(n)
データ 列 エポック 秒 日付 データ 変換 する	pd.to_datetime(ds, unit='s', utc=True)
データ フレーム カラム 中 文字 列 文字 列 ある 調べる	df[col].isin([value, value2])
文字 列 中 部分 文字 列 別 文字 列 置き換える	s.replace(sub, newsub)
文字 列 後ろ 部分 文字 列 区切る	s.rsplit(sub)
綺麗 な プロット 描画 する	import seaborn as sns
二つ 浮動 小数点 数 近似 値 どう 調べる	math.isclose(x, x2)
折れ線 グラフ 描画 し その 色 グリーン 設定 する	plt.plot(データ列, データ列2, color='green')
ヒストグラム 描画 し その 色 アクアマリン 変更 する	plt.hist(データ列, color='aquamarine')
逆順 両端 キュー	reversed(deq)
本日 日付 時刻 求める	datetime.datetime.now()
両端 キュー 部分 要素	collections.deque(itertools.islice(deq, start, end))
データ フレーム 列 つ 選択 する	df[[column]]
イテラブル 回 あわせ た 直積	itertools.product(iterable, repeat=2)
線 グラフ 描画 し その 色 ネイビー 指定 する	plt.plot(データ列, データ列2, color='navy')
データ フレーム データ 列 横向き つなぐ	pd.concat([df, ds], axis=1)
ふたつ 集合 対称 差 集合	aSet.symmetric_difference(aSet2)
折れ線 グラフ 描画 し マーカー 印 する	plt.plot(データ列, データ列2, marker='v')
データ フレーム 欠損 値 メディアン 設定 する	df.fillna(df.median())
線 グラフ 色 ターコイズ 設定 する	plt.plot(データ列, データ列2, color='turquoise')
データ フレーム 先頭 確認 する	df.head()
折れ線 グラフ 色 ダーク グレー 設定 する	plt.plot(データ列, データ列2, color='darkgrey')
キュー 最初 要素 取り除く	deq.popleft()
グラフ 中 枠 なし データ ラベル 表示 する	plt.legend(frameon=False)
数式 変数 階 微分 する	sympy.diff(e, z, n)
イテラブル 文字 列 リスト 変換 し 部分 文字 列 連結 する	sub.join(map(str, iterable))
データ 列 日付 データ 変換 し インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
折れ線 グラフ 星 印 青く する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
イテラブル データ 列 散布 図 黒い マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c='k')
ヒストグラム 描画 し その 色 ゴールド 設定 する	plt.hist(データ列, color='gold')
プロット 補足 位置 指定 する	plt.legend(loc=(x, y))
データ フレーム 列 用い 昇順 破壊 的 ソート する	df.sort_values(by=column, ascending=True, inplace=True)
リスト リスト リスト 値 応じ 散布 図 色 変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
オプション ホット ピンク 使用 する	color = 'hotpink'
日付 時刻 データ エポック 秒 変換 する	aDatetime.timestamp()
データ フレーム リスト 列 欠損 値 平均 埋める	df[aList].fillna(df[aList].mean())
色 差別 ない グラフ 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
配列 個 ビニング し ラベル つける	pd.cut(aArray, n, labels=names)
整数 八 進 表記 求める	oct(n)
整数	math.gcd(n, n2)
日付 時刻 データ 秒 前 戻す	aDatetime - datetime.timedelta(seconds=n)
データ 列 箱 ひ げ 図 する	plt.boxplot(データ列)
ダーク サーモン 色 ヒストグラム 描画 する	plt.hist(データ列, color='darksalmon')
折れ線 グラフ 色 ベージュ 設定 する	plt.plot(データ列, データ列2, color='beige')
折れ線 グラフ 描画 し その 色 オリベドラブ 指定 する	plt.plot(データ列, データ列2, color='olivedrab')
昇順 データ フレーム 二つ 列 並べ 直し 更新 する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
ひとつ 飛ばし 整数 リスト	list(range(n, n2+1, 2))
オプション ヘッダ 自動的 な 連 番 設定 する	header = None
オプション マーカー 右 三 角 変更 する	marker = '>'
辞書 コピー 作る	aDict.copy()
ヒストグラム 色 ロイヤル ブルー 設定 する	plt.hist(データ列, color='royalblue')
折れ線 グラフ 描画 し 色 ダーク グレー 設定 する	plt.plot(データ列, データ列2, color='darkgray')
文字 列 無限 繰り返す イテラブル	itertools.repeat(element)
イテラブル 複数個 ランダム 選ぶ	random.choices(iterable, k=n)
データ フレーム カラム パーセンタイル	df[col].median()
折れ線 グラフ 色 スラグレー する	plt.plot(データ列, データ列2, color='slategray')
ヒストグラム 色 ダーク オレンジ 変更 する	plt.hist(データ列, color='darkorange')
両端 キュー 末尾	deq[-1]
セット 集合	aSet.difference(aSet2)
インディゴ 色 ヒストグラム 描画 する	plt.hist(データ列, color='indigo')
文字 列 文字 列 区切っ プリント する	print(value, value2, sep=s)
黒色 丸 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='o', c='k')
配列 行 ごと 合計 値 求める	np.sum(aArray, axis=1)
配列 データ 列 折れ線 グラフ 描画 し 透明 度 設定 する	plt.plot(xdata, ydata, alpha=alpha)
長 さ リスト 得る	[0] * n
イテラブル カウント し カウンタ 更新 する	aCounter.update(iterable)
データ フレーム 型 リスト 指定 さ れ た データ 型 カラム 除外 する	df.select_dtypes(exclude=typeList)
オプション グリーン イエロー 使う	color = 'greenyellow'
三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^')
折れ線 グラフ 青い 左 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
暗い 色 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, c='dark')
配列 リスト 散布 図 ポイント マーカー 描く	plt.plot(xdata, ydata, marker='.')
セット 空 集合 で ない	len(aSet) != 0
オブジェクト 整数 クラス 調べる	isinstance(obj, int)
オプション パールバイオレットレッド グラフ 色 指定 する	color = 'palevioletred'
小数点 以下 桁 文字 列 変換 する	':.4f'.format(x)
ヒストグラム 描画 し その 色 インディゴ 設定 する	plt.hist(データ列, color='indigo')
データ フレーム ファイル 保存 する	df.to_excel(filename)
オプション コーラル 色 使う	color = 'coral'
イテラブル 値 スタック 先頭 追加 する	deq.extendleft(iterable)
もしくは もしくは 等しい 調べる	x == 1 or x == 2 or x == 3
赤い ダイアモンドマーカー リスト データ 列 散布 図 プロット する	plt.plot(xdata, ydata, marker='D', c='r')
双方向 キュー 順序 右 個 分 ロー テンション する	deq.rotate(n)
折れ線 グラフ 大き さ ポイント マーカー 描画 する	plt.plot(データ列, データ列2, marker='.', markersize=n)
全 要素 初期 化 さ れ た 複素数 型 行列	np.zeros(行数, 列数, dtype=bool)
オプション 三 二 ビット 整数 型 使う	dtype = np.int16
配列 数列 散布 図 描画 し 星 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='*', c=rgb)
オブジェクト プロパティ 値 変更 する	setattr(obj, プロパティ名, 値)
オプション 改行 セパレータ 使用 する	sep = '\n'
データ フレーム リスト カラム 位 丸め 整数 型 する	df[aList].round(-3).astype(int)
青い 暗い プロット する	plt.plot(xdata, ydata, linestyle='dark', color='b')
プロット 描画 する 準備 する	from sympy import N
整数 二 進数 表現 見る	bin(n)
文字 列 先頭 タブ 取り除く	s.lstrip('\t')
オプション ミディアムシアグリーン 用いる	color = 'mediumseagreen'
以上 以下 調べる	-9 <= n <= 9
線 グラフ 描画 し その 色 ピンク セット する	plt.plot(データ列, データ列2, color='pink')
行列 行 ごと 合計 値 求める	np.sum(aArray, axis=1)
データ フレーム カラム 位 四捨五入 し 整数 型 する	df[col].round(-1).astype(int)
文字 列 右側 空白 除く	s.rstrip(' ')
リスト リスト 散布 図 描画 し 星 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='*', c=rgb)
パープル ヒストグラム 色 セット する	plt.hist(データ列, color='purple')
行列 各 要素 加算 する	aArray + aArray2
線 グラフ 色 サドル ブラウン 指定 する	plt.plot(データ列, データ列2, color='saddlebrown')
集合 エラー なく 要素 取り除く	aSet.discard(element)
個 等量 データ 列 ビン 分割 する	pd.qcut(ds, n)
配列 リスト 淡い グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
ヒストグラム 描画 し その 色 カデット ブルー 設定 する	plt.hist(データ列, color='cadetblue')
データ フレーム 二つ 列 ソート する	df.sort_values(by=['A', 'B'])
データ フレーム カラム 未 入力 値 パーセンタイル 設定 する	df[col].fillna(df[col].median())
グラフ 使う カラー パレット 設定 する	sns.set(pallete=palleteName)
スカイ ブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='skyblue')
タプル 並べる	sorted(aTuple)
折れ線 グラフ 色 ミディアムパープル 設定 する	plt.plot(データ列, データ列2, color='mediumpurple')
三つ 最小 値 求める	min(x, y, z)
オプション ホット ピンク色 使う	color = 'hotpink'
線 グラフ 描画 し 色 ライトスカイブルー 変更 する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線 グラフ 色 プラム 設定 する	plt.plot(データ列, データ列2, color='plum')
現在 月曜日	datetime.datetime.today().weekday() == 0
データ フレーム フォーマット 型 変換 する	pd.to_datetime(df[col], format='%Y-%m-%d')
データ 列 カテゴリ データ する	ds.astype(object)
データ 列 最大 値 設定 する	ds.fillna(ds.max())
実数 十 六 進 文字 列 変換 する	x.hex()
環境 名前	sys.platform
リスト 内 要素 少なくとも ひとつ 真	any(aList)
バイナリ 書き込み モード ファイル オープン し する	f = open(filepath, mode='wb')
データ フレーム 列 並べ 直す	df.sort_values(by=column)
折れ線 グラフ 色 パープル 設定 する	plt.plot(データ列, データ列2, color='purple')
下 三角 マーカー 用い 散布 図 プロット する	plt.plot(xdata, ydata, marker='v')
明るい 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
折れ線 グラフ 描画 し 色 ライト サーモン 設定 する	plt.plot(データ列, データ列2, color='lightsalmon')
データ フレーム ファイル 読み込む	pd.read_csv(filename, sep='\t')
折れ線 グラフ 線 幅 丸 マーカー 描画 する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
英 文字 ひとつ ランダム 選ぶ	random.choice(string.ascii_uppercase)
フォーマット 文字 列 ロード する	json.loads(jsonString)
赤い マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v', c='r')
カラー コード ポイント マーカー 使っ 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c=rgb)
線 グラフ 描画 し その 色 マゼンタ 変更 する	plt.plot(データ列, データ列2, color='magenta')
要素 集合	element in aSet
配列 列 ごと 平均 求める	np.mean(aArray, axis=0)
三 自然 数 最大公約数	math.gcd(n, n2, n3)
線 グラフ 描画 し その 色 スプリング グリーン 指定 する	plt.plot(データ列, データ列2, color='springgreen')
日付 データ 分 前 戻す	aDate - datetime.timedelta(minutes=n)
三 二 ビット 整数 型 ゼロ 埋め さ れ た ベクトル	np.zeros(要素数, dtype=np.int16)
線 グラフ 描画 し その 色 ライトスカイブルー 設定 する	plt.plot(データ列, データ列2, color='lightskyblue')
明るい 柱状 図 描画 する	plt.hist(xdata, color='bright')
オプション ゴールデン ロッド 用いる	color = 'goldenrod'
折れ線 グラフ 印 大き さ 指定 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
整数 配列 いづれ 調べる	n in aArray
テンプレート 引数 フォーマット する	formatText.format(*args)
ヒストグラム 色 ドジャーブルー 設定 する	plt.hist(データ列, color='dodgerblue')
エクセルデータファイル 名前 シート データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
オプション グリーン 色 使用 する	color = 'green'
ふたつ 集合 互いに 素 判定 する	aSet.isdisjoint(aSet2)
文字 列 コロン 区切っ 列挙 する	s.split(':')
黒色 ポイント マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='.', c='k')
次元 タプル する	sum(aTuple)
データ フレーム 指定 さ れ た 三つ 列 抽出 する	df[[column, column2, column3]]
カウンタ キー その カウント 列挙 する	aCounter.elements()
配列 ビン 数 ビンニング する	pd.cut(aArray, n)
ケン ドール 順位 相関 係数 データ フレーム 相関 行列	df.corr(method='kendall')
各 列 毎 データ フレーム 集約 し 列 個数 算出 する	df.groupby(column)[column2].count()
タプル 個数	len(aTuple)
データ フレーム 列 値 以上 かつ 未満 行 抽出 する	df[(x <= df[column]) & (df[column] < x2)]
黒色 大 バツ マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='X', c='k')
オプション グレー 色 用いる	color = 'grey'
折れ線 グラフ 描画 し その 色 シーグリーン 設定 する	plt.plot(データ列, データ列2, color='seagreen')
用いる	math.nan
オプション ライト サーモン 色 使う	color = 'lightsalmon'
黒い バツ マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='k')
バージョン	sys.version
両端 キュー 空 で ない 調べる	len(deq) != 0
文字 列 大文字 小文字 無視 し 正規 表現 分割 する	re.split(pattern, s, flags=re.IGNORECASE)
データ フレーム 各 列 毎 グループ 化 し 文字 列 グループ 使う	df.groupby(column).get_group(s)
引く	n - n2
全 要素 初期 化 さ れ た ビット 整数 型 行列	np.zeros(行数, 列数, dtype=np.int8)
折れ線 グラフ 線 幅 ポイント マーカー 描画 する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
データ フレーム 列 まとめ た グループ	df.groupby(column)
オブジェクト 辞書 クラス	isinstance(obj, dict)
アンティーク ホワイト 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='antiquewhite')
オブジェクト タプル 型 インスタンス どう 調べる	isinstance(obj, tuple)
進 文字 列 整数 変換 する	int(s, n)
データ フレーム 複数 列 まとめ た 表 求める	df.groupby(columns)
グラフ 見栄え デフォルト いい 感じ 設定 する	sns.set()
折れ線 グラフ 大き さ 印 描画 する	plt.plot(データ列, データ列2, marker='v', markersize=n)
赤い 下 三角 マーカー リスト データ 列 散布 図 描く	plt.plot(xdata, ydata, marker='v', c='r')
データ フレーム カラム カラム 折れ線 グラフ 描画 する	plt.plot(df[col], df[col2])
変数 黒色 プリント する	print(f'\033[30m{value}\033[0m')
折れ線 グラフ 色 ダークターコイズ セット する	plt.plot(データ列, データ列2, color='darkturquoise')
データ フレーム 列 位 丸め 整数 型 する	df[col].round(-1).astype(int)
ヒストグラム 色 ベージュ セット する	plt.hist(データ列, color='beige')
グラフ 暗く する	sns.set(pallete='dark')
コロン 区切っ 文字 列 プリント する	print(value, value2, sep=':')
表 データ 列 小さい 順 ソート する	df.sort_values(by='A', ascending=True)
両端 キュー 値 取り除く	deq.remove(element)
データ フレーム カテゴリ データ カラム 名 一覧 使う	df.select_dtypes('object').columns
ファイル 読み込む	pd.read_csv(filename, sep=',')
文字 列 ケース 整える	s.casefold()
データ 列 等量 分割 数 使っ 分割 する	pd.qcut(ds, n)
文字 列 部分 文字 列 分け た とき 後半 文字 列 取り出す	s.partition(sub)[-1]
ヒストグラム 描画 し 色 ディープスカイブルー 設定 する	plt.hist(データ列, color='deepskyblue')
文字 列 最後 空白 除去 する	s.rstrip()
文字 列 全て アスキー 文字 調べる	s.isascii()
エクセルファイルファイル 番目 シート 読み込む	pd.read_excel(filename, sheet_name=n)
データ 列 リスト 折れ線 グラフ 文字 列 色 描画 する	plt.plot(xdata, ydata, color=s)
散布 図 マーカー 大き さ 設定 する	plt.scatter(xdata, ydata, s=n)
二つ カラム 並べ ボックス チャート する	plt.boxplot([df[column], df[column2]])
文字 列 全て アルファベット 調べる	s.isalpha()
数列 リスト 青い 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
データ フレーム リスト カラム 中 欠損 値 合計 カウント する	df[aList].isna().sum()
日付 時刻 データ 日 使う	aDatetime.day
線 グラフ 色 ライトグリーン 変更 する	plt.plot(データ列, データ列2, color='lightseagreen')
イテラブル 文字 列 リスト 変換 し 部分 文字 列 つなげる	sub.join(map(str, iterable))
オブジェクト 数値 どう 確認 する	isinstance(obj, (int,float))
線 グラフ 色 ライトゴールドロディイエロー 設定 する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
小数点 数 絶対 値	math.fabs(x)
データ フレーム 横 連結 する	pd.concat([df, df2, df3], axis=1)
折れ線 グラフ 描画 し その 色 ライトゴールドロディイエロー セット する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
データ フレーム リスト カラム 文字 列 未 入力 値 変換 する	df[aList].replace(s, np.nan)
データ フレーム リスト カラム 欠損 値 直前 値 設定 する	df[aList].fillna(method='ffill')
改行 なし で 標準 入力 行 読む	sys.stdin.readline().rstrip()
配列 横 方向 連結 する	np.concatenate([aArray, aArray2], axis=1)
データ フレーム 表示 する とき 小数点 以下 表示 精度 桁 減らす	pd.set_option('precision', n)
赤い 暗い 折れ線 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
折れ線 グラフ マーカー 左 三 角 印 する	plt.plot(データ列, データ列2, marker='<')
オプション フローラルホワイト 使う	color = 'floralwhite'
オプション ライトゴールドロディイエロー 色 使用 する	color = 'lightgoldenrodyellow'
リスト 更新 不能 な セット 変換 する	frozenset(iterable)
配列 イテラブル 明るい グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
最後 文字 列 空白 分割 する	s.rsplit()
暗い 色 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, c='dark')
配列 配列 散布 図 カラー コード バツ マーカー 描く	plt.plot(xdata, ydata, marker='x', c=rgb)
パステル 調 グラフ 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
ベージュ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='beige')
小さい どう 調べる	n < n2
もしくは 確認 する	n == 1 or n == 2
データ 列 数列 散布 図 プロット し 星 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='*', c=rgb)
実数 小数点 以下 第 一 位 四捨五入 する	round(x, 1)
オプション ホワイトスモーク 使用 する	color = 'whitesmoke'
ヒストグラム 描画 し その 色 ミディアムシアグリーン 設定 する	plt.hist(データ列, color='mediumseagreen')
エクセルデータファイル シート 読み込む	pd.read_excel(filename, sheet_name=[n, n2])
折れ線 グラフ 色 ダークスレートブルー 変更 する	plt.plot(データ列, データ列2, color='darkslateblue')
ベクトル 演算 する	import numpy as np
データ フレーム カラム 中 ある 日付 データ 文字 列 合計 数える	df[col].isin([value, value2]).sum()
リスト ひとつ 飛ばし 取り出す	aList[::2]
データ フレーム 中 いくつ 文字 列 ある カウント する	df.isin([value]).sum()
折れ線 グラフ 描画 し マーカー 丸 印 する	plt.plot(データ列, データ列2, marker='o')
線 グラフ 色 ディムグレー 指定 する	plt.plot(データ列, データ列2, color='dimgrey')
データ 列 折れ線 グラフ 描画 し マーカー 四角 する	plt.plot(データ列, データ列2, marker='s')
オプション ゴースト ホワイト 使う	color = 'ghostwhite'
折れ線 グラフ 描画 し 色 パパイヤウィップ 設定 する	plt.plot(データ列, データ列2, color='papayawhip')
ペア リスト カウンタ 作る	collections.Counter(dict(pairs))
オプション カンマ セパレータ 使う	sep = ','
折れ線 グラフ 星 マーカー 使う	plt.plot(データ列, データ列2, marker='*')
配列 リスト 散布 図 カラー コード 大 バツ マーカー プロット する	plt.plot(xdata, ydata, marker='X', c=rgb)
データ フレーム 内容 見る	df.head()
底 する 対数	math.log(x, k)
ファイル 読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
データ フレーム 関数 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(関数)]
数列 データ 列 散布 図 描画 し 下 三角 マーカー 色 カラー コード 変更 する	plt.plot(xdata, ydata, marker='v', c=rgb)
オプション グラフ 色 コーンフラワーブルー 設定 する	color = 'cornflowerblue'
ユーザ 入力 さ れる	int(input())
データ フレーム 列 集計 し 列 要約 統計 量 計算 する	df.groupby(column).describe()[column2]
逆 余弦	math.acos(x)
マッピング 項目 名 列挙 する	aDict.keys()
カラー コード ダイアモンドマーカー 散布 図 描く	plt.plot(xdata, ydata, marker='D', c=rgb)
配列 ヒストグラム 描画 する	plt.hist(aArray)
倍数 どう 調べる	n % 5 == 0
リスト 配列 散布 図 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*')
枠 なし 凡例 グラフ 中 入れる	plt.legend(frameon=False)
データ フレーム カラム ユニーク な 値 個数	df[col].nunique()
最大 列 数 変更 する	pd.set_option('display.max_columns', n)
リスト リスト 散布 図 描画 し マーカー 左 三 角 セット する	plt.plot(xdata, ydata, marker='<')
リスト 全て 要素 クリア する	aList.clear()
偶数 どう 調べる	n % 2 == 0
オプション パパイヤウィップ 色 使う	color = 'papayawhip'
マッピング 項目 名 ワード 引数 更新 する	aDict.update(**kwargs)
折れ線 グラフ 色 ライトゴールドロディイエロー セット する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
代数 計算 使う	import sympy
茶色 ヒストグラム 色 変更 する	plt.hist(データ列, color='brown')
スカイ ブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='skyblue')
データ フレーム 列 グループ 化 し 最小 値 求める	df.groupby(column).min()
マッピング 階層 化 する	collections.ChainMap(aDict)
データ フレーム カラム つ 選択 する	df[[column, column2]]
カウンタ 列 カウント し 引く	aCounter.subtract(iterable)
リスト 末尾	aList[-1]
ヒストグラム 色 パールバイオレットレッド 設定 する	plt.hist(データ列, color='palevioletred')
黒い 色 差別 ない 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
ふたつ 関係 スーパー セット もしくは 等しい 調べる	aSet > aSet2
折れ線 グラフ 描画 し その 色 ディムグレー 指定 する	plt.plot(データ列, データ列2, color='dimgrey')
数値 緑色 する	f'\033[32m{value}\033[0m'
データ フレーム グループ 化 し 各 列 最小 値 求める	df.groupby(column)[column2].min()
正規 分布 疑似 乱数 求める	random.normalvariate(mu=0.5, sigma=0.2)
折れ線 グラフ 描画 し 色 リネン 指定 する	plt.plot(データ列, データ列2, color='linen')
補足 最適 な 位置 付ける	plt.legend(loc='best')
文字 列 左側 タブ 消す	s.lstrip('\t')
オプション ポイント 印 加える	marker = '.'
リスト 数列 淡い 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
以上 調べる	n >= n2
グラフ プレゼン 用 設定 する	sns.set(context='talk')
オブジェクト 属性 値 変更 する	setattr(obj, プロパティ名, 値)
オプション ファイル 出力 する	file = sys.open(filename, 'w')
データ フレーム カラム 中 未 入力 値 数 数える	df[col].isna().sum()
折れ線 グラフ 色 ダーク グリーン 設定 する	plt.plot(データ列, データ列2, color='darkgreen')
グラフ 色 色 差別 なく する	sns.set(pallete='colorblind')
濃い 折れ線 グラフ 色 赤色 設定 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
今日 日付	datetime.date.today()
ヒストグラム 描画 し その 色 ネイビー 変更 する	plt.hist(データ列, color='navy')
データ フレーム 列 行 抽出 する	df[df[column] == x]
二つ オブジェクト 等しい どう 調べる	obj == obj2
ヒストグラム 描画 し その 色 トマト セット する	plt.hist(データ列, color='tomato')
オプション 読み込ま ない 列 番号 指定 する	skiprows = names
点線 グラフ 描画 する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線 グラフ 大 バツ マーカー 大き さ 変更 する	plt.plot(データ列, データ列2, marker='X', markersize=n)
行 データ フレーム ソート する	df.sort_index()
アイボリー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='ivory')
ライト シアン 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightcyan')
リスト 番目 番目	aList[n:n2]
赤い マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
イテラブル 全 順列	itertools.permutations(iterable)
文字 列 接頭 辞 部分 文字 列 取り除く	s.removeprefix(sub)
日付 データ 日付 データ 後ろ 調べる	aDate > aDate2
オプション 色 フォレストグリーン 設定 する	color = 'forestgreen'
数列 リスト 散布 図 描い マーカー 色 パステル 調 の 変更 する	plt.plot(xdata, ydata, c='pastel')
リスト イテラブル パステル 調 グラフ プロット し その 色 青 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
ヒストグラム 描画 し その 色 ミディアムバイオレットレッド 設定 する	plt.hist(データ列, color='mediumvioletred')
ライト コーラル 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightcoral')
文字 列 開始 位置 終了 位置 部分 文字 列 探す	s.find(sub, start, end)
データ 列 ビン 数 ビン 分割 し ラベル つける	pd.cut(ds, n, labels=names)
配列 リスト 散布 図 赤色 星 マーカー 描く	plt.plot(xdata, ydata, marker='*', c='r')
現在 作業 ディレクトリ 設定 する	os.chdir(os.dirname(filepath))
データ フレーム 列 グループ 化 し それぞれ グループ ごと 合計 求める	df.groupby(column).sum()
カラム 最 頻 値	ds.mode()
オプション グラフ 色 ダーク グレー 設定 する	color = 'darkgrey'
グラフ タイトル 指定 する	plt.title(untitled)
データ フレーム 列 グループ 化 し それぞれ グループ ごと 合計 求める	df.groupby(column).sum()
最小 値 データ フレーム 欠損 値 埋める	df.fillna(df.min())
ヒストグラム 描画 し その 色 ライト シアン セット する	plt.hist(データ列, color='lightcyan')
変数 太字 化 する	f'\033[1m{value}\033[0m'
数式 微分 する	sympy.diff(e)
フォーマット 文字 列 日付 型 変換 する	pd.to_datetime(s, format=fmt)
ヒストグラム 描画 し その 色 ライト コーラル 設定 する	plt.hist(データ列, color='lightcoral')
底 する 実数 対数 算出 する	math.log2(x)
データ フレーム 関数 グループ 化 する	df.groupby(関数)
オプション オー キッド 色 用いる	color = 'orchid'
オプション マーカー 大 バツ 変更 する	marker = 'X'
実数 実数 引く	x - y
ヒストグラム カラー マップ 使う	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
ヒストグラム 描画 し その 色 小麦色 設定 する	plt.hist(データ列, color='wheat')
ヒストグラム 描画 し その 色 チョコレート 指定 する	plt.hist(データ列, color='chocolate')
折れ線 グラフ サイズ 星 印 描画 する	plt.plot(データ列, データ列2, marker='*', markersize=n)
キュー タプル する	tuple(deq)
データ フレーム 第 一 四 分 位 数	df.quantile(0.25)
データ 列 ラベル 指定 し 棒グラフ 描画 する	plt.bar(ラベル列, データ列)
文字 列 全体 正規 表現 大文字 小文字 無視 し マッチ する 調べる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
双方向 キュー	deq.popleft()
リスト リスト 散布 図 プロット し マーカー 色 明るい 設定 する	plt.plot(xdata, ydata, c='bright')
部分 文字 列 範囲 指定 し 探す	s.find(sub, start, end)
データ フレーム 中 いくつ 文字 列 ある 求める	df.isin([value]).sum()
オプション グラフ 色 スラグレー 変更 する	color = 'slategray'
オプション バツ マーカー 使う	marker = 'x'
リスト 縦 軸 リスト 横 軸 折れ線 プロット する	plt.plot(xdata, ydata)
データ フレーム 列 重複 ある 確認 する	df.duplicated(subset=column)
変数 値 スワップ する	x, y = y, x
折れ線 グラフ 印 大き さ 設定 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
文字 列 部分 文字 列 区切る	s.split(sub)
ヒストグラム 描画 し その 色 ピーチ パフ 変更 する	plt.hist(データ列, color='peachpuff')
オブジェクト タプルクラス インスタンス	isinstance(obj, tuple)
オプション コロン セパレータ 用いる	sep = ':'
データ 列 欠損 値 最小 値 指定 する	ds.fillna(ds.min())
黒い 四角 マーカー イテラブル リスト 散布 図 描く	plt.plot(xdata, ydata, marker='s', c='k')
データ フレーム 正規 分布 どの 程度 歪ん いる 確認 する	df.kurt()
色 差別 ない 色 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, c='colorblind')
マッピング 項目 名 値 入れ替える	{v: k for k, v in aDict.items()}
文字 列 シンボル する	sympy.Symbol(s)
折れ線 グラフ 描画 し その 色 バリーウッド 設定 する	plt.plot(データ列, データ列2, color='burlywood')
文字 列 フォーマット し 日付 時刻 データ 文字 列 変換 する	"aDatetime.strftime(""%d/%m/%y"")"
文字 列 全て 大文字	s.isupper()
リスト 座標 指定 し リスト 変化 プロット する	plt.plot(range(len(xdata)), xdata)
ダークシアグリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkseagreen')
今日 ローカル な 日付 時刻	datetime.datetime.today()
黒い 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
データ フレーム 正規 分布 どの 程度 尖っ いる 見る	df.skew()
折れ線 グラフ 色 茶色 設定 する	plt.plot(データ列, データ列2, color='brown')
ゼロ 埋め さ れ た 複素数 型 配列	np.zeros(要素数, dtype=bool)
辞書 キー 対応 し た 値 参照 する	aDict.get(key)
文字 列 ユニコードエスケープ バイト 列 変換 する	s.encode(encoding='unicode_escape')
現在 時刻	datetime.date.today().hour
文字 列 空白 区切り 数列 する	map(int, s.split())
グラフ 使用 する 座標 軸 ラベル 付ける	plt.ylabel(untitled)
一方 含ま れ 他方 含ま れ ない 集合 使う	aSet.difference(aSet2)
オプション 色 ミディアムアクアマリン 変更 する	color = 'mediumaquamarine'
ヒストグラム 色 青 緑 する	plt.hist(データ列, color='turquoise')
データ フレーム 複数 列 破壊 的 並べ 直す	df.sort_values(by=column, inplace=True)
データ フレーム 中 カラム 等量 ビン 数 分割 する	pd.qcut(df[col], n)
折れ線 グラフ 描画 し 色 ハニーデュー 指定 する	plt.plot(データ列, データ列2, color='honeydew')
データ 列 日付 データ する	pd.to_datetime(ds)
オプション ミッドナイト ブルー 色 使う	color = 'midnightblue'
要素 集合 メンバー 調べる	element in aSet
カラー コード 三角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='^', c=rgb)
オプション グラフ 色 ダーク シアン 設定 する	color = 'darkcyan'
データ フレーム カラム 欠損 値 埋める	df[col].fillna(x)
ガンマ 関数 絶対 値 自然 対数 とっ た 値	math.lgamma(x)
ヒストグラム 描画 し その 色 ドジャーブルー セット する	plt.hist(データ列, color='dodgerblue')
リスト 配列 散布 図 描い 丸 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='o', c=rgb)
配列 リスト 暗い グラフ 描画 し 色 青 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
つ データ 列 並べ ヒストグラム する	plt.hist([データ列, データ列2], color=['b', 'r'])
オプション ミディアムシアグリーン 色 使う	color = 'mediumseagreen'
サブ セット どう テスト する	aSet.issubset(aSet2)
リスト オブジェクト 最初 見つかる インデックス	aList.index(element)
オプション グラフ 色 ライトグリーン する	color = 'lightseagreen'
文字 列 全て 印字 できる	s.isprintable()
ヒストグラム 色 ホット ピンク 指定 する	plt.hist(データ列, color='hotpink')
線 グラフ 描画 し その 色 コーンズシルク セット する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線 グラフ 丸 マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='o', markersize=n)
データ フレーム 複数 列 並べ 先頭 する	df.sort_values(by=column, na_position='first')
ミディアムスレートブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mediumslateblue')
データ フレーム 上 行 見る	df.head(n)
カウンタ 項目 リスト し 得る	aCounter.keys()
緑色 丸 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
以上 かつ 以下 どう 調べる	n <= n2 and n2 <= n3
フォーマット データ フレーム 日付 データ する	pd.to_datetime(df[col], format=fmt)
データ 列 中 いくつ 文字 列 存在 する 求める	ds.isin([value]).sum()
折れ線 グラフ バツ 印 赤く する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
文字 列 漢字 調べる	('\u4E00' <= ch <= '\u9FD0')
ヒストグラム 描画 し 色 小麦色 指定 する	plt.hist(データ列, color='wheat')
ヒストグラム 描画 し その 色 ゴースト ホワイト 変更 する	plt.hist(データ列, color='ghostwhite')
線 グラフ 描画 し その 色 モカシン 指定 する	plt.plot(データ列, データ列2, color='moccasin')
プラム 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='plum')
折れ線 グラフ 下 三角 印 黄色く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
リスト リスト 散布 図 描画 し マーカー 色 明るい 設定 する	plt.plot(xdata, ydata, c='bright')
ストリーム 文字 読み込む	f.read(1)
折れ線 グラフ 色 ダーク オリーブ グリーン 指定 する	plt.plot(データ列, データ列2, color='darkolivegreen')
双方向 キュー 番目 番目 部分 値	collections.deque(itertools.islice(deq, start, end))
小数点 数 床 求める	math.floor(x)
文字 列 最後 改行 除く	s.rstrip('\n')
データ フレーム カラム 中 日付 データ 文字 列 いくつ ある 求める	df[col].isin([value, value2]).sum()
データ フレーム 欠損 値 前 行 値 埋める	df.fillna(method='ffill')
ストリーム 文字 列 し 書く	f.write(str(x))
底 する 実数 対数	math.log2(x)
折れ線 グラフ 色 ダーク サーモン セット する	plt.plot(データ列, データ列2, color='darksalmon')
カウンタ リスト し 得る	aCounter.most_common(k)
線 グラフ 描画 し 色 ペルー 設定 する	plt.plot(データ列, データ列2, color='peru')
折れ線 グラフ 描画 し 色 ミディアムスプリンググリーン 設定 する	plt.plot(データ列, データ列2, color='mediumspringgreen')
足し 代入 する	n += n2
濃い 折れ線 グラフ 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
文字 列 内 小文字 ある 調べる	any(c.islower() for c in s)
データ フレーム 列 文字 列 欠損 値 する	df[col].replace(s, np.nan)
スピアマン 相関 係数 データ フレーム 列 列 相関 行列	df[[column, column2]].corr(method='spearman')
データ フレーム 列 置換 する	df[col].fillna(x)
文字 列 中 非 大文字 含ま れる	any(not c.isupper() for c in s)
マッピング コピー 作る	dict(aDict)
淡い グラフ 色 青色 設定 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
二つ タプル ネスト する	collections.ChainMap(aDict, aDict2)
オプション リネン 色 使用 する	color = 'linen'
データ フレーム 欠損 値 平均 値 セット する	df.fillna(df.mean())
オブジェクト バイト 長	sys.getsizeof(obj)
オプション ダーク グレー 色 使用 する	color = 'darkgray'
日付 時刻 データ 曜日 整数 使う	aDatetime.weekday()
色 差別 ない グラフ 線 幅 セット する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
データ フレーム 列 欠損 値 最 頻 値 セット する	df[col].fillna(df[col].mode().iloc[0])
日付 時刻 データ 時間 分 足す	aDatetime + datetime.timedelta(hours=n)
カラー コード 丸 マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='o', c=rgb)
分子 分母 分数 新規 生成 する	fractions.Fraction(分子, 分母)
マーカー 用い 散布 図 描く	plt.plot(xdata, ydata, marker='v')
ヒストグラム 描画 し その 色 ライム セット する	plt.hist(データ列, color='lime')
空白 見る	' '
折れ線 グラフ 色 ダーク サーモン 変更 する	plt.plot(データ列, データ列2, color='darksalmon')
ライト イエロー ヒストグラム 色 セット する	plt.hist(データ列, color='lightyellow')
日付 型 データ 列 インデックス する	df.index = pd.DatetimeIndex(ds)
折れ線 グラフ 色 シャルトリューズ 設定 する	plt.plot(データ列, データ列2, color='chartreuse')
リスト 少なくとも 一つ 真 調べる	any(aList)
データ フレーム 重複 し い ない 行 抽出 する	df[not df.duplicated(keep=False)]
パステル 調 折れ線 グラフ 線 幅 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
ヒストグラム 色 シスル 変更 する	plt.hist(データ列, color='thistle')
データ フレーム カラム どの 程度 分散 し いる 確認 する	df[col].var()
データ フレーム 位 四捨五入 し 整数 する	df.round(-1).astype(int)
サンディーブラウン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線 グラフ 描画 し 色 淡い ピンク色 設定 する	plt.plot(データ列, データ列2, color='lightpink')
明るい グラフ 色 赤く する	plt.plot(xdata, ydata, linestyle='bright', color='r')
ケン ドール 順位 相関 係数 データ フレーム 列 列 相関 行列	df[[column, column2]].corr(method='kendall')
タプル 昇順 並べる	sorted(aTuple, reverse=False)
大きい 調べる	n > n2
本日 日 使う	datetime.datetime.today().day
カウンタ シーケンス 更新 する	aCounter.update(iterable)
実数 天井 算出 する	math.ceil(x)
オプション 色 ミディアムスレートブルー 設定 する	color = 'mediumslateblue'
双方向 キュー 右 要素 入れる	deq.append(element)
二つ データ 列 並べ 箱 ヒゲ 図 する	plt.boxplot([データ列, データ列2])
現在 分数	datetime.date.today().minute
丸 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='o')
ヒストグラム 色 黄色 変更 する	plt.hist(データ列, color='yellow')
各 桁 和 計算 する	sum(map(int, str(n)))
ヒストグラム 描画 し その 色 オーキッド 設定 する	plt.hist(データ列, color='orchid')
オプション サドル ブラウン 色 用いる	color = 'saddlebrown'
折れ線 グラフ 描画 し 色 シャルトリューズ 設定 する	plt.plot(データ列, データ列2, color='chartreuse')
日付 時刻 データ 秒 分 加算 する	aDatetime + datetime.timedelta(seconds=n)
ヒストグラム 色 ロージーブラウン セット する	plt.hist(データ列, color='rosybrown')
オプション グラフ 色 リネン 変更 する	color = 'linen'
文字 列 記号 変換 する	sympy.Symbol(s)
散布 図 マーカー 大き さ 指定 する	plt.scatter(xdata, ydata, s=n)
オプション どの 列 インデックス 設定 し ない	index_col = None
割る 切り上げる	(n + n2 - 1) // n2
リスト 配列 散布 図 文字 列 データ ラベル 用 ラベル つける	plt.scatter(xdata, xdata, label=s)
凡例 入れる	plt.legend()
変数 赤色 プリント できる 文字 列 変換 する	f'\033[31m{value}\033[0m'
折れ線 グラフ 色 パパイヤウィップ 指定 する	plt.plot(データ列, データ列2, color='papayawhip')
割っ た 余り 代入 する	n %= n2
等差 数列 乱数 生成 する	random.randrange(start, end, step)
列 各 値 何 回 出現 する 見る	ds.value_counts()
データ 列 リスト 青色 淡い 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
ヒストグラム 描画 し 色 ライト ブルー 設定 する	plt.hist(データ列, color='lightblue')
文字 列 中 限定 正規 表現 マッチ し た 全て 文字 列 リスト する	re.findall(pattern, s, flags=re.ASCI)
異なる 列 キー し 二つ データ フレーム 外部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
折れ線 グラフ ポイント マーカー 加える	plt.plot(データ列, データ列2, marker='.')
日付 時刻 データ タイムスタンプデータ 時間 差 秒 数 求める	(aDatetime - aDatetime2).total_seconds()//60
列 回 あわせ た 直積	itertools.product(iterable, repeat=2)
ゼロ 埋め さ れ た ブール 型 行列	np.zeros(要素数, dtype=np.int32)
色 差別 ない グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
折れ線 グラフ 丸 マーカー 赤く する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
文字 列 終了 位置 以前 部分 文字 列 含ま れる	s.find(sub, 0, end) != -1
タイムスタンプデータ 日 分 減算 する	aDatetime - datetime.timedelta(days=n)
データ フレーム 複数 列 ソート する	df.sort_values(by=column)
データ フレーム リスト カラム 中 文字 列 日付 データ いくつ ある 数える	df[aList].isin([value, value2]).sum()
文字 列 内 ひとつ 大文字 ある 調べる	any(c.isupper() for c in s)
青 ヒストグラム 色 設定 する	plt.hist(データ列, color='blue')
マッピング 値 要素 含ま れ い ない どう 調べる	element not in aDict.values()
否定 する	not n
バージョン 見る	print(pd.__version__)
データ フレーム 関数 まとめ た グループ	df.groupby(関数)
データ フレーム 列 昇順 破壊 的 ソート する	df.sort_values(by='A', ascending=True, inplace=True)
リスト 配列 散布 図 描画 し マーカー 丸 セット する	plt.plot(xdata, ydata, marker='o')
ファイル 拡張 子 なし ファイル 名 使う	os.path.splitext(os.path.basename(filepath))[0]
折れ線 グラフ 四角 マーカー 線 幅 指定 する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線 グラフ マーカー サイズ する	plt.plot(データ列, データ列2, marker='v', markersize=n)
カラー コード ポイント マーカー 配列 リスト 散布 図 描く	plt.plot(xdata, ydata, marker='.', c=rgb)
区切り し 文字 列 リスト ひとつ 文字 列 する	sep.join(aStringList)
オプション ダークシアグリーン 使う	color = 'darkseagreen'
表 それぞれ グループ ごと 最大 値 求める	df.groupby(column).max()
リスト リスト 散布 図 描画 し 左 三 角 マーカー 色 カラー コード 指定 する	plt.plot(xdata, ydata, marker='<', c=rgb)
オプション グラフ 色 ディムグレー 設定 する	color = 'dimgray'
ヒストグラム 色 ライト グレー セット する	plt.hist(データ列, color='lightgray')
ヒストグラム 描画 し その 色 デピンク 変更 する	plt.hist(データ列, color='deeppink')
句読点 文字 全部 使う	string.punctuation
オプション 色 ライトスレイグレー 設定 する	color = 'lightslategray'
文字 列 最後	s[-1]
データ フレーム リスト カラム 中 存在 する 調べる	df[aList].isin([value])
列 キー データ フレーム 内部 結合 する	pd.merge(df, df2, on=column, how='inner')
現在 分数 使う	datetime.date.today().minute
線 グラフ 描画 し 色 ライト ブルー 設定 する	plt.plot(データ列, データ列2, color='lightblue')
ペルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='peru')
データ フレーム グループ 化 し それぞれ 列 個数 求める	df.groupby(column)[column2].count()
処理 中 例外 情報 確認 する	sys.exc_info()
オプション ゴールデン ロッド 色 用いる	color = 'goldenrod'
棒グラフ 描画 し グラフ 幅 設定 する	plt.bar(ラベル列, データ列, width=x)
折れ線 グラフ 色 ライト ブルー セット する	plt.plot(データ列, データ列2, color='lightblue')
データ フレーム 最大 値 埋める	df.fillna(df.max())
折れ線 グラフ 描画 し その 色 オールド レース 設定 する	plt.plot(データ列, データ列2, color='oldlace')
折れ線 グラフ サイズ 丸 印 描画 する	plt.plot(データ列, データ列2, marker='o', markersize=n)
データ フレーム ランダム 行 抽出 する	df.sample(n)
折れ線 グラフ 描画 し その 色 ディープスカイブルー 変更 する	plt.plot(データ列, データ列2, color='deepskyblue')
データ フレーム 各 列 毎 集約 し 列 標準 偏差 算出 する	df.groupby(column)[column2].std()
オプション グラフ 色 ダーク バイオレット 指定 する	color = 'darkviolet'
青い 淡い グラフ プロット する	plt.plot(xdata, ydata, linestyle='muted', color='b')
マッピング 値 一覧	aDict.values()
データ フレーム リスト カラム 欠損 値 最小 値 補う	df[aList].fillna(df[aList].min())
ファイル 読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
リスト 最後 捨てる	aList[:-1]
オプション グラフ 色 ダークゴールデンロッド 変更 する	color = 'darkgoldenrod'
線 グラフ 色 マゼンタ 設定 する	plt.plot(データ列, データ列2, color='magenta')
ヒストグラム 色 ライト コーラル セット する	plt.hist(データ列, color='lightcoral')
折れ線 グラフ 描画 し その 色 オーキッド 指定 する	plt.plot(データ列, データ列2, color='orchid')
ファイル パス ストリーム オープン し する	file = open(filepath)
タイムスタンプデータ 金曜日 調べる	aDatetime.weekday() == 4
黒色 パステル 調 の 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
データ 列 何 月 確認 する	ds.dt.month
折れ線 グラフ 描画 し その 色 ディープスカイブルー する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線 グラフ 描画 し その 色 シャルトリューズ 設定 する	plt.plot(データ列, データ列2, color='chartreuse')
配列 リスト 散布 図 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='x')
双方向 キュー 末尾 イテラブル 各 値 追加 する	deq.extend(iterable)
整数 進 文字 列 使う	oct(n)[2:]
列 重複 コンビネーション 得る	itertools.combinations_with_replacement(iterable, n)
線 グラフ 描画 し 色 黄色 変更 する	plt.plot(データ列, データ列2, color='yellow')
オプション インディアン レッド 色 使う	color = 'indianred'
数列 リスト 破線 グラフ 描い 色 色 差別 ない 変更 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
全て 空白 文字	string.whitespace
散布 図 左 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='<')
データ フレーム カラム 曜日 名前	df[col].dt.weekday_name
逆順 双方向 キュー	reversed(deq)
変数 マイナス 無限 大 近づく 時 数値 極限 値 計算 する	sympy.limit(e, z, -oo)
文字 列 セパレータ 分割 する	s.split(sub)
辞書 値 列挙 する	aDict.values()
絶対 値 求める	abs(x)
データ フレーム リスト 列 正規 表現 まとめ 置き換える	df[aList].replace(pattern, repl, regex=True)
データ フレーム 中 列 列 重複 見る	df.duplicated(subset=[column, column2])
文字 列 文字 列 辞書 順 前 調べる	s < s2
配列 合計	np.sum(aArray)
複素数	complex(x, y)
現在 文字 列 フォーマット し 文字 列 変換 する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
組 合計	sum(aTuple)
オプション アクア 色 使う	color = 'aqua'
リスト 軸 リスト 座標 大き さ 散布 図 描画 する	plt.scatter(xdata, ydata, s=n)
リスト 中 最大 値	max(aList)
文字 列 組 要素 テスト する	element in aTuple
グラフ 描画 パステル 調 カラー パレット 使う	sns.set(pallete='pastel')
つ データ フレーム 列 キー し 内部 結合 する	pd.merge(df, df2, on=column, how='inner')
データ フレーム 大きい 順 列 名 リスト ソート する	df.sort_values(by=column, ascending=False)
データ 列 リスト 散布 図 黒い クロス マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c='k')
グラフ 描画 色 差別 ない カラー パレット 使う	sns.set(pallete='colorblind')
実数 三 乗	x ** 3
日付 時刻 データ 週間 前 戻す	aDatetime - datetime.timedelta(weeks=n)
線 グラフ 色 アクア 指定 する	plt.plot(データ列, データ列2, color='aqua')
散布 図 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X')
折れ線 グラフ 下 三角 マーカー 赤く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
オプション グラフ 色 変更 する	color = 'darkslategrey'
線 グラフ 描画 し その 色 ターコイズ 設定 する	plt.plot(データ列, データ列2, color='turquoise')
データ フレーム 列 正規 分布 どの 程度 尖っ いる 見る	df[col].skew()
濃い グラフ 配列 リスト 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
グラフ ポスター 用 設定 する	sns.set(context='poster')
未満 または 以上 どう 確認 する	n < n2 or n >= n3
複数 行 対応 パターン 事前 コンパイル する	re.compile(pattern, flag=re.MULTILINE)
二 次元 リスト 転置 する	[list(x) for x in list(zip(*aList))]
リスト データ 列 散布 図 描画 し マーカー 色 濃い 設定 する	plt.plot(xdata, ydata, c='deep')
タプル 全て 真 調べる	all(aTuple)
データ フレーム 中 文字 列 含ま れる	df.isin([value])
フォーマット バイト 列 辞書 変換 する	json.loads(b.decode('unicode-escape'))
データ フレーム 各 列 毎 グループ 化 し 列 合計 算出 する	df.groupby(column)[column2].sum()
オプション パープル グラフ 色 設定 する	color = 'purple'
文字 列 全て 数値 調べる	s.isnumeric()
データ フレーム 列 位 丸め 整数 する	df[col].round(-2).astype(int)
シーケンス 各 要素 適用 真 で あれ その 要素 出力 する	itertools.takewhile(predicateFunc, iterable)
ヒストグラム 色 レモン シフォン 設定 する	plt.hist(データ列, color='lemonchiffon')
文字 列 中 正規 表現 マッチ する 文字 列 探す	re.search(pattern, s)
形式 文字 列 辞書 変換 する	json.loads(jsonString)
データ フレーム 重複 残さ ず 消す	df.drop_duplicates(keep=False)
データ フレーム 列 加え ワン ホット ベクトル 変換 する	pd.get_dummies(df[column], dummy_na=True)
データ フレーム 列 で ない 行 フィルタ する	df[df[column] == x]
オプション レモン シフォン 使う	color = 'lemonchiffon'
棒グラフ 描画 し 中央 寄せ する	plt.bar(ラベル列, データ列, align='center')
折れ線 グラフ 描画 し その 色 ミディアムターコイズ 設定 する	plt.plot(データ列, データ列2, color='mediumturquoise')
オブジェクト リスト クラス インスタンス 調べる	isinstance(obj, list)
割り切れる 調べる	n % 2 == 0
組 どれ 調べる	n in aTuple
ヒストグラム 描画 し その 色 アクア する	plt.hist(データ列, color='aqua')
データ 列 ヒストグラム 可視 化 する	plt.hist(ds)
イテラブル 文字 列 リスト 変換 し カンマ 連結 する	','.join(map(str, iterable))
アリス ブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='aliceblue')
直後 値 データ 列 欠損 値 埋める	ds.fillna(method='bfill')
文字 列 空白 分割 する	s.split()
カラー バー 横向き つける	plt.colorbar(orientation='horizontal')
線 グラフ 描画 し その 色 クリムゾン 設定 する	plt.plot(データ列, データ列2, color='crimson')
データ 列 タイム ゾーン 文字 列 設定 する	ds.tz_convert(s)
データ フレーム リスト カラム 未 入力 値 平均 値 設定 する	df[aList].fillna(df[aList].mean())
数列 淡い 色 ヒストグラム 描画 する	plt.hist(xdata, color='muted')
データ フレーム 全体 降順 インデックス 並べる	df.sort_index(ascending=False)
暗い 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
データ フレーム 破壊 的 重複 し た 行 削除 する	df.drop_duplicates(inplace=True)
オブジェクト 整数 クラス 調べる	isinstance(obj, int)
折れ線 グラフ 色 インディアン レッド 設定 する	plt.plot(データ列, データ列2, color='indianred')
ファイル パス 開い 追加 ストリーム 求める	open(filepath, mode='a')
リスト イテラブル カラー コード 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
実数 小数点 以下 丸める	round(x, n)
折れ線 グラフ 描画 し その 色 ローン グリーン 指定 する	plt.plot(データ列, データ列2, color='lawngreen')
モカシン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='moccasin')
リスト 順番 付け する	enumerate(aList, start=n)
ヒストグラム 描画 し その 色 ライト ブルー 指定 する	plt.hist(データ列, color='lightblue')
データ フレーム 正規 分布 上下 広がり	df.skew()
赤色 四角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='s', c='r')
線 グラフ 描画 し その 色 オールド レース 指定 する	plt.plot(データ列, データ列2, color='oldlace')
カラー コード 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c=rgb)
文字 列 部分 文字 列 全て 取り除く	s.replace(sub, '')
文字 列 新しい 文字 列 使っ 置換 する	s.replace(sub, newsub)
データ フレーム 相関 行列 ヒートマップ 描画 する	sns.heatmap(df.corr())
データ フレーム 表示 する とき 表示 可能 な 最大 列 数 変更 する	pd.set_option('display.max_columns', n)
行列 同じ 大き さ 空 配列 作成 する	np.empty_like(aArray)
棒グラフ 描画 し 幅 設定 する	plt.bar(ラベル列, データ列, width=x)
データ フレーム 列 中 文字 列 ある 調べる	df[col].isin([value])
データ フレーム ファイル 付け 保存 する	df.to_csv(filename, encoding='utf_8_sig')
折れ線 グラフ マーカー ダイアモンド 印 する	plt.plot(データ列, データ列2, marker='D')
文字 列 中 大文字 小文字 無視 し 正規 表現 マッチ し た 全て 文字 列 リスト 変換 する	re.findall(pattern, s, flags=re.IGNORECASE)
折れ線 グラフ 色 オレンジ レッド セット する	plt.plot(データ列, データ列2, color='orangered')
折れ線 グラフ 色 フクシア 設定 する	plt.plot(データ列, データ列2, color='fuchsia')
行列 各 要素 最大公約数	np.gcd(aArray, aArray2)
数値 インテグラル 行う	sympy.integrate(e)
配列 リスト 暗い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
ベクトル ユニーク な 要素 ごと 頻度	np.unique(aArray, return_counts=True)
配列 リスト 散布 図 カラー コード 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c=rgb)
折れ線 グラフ 色 レモン シフォン 設定 する	plt.plot(データ列, データ列2, color='lemonchiffon')
変数 スワップ する	x, y = y, x
二つ データ フレーム 異なる 列 キー 外部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
変数 数値 積分 する	sympy.integrate(e, z)
オプション コーンフラワーブルー 色 設定 する	color = 'cornflowerblue'
リスト リスト 濃い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
リスト リスト 散布 図 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X')
各 列 毎 データ フレーム グループ 化 し 列 分散 計算 する	df.groupby(column)[column2].var()
折れ線 グラフ 色 ダークオーキッド 変更 する	plt.plot(データ列, データ列2, color='darkorchid')
リスト リスト 散布 図 描画 し マーカー 四角 設定 する	plt.plot(xdata, ydata, marker='s')
エポック 秒 日付 時刻 する	datetime.datetime.fromtimestamp(timestamp)
実行 結果 黄色 表示 できる 文字 列 する	f'\033[33m{value}\033[0m'
オプション パレットトルコイズ 色 用いる	color = 'paleturquoise'
データ フレーム リスト カラム 中 ある 文字 列 文字 列 合計 数える	df[aList].isin([value, value2]).sum()
値 黒色 プリント できる 文字 列 変換 する	f'\033[30m{value}\033[0m'
折れ線 グラフ 大き さ マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
プラットホーム ウィンドウズ どう 調べる	sys.platform.startswith('win32')
ブランチドアーモンド ヒストグラム 色 設定 する	plt.hist(データ列, color='blanchedalmond')
日付 データ 日付 データ 時間 差 秒 計算 する	(aDate - aDate2).total_seconds()//60
フォーマット 文字 列 読み込む	json.loads(jsonString)
折れ線 グラフ 右 三 角 マーカー 黒く する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
データ フレーム カラム 百 位 丸め 整数 型 する	df[col].round(-2).astype(int)
ヒストグラム 描画 し その 色 オールド レース 指定 する	plt.hist(データ列, color='oldlace')
文字 列 両端 不要 な 空白 改行 取り除く	s.strip()
折れ線 グラフ 描画 し その 色 アイボリー 指定 する	plt.plot(データ列, データ列2, color='ivory')
データ フレーム リスト カラム 第 二 四 分 位 数	df[aList].median()
リスト リスト 散布 図 黒い 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c='k')
線 グラフ 描画 し その 色 サンディーブラウン 設定 する	plt.plot(データ列, データ列2, color='sandybrown')
オプション ライトグリーン 色 使う	color = 'lightseagreen'
オプション ライトグリーン 色 使用 する	color = 'lightseagreen'
データ フレーム グループ 化 し それぞれ 列 標準 偏差 計算 する	df.groupby(column)[column2].std()
タイムスタンプデータ 何 年 知る	aDatetime.year
グラフ 背景 色 白く する	sns.set(style='whitegrid')
リスト リスト カラー コード 濃い 描画 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
データ フレーム インデックス ソート する	df.sort_index()
辞書 階層 化 する	collections.ChainMap(aDict)
白色 値 表示 する	print(f'\033[37m{value}\033[0m')
リスト リスト パステル 調 グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
折れ線 グラフ 描画 し 印 右 三 角 する	plt.plot(データ列, データ列2, marker='>')
十 六 進 文字 列 バイト 列 する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
ふたつ 集合 互いに 素 調べる	aSet.isdisjoint(aSet2)
データ フレーム カラム 欠損 値 直前 値 埋める	df[col].fillna(method='ffill')
データ フレーム 内 列 列 重複 見る	df.duplicated(subset=[column, column2])
文字 列 数値	s.isnumeric()
データ フレーム 重複 する 行 残さ ず 削除 する	df.drop_duplicates(keep=False)
ファイル パス 書き込み できる よう オープン する	open(filepath, mode='w', encoding='euc_jp')
ヒストグラム 色 オレンジ レッド セット する	plt.hist(データ列, color='orangered')
データ フレーム リスト 列 平均 値 算出 する	df[aList].mean()
ゼロ 埋め さ れ た 整数 型 行列 作る	np.zeros(要素数, dtype=np.int)
データ フレーム 列 文字 列 文字 列 含ま れる 行 選ぶ	df[df[column].str.contains(s)]
実数 正 数 確認 する	x > 0
以上 以下 調べる	-9 <= x <= 9
ふたつ 関係 部分 集合 確認 する	aSet.issubset(aSet2)
数列 リスト 淡い グラフ 描画 し その 色 青く する	plt.plot(xdata, ydata, linestyle='muted', color='b')
折れ線 グラフ 色 ライトスレイグレー 設定 する	plt.plot(データ列, データ列2, color='lightslategray')
要素 ひとつ タプル	(element,)
耐火 レンガ ヒストグラム 色 変更 する	plt.hist(データ列, color='firebrick')
折れ線 グラフ 大 バツ マーカー 黄色く する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
データ フレーム 未 入力 値 含め 列 値 グループ 分け する	df.groupby(column, dropna=False)
オプション スラッシュ セパレータ 使う	sep = '/'
破線 グラフ 描画 する	plt.plot(データ列, データ列2, linestyle='dashed')
データ フレーム 列 名 リスト 破壊 的 昇順 ソート する	df.sort_values(by=column, ascending=True, inplace=True)
文字 列 タプル 要素	element in aTuple
ヒストグラム 描画 し 色 ペールグリーン 設定 する	plt.hist(データ列, color='palegreen')
列 個 サンプリング する	random.sample(iterable, k=n)
後 行 値 データ 列 欠損 値 埋める	ds.fillna(method='bfill')
ミント クリーム 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mintcream')
リスト リスト 散布 図 描画 し 大 バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='X', c=rgb)
疑似 乱数 平均 標準 偏差 得る	random.normalvariate(mu=0.5, sigma=0.2)
両端 キュー 左 イテラブル 各 要素 追加 する	deq.extendleft(iterable)
書式 データ 列 タイム スタンプ 型 する	pd.to_datetime(ds, format='%Y-%m-%d')
文字 列 先頭 部分 文字 列 探す	s.find(sub)
データ フレーム カラム 要約 統計 量	df[col].describe()
線 グラフ 色 シスル 設定 する	plt.plot(データ列, データ列2, color='thistle')
オプション フクシア 色 使う	color = 'fuchsia'
オプション グラフ 色 グリーン イエロー 指定 する	color = 'greenyellow'
つ データ フレーム 横 方向 合体 さ せる	pd.merge(df, df2)
二つ 列 データ フレーム ソート し 更新 する	df.sort_values(by=['A', 'B'], inplace=True)
カウンタ 項目 数 見る	len(aCounter)
線 グラフ 描画 し その 色 ミディアムバイオレットレッド セット する	plt.plot(データ列, データ列2, color='mediumvioletred')
リスト 配列 濃い 折れ線 グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
今日 日付 使う	datetime.date.today()
リスト 先頭 要素 取り除く	aList[n:]
リスト データ 列 パステル 調 の 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リスト 並べる	sorted(aList)
データ フレーム リスト カラム 文字 列 変換 する	df[aList].replace(s, np.nan)
データ フレーム 列 正規 分布 どれ 尖っ いる 見る	df[col].skew()
データ フレーム 行 列 除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
変数 名 項目 名 辞書 作る	dict(name=element)
折れ線 グラフ 描画 し その 色 ブランチドアーモンド 設定 する	plt.plot(データ列, データ列2, color='blanchedalmond')
散布 図 カラー コード マーカー 使う	plt.plot(xdata, ydata, marker='^', c=rgb)
全 要素 初期 化 さ れ た 三 二 ビット 整数 型 行列 作る	np.zeros(行数, 列数, dtype=np.int16)
折れ線 グラフ 色 ライトスチールブルー セット する	plt.plot(データ列, データ列2, color='lightsteelblue')
文字 列 接尾 辞 部分 文字 列 取り除く	s.removesuffix(sub)
浮動 小数点 数 正弦	math.sin(x)
実数 逆数	math.acosh(x)
データ フレーム 列 名 リスト 並べ 先頭 する	df.sort_values(by=column, na_position='first')
オプション 色 ホット ピンク 設定 する	color = 'hotpink'
折れ線 グラフ 描画 し 色 ラベンダー 設定 する	plt.plot(データ列, データ列2, color='lavender')
濃い 色 青 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
線 グラフ 描画 し その 色 マゼンタ 設定 する	plt.plot(データ列, データ列2, color='magenta')
列 シーケンス ペア リング する	itertools.zip_longest(iterable, iterable2)
データ フレーム カラム 中 ある 文字 列 数 カウント する	df[col].isin([value]).sum()
整数 変換 する	int(x)
オブジェクト ある クラス 調べる	isinstance(obj, クラス)
以下 または 以上	n <= n2 or n >= n3
オプション 色 ブランチドアーモンド 設定 する	color = 'blanchedalmond'
線 グラフ 色 ダーク オレンジ 設定 する	plt.plot(データ列, データ列2, color='darkorange')
ヒストグラム 描画 し 色 ペールグリーン セット する	plt.hist(データ列, color='palegreen')
ヒストグラム 色 パールバイオレットレッド セット する	plt.hist(データ列, color='palevioletred')
配列 平均	np.mean(aArray)
文字 列 最後 部分 文字 列 分け た とき 後半 文字 列	s.rpartition(sub)[-1]
ファイル データ フレーム ヘッダ 付け ず 保存 する	df.to_csv(filename, header=None)
データ フレーム 列 用い ソート し 新しい 行 振り 直す	df.sort_values(columns).reset_index()
配列 四 分 位 数 ビン 分割 する	pd.qcut(aArray, 4)
文字 列 最後 部分 文字 列 二分 し 前半 文字 列 求める	s.rpartition(sub)[0]
プラットホーム どう 調べる	sys.platform.startswith('darwin')
ヒストグラム 描画 し 色 シアン 設定 する	plt.hist(データ列, color='cyan')
データ フレーム リスト 列 中 日付 データ 存在 する	df[aList].isin([value, value2])
折れ線 グラフ マーカー する	plt.plot(データ列, データ列2, marker='v')
配列 配列 散布 図 赤い マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='r')
青色 明るい グラフ プロット する	plt.plot(xdata, ydata, linestyle='bright', color='b')
散布 図 赤い 右 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='>', c='r')
ヒストグラム 色 ダークオーキッド 変更 する	plt.hist(データ列, color='darkorchid')
白色 ヒストグラム 描画 する	plt.hist(データ列, color='white')
色 差別 ない 色 折れ線 グラフ 描画 し 線 幅 指定 する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
折れ線 グラフ 色 ゲインズボロ する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線 グラフ 描画 し その 色 ダーク サーモン 変更 する	plt.plot(データ列, データ列2, color='darksalmon')
キュー 要素 する	deq.appendleft(element)
折れ線 グラフ 描画 し その 色 ネイビー 変更 する	plt.plot(データ列, データ列2, color='navy')
十 六 進 数字 全部 使う	string.hexdigits
暗い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
ヒストグラム 色 ラベンダー 設定 する	plt.hist(データ列, color='lavender')
データ フレーム 列 直後 値 変更 する	df[col].fillna(method='bfill')
リスト リスト 散布 図 菱形 マーカー 描画 する	plt.plot(xdata, ydata, marker='D')
ヒストグラム 色 カーキ 指定 する	plt.hist(データ列, color='khaki')
リスト リスト 散布 図 カラー コード 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c=rgb)
オプション 読み込み モード 使う	mode = 'r'
ヒストグラム 描画 し その 色 ライトスレイグレー 変更 する	plt.hist(データ列, color='lightslategrey')
オプション マーカー 星 変更 する	marker = '*'
カラー バー 横向き 付ける	plt.colorbar(orientation='horizontal')
データ フレーム リスト カラム どの 程度 分散 し いる 確認 する	df[aList].var()
グラフ 色 淡く する	sns.set(pallete='muted')
実数 千 位 四捨五入 する	round(x, -3)
オプション 書き込み モード 変更 する	mode = 'w'
イテラブル と列 ペア リング する	itertools.zip_longest(iterable, iterable2)
実数 正 調べる	x > 0
標準 入力 行 読み込ん 改行 取り除く	sys.stdin.readline().rstrip()
折れ線 グラフ 色 パールゴールデンロッド 設定 する	plt.plot(データ列, データ列2, color='palegoldenrod')
凡例 グラフ 中 位置 入れる	plt.legend(loc=(x, y))
奇 整数 列 得る	list(range(1, n, 2))
ファイル 用い オープン する	open(filepath, encoding='shift_jis')
明るい 色 データ 列 ヒストグラム プロット する	plt.hist(xdata, color='bright')
双方向 キュー 部分 取り出す	collections.deque(itertools.islice(deq, start, end))
左 両端 キュー 要素 個 分 回転 さ せる	deq.rotate(-n)
暗い 色 散布 図 描画 する	plt.plot(xdata, ydata, c='dark')
データ フレーム 列 名前 列 文字 列 付け 直す	df.rename(columns={column: name})
ライト ブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightblue')
スクリプト 名前	sys.argv[0]
リスト 境界 値 リスト ビニング する	pd.cut(aList, aList)
データ フレーム 中 列 等間隔 個 ビンニング する	pd.cut(df[col], n)
データ フレーム 未 入力 値 最大 値 する	df.fillna(df.max())
データ フレーム 各 グループ ごと 分散	df.groupby(column).var()
青 緑色 ヒストグラム 描画 する	plt.hist(データ列, color='teal')
本日 日曜日	datetime.datetime.today().weekday() == 6
ファイル 読み込み ストリーム オープン し する	f = open(filepath, mode='r')
折れ線 グラフ 黒い 丸 マーカー 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線 グラフ マーカー ポイント する	plt.plot(データ列, データ列2, marker='.')
行列 間 要素 ごと 最大公約数 求める	np.gcd(aArray, aArray2)
散布 図 赤い マーカー 使う	plt.plot(xdata, ydata, marker='^', c='r')
オプション ディムグレー 色 使う	color = 'dimgray'
折れ線 グラフ 描画 し 色 フクシア 変更 する	plt.plot(データ列, データ列2, color='fuchsia')
データ フレーム 列 大きく 小さい 行 取り出す	df[(x < df[column]) & (df[column] < x2)]
散布 図 描画 する	plt.scatter(xdata, ydata)
ファイル パス 書き込み 用 オープン する	open(filepath, mode='w', encoding='shift_jis')
データ フレーム リスト カラム 値 欠損 値 確認 する	df[aList].isna()
線 グラフ 描画 し その 色 ダーク オリーブ グリーン 設定 する	plt.plot(データ列, データ列2, color='darkolivegreen')
オプション ピーチ パフ 色 使う	color = 'peachpuff'
赤い バツ マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='x', c='r')
データ 列 欠損 値 中央 値 指定 する	ds.fillna(ds.median())
オプション ダークターコイズ 色 使う	color = 'darkturquoise'
ファイル 書き込み 用 開く	open(filepath, mode='w', encoding='shift_jis')
インプレース 両端 キュー データ 逆順 する	deq.reverse()
折れ線 グラフ 黄色い ポイント マーカー 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
淡い グラフ 配列 イテラブル 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リスト 数列 散布 図 赤い 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
文字 列 開始 位置 終了 位置 間 部分 文字 列 含ま れる どう 調べる	s.find(sub, start, end) != -1
リスト 数列 黒い パステル 調 グラフ 描く	plt.plot(xdata, ydata, linestyle='pastel', color='k')
データ フレーム 中央 値 補う	df.fillna(df.median())
ヒストグラム 描画 し その 色 スチール ブルー 設定 する	plt.hist(データ列, color='steelblue')
文字 列 リスト ひとつ 文字 列 する	''.join(aStringList)
データ フレーム 指定 さ れ た 列 抽出 する	df[[column, column2, column3, column4]]
データ 列 分 位 数 求める	ds.quantile(percent/100)
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
データ フレーム 列 列 ソート し 更新 する	df.sort_values(by=['A', 'B'], inplace=True)
オプション グラフ 線 種 一 点 鎖線 設定 する	linestyle = 'dashbot'
グラフ 全般 的 色 色 差別 なく する	sns.set(pallete='colorblind')
データ フレーム カラム 文字 列 する	df[col].replace(s, np.nan)
数列 暗い 色 度数 分布 図 描画 する	plt.hist(xdata, color='dark')
線 グラフ 描画 し 色 紺碧 する	plt.plot(データ列, データ列2, color='azure')
日付 時刻 データ 文字 列 フォーマット し 文字 列 する	"aDatetime.strftime(""%d/%m/%y"")"
辞書 項目 名 その エントリ 列挙 する	aDict.items()
コレクション 使う	import collections
折れ線 グラフ 色 ダークスレートブルー 指定 する	plt.plot(データ列, データ列2, color='darkslateblue')
リスト 数列 散布 図 暗い 色 描画 する	plt.plot(xdata, ydata, c='dark')
数 乗 浮動 小数点 数 剰余	pow(x, n, y)
配列 要素 ごと 加算 する	aArray + aArray2
ヒストグラム 描画 し 色 パパイヤウィップ 指定 する	plt.hist(データ列, color='papayawhip')
既存 ファイル 用い 追加 できる よう オープン する	open(filepath, mode='a', encoding='utf-8')
プロット カラー パレット 全般 的 色 差別 なく する	sns.set(pallete='colorblind')
データ 列 リスト カラー コード パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
データ フレーム 欠損 値 直後 値 設定 する	df.fillna(method='bfill')
ヒストグラム 描画 し その 色 ダーク シアン 変更 する	plt.hist(データ列, color='darkcyan')
ファイル バイナリ 書き込み モード 開い する	f = open(filepath, mode='wb')
オプション 左 三 角 マーカー 描画 する	marker = '<'
配列 リスト 散布 図 描画 し ポイント マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='.', c=rgb)
表 つ 列 ソート し 先頭 来る よう する	df.sort_values(by=['A', 'B'], na_position='first')
文字 列 部分 文字 列 全て 除去 する	s.replace(sub, '')
データ フレーム 表示 する とき 表示 できる 列 数 最大 値 設定 する	pd.set_option('display.max_columns', n)
スレート ブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='slateblue')
文字 列 終了 位置 前 部分 文字 列 含ま れる どう	s.find(sub, 0, end) != -1
リスト リスト 散布 図 黒い 左 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='<', c='k')
データ フレーム 値 欠損 値 調べる	df.isna()
折れ線 グラフ 描画 し その 色 ダークシアグリーン 設定 する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線 グラフ 青い 下 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
実数 実数 かける	x * y
オプション 色 ダーク オレンジ する	color = 'darkorange'
データ 列 フォーマット 日付 データ 変換 する	pd.to_datetime(ds, format='%Y-%m-%d')
オプション 菱形 マーカー 用いる	marker = 'D'
実数 小数点 以下 第 一 位 丸める	round(x, 1)
表 列 昇順 整列 する	df.sort_values(by=column, ascending=True)
	n ^ n2
破壊 的 複数 列 用い で データ フレーム ソート する	df.sort_values(by=column, inplace=True)
タプル 一覧 参照 する	aDict.values()
ベクトル 行 ごと 最大 求める	np.max(aArray, axis=1)
二つ データ フレーム 縦 方向 連結 する	pd.concat([df, df2], axis=0)
ダーク オレンジ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkorange')
浮動 小数点 数 実数 除する	x / y
線 グラフ 色 ローン グリーン 指定 する	plt.plot(データ列, データ列2, color='lawngreen')
オプション 色 カーキ セット する	color = 'khaki'
イテラブル リスト 散布 図 バツ マーカー プロット する	plt.plot(xdata, ydata, marker='x')
線 グラフ 色 パウダー ブルー 設定 する	plt.plot(データ列, データ列2, color='powderblue')
オプション スレート ブルー 使う	color = 'slateblue'
ヒストグラム 色 ベージュ 設定 する	plt.hist(データ列, color='beige')
配列 数列 折れ線 グラフ 描く	plt.plot(xdata, ydata)
オプション エン コーディング 設定 する	encoding = 'euc_jp'
バイト 列 変換 する	n.to_bytes(length=bytesize, byteorder='big')
折れ線 グラフ ダイアモンド 印 赤く する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
ダークシアグリーン ヒストグラム 色 設定 する	plt.hist(データ列, color='darkseagreen')
平仮名 片仮名 変換 する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
データ フレーム 列 多く 小さい 行 抽出 する	df[(x < df[column]) & (df[column] < x2)]
文字 列 マゼンタ プリント できる 文字 列 する	f'\033[35m{value}\033[0m'
浮動 小数点 数 サイン	math.sin(x)
ふたつ 集合 セット 互いに 素 テスト する	aSet.isdisjoint(aSet2)
ヒストグラム 描画 し その 色 珊瑚 設定 する	plt.hist(データ列, color='coral')
折れ線 グラフ 色 バリーウッド 設定 する	plt.plot(データ列, データ列2, color='burlywood')
表 列 二つ 選択 する	df[[column, column2]]
データ フレーム データ フレーム カラム 連結 する	pd.concat([df, ds], axis=1)
ベクトル 列 ごと 平均 値	np.mean(aArray, axis=0)
データ フレーム 列 ソート し 下位 件 取り出す	df.sort_values(columns).tail(n)
タプル 最後 要素	aTuple[-1]
データ フレーム 欠損 値 平均 値 補う	df.fillna(df.mean())
列 文字 列 変換 し 一つ する	''.join(map(str, iterable))
プラス	n + n2
二つ オブジェクト 等しい 確認 する	obj == obj2
オブジェクト プロパティ 持つ 調べる	hasattr(obj, プロパティ名)
ヒストグラム 描画 し その 色 ライト グレー 設定 する	plt.hist(データ列, color='lightgray')
リスト 青色 する	f'\033[34m{value}\033[0m'
データ フレーム 中 列 と列 重複 あれ マスク する	df.duplicated(subset=[column, column2])
現在 月曜日 調べる	datetime.datetime.today().weekday() == 0
列 データ フレーム 並べ 更新 する	df.sort_values(by=column, inplace=True)
ヒストグラム 色 ライトスレイグレー セット する	plt.hist(データ列, color='lightslategrey')
データ フレーム 全体 インデックス 降順 並べる	df.sort_index(ascending=False)
小数点 数 非 数 調べる	math.isnan(x)
折れ線 グラフ 大 バツ マーカー 赤く する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
重 見やすく 散布 図 暗い 色 マーカー 描画 する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
データ フレーム リスト カラム 欠損 値 最 頻 値 補う	df[aList].fillna(df[aList].mode().iloc[0])
イテラブル リスト パステル 調 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
カラー コード バツ マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='x', c=rgb)
組 リスト 変換 する	list(aTuple)
まとめ 正規 表現 データ フレーム リスト 列 値 置き換える	df[aList].replace(pattern, repl, regex=True)
ヒストグラム 透明 度 変更 する	plt.hist(データ列, alpha=x)
折れ線 グラフ 描画 し その 色 ミディアムスレートブルー 設定 する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線 グラフ 描画 し その 色 淡い 茶色 指定 する	plt.plot(データ列, データ列2, color='tan')
折れ線 グラフ 描画 し その 色 フクシア 設定 する	plt.plot(データ列, データ列2, color='fuchsia')
ヒストグラム 色 ラベンダー ブラッシュ 設定 する	plt.hist(データ列, color='lavenderblush')
整数 リスト どれ	n in aList
白色 文字 列 プリント する	print(f'\033[37m{value}\033[0m')
青 紫 ヒストグラム 色 設定 する	plt.hist(データ列, color='violet')
カラム 歪 度	ds.kurt()
ベクトル 同じ 大き さ 空 行列 作る	np.empty_like(aArray)
線 幅 バツ マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線 グラフ 描画 し その 色 パウダー ブルー 設定 する	plt.plot(データ列, データ列2, color='powderblue')
配列 ヒストグラム プロット する	plt.hist(aArray)
文字 列 中 パターン マッチ する 位置 探す	re.search(pattern, s)
パステル 調 色 柱状 図 配列 プロット する	plt.hist(xdata, color='pastel')
本日 タプル 変換 する	datetime.datetime.today().timetuple()
データ 列 秒 日付 データ する	pd.to_datetime(ds, unit='s', utc=True)
全 要素 初期 化 さ れ た ベクトル	np.zeros(要素数)
フォーマット データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], format=fmt)
データ フレーム 指定 さ れ た 二つ 列 抽出 する	df[[column, column2]]
リスト 文字 列 リスト 変換 し 空白 つなげる	' '.join(map(str, iterable))
配列 イテラブル 黒い 明るい グラフ 描く	plt.plot(xdata, ydata, linestyle='bright', color='k')
オブジェクト プロパティ 存在 する 調べる	hasattr(obj, プロパティ名)
ふたつ 集合	aSet.union(aSet2)
棒 描く	plt.bar(ラベル列, データ列)
データ フレーム 二つ 列 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(['A', 'B'])]
データ フレーム 列 ユニーク な 要素	df[col].unique()
文字 列 右寄せ する	s.rjust(文字列幅)
リスト リスト 散布 図 描画 し マーカー 色 明るい セット する	plt.plot(xdata, ydata, c='bright')
データ フレーム 重複 残さ ず 削除 する	df.drop_duplicates(keep=False)
ファイル パス バイナリ 書き込み モード 開く	open(filepath, mode='wb')
環境 エン コーディング	sys.getdefaultencoding()
最初 コマンド 引数	sys.argv[1]
線 グラフ 色 ゴースト ホワイト 設定 する	plt.plot(データ列, データ列2, color='ghostwhite')
淡い 色 リスト ヒストグラム 描く	plt.hist(xdata, color='muted')
折れ線 グラフ 描画 し 色 ダークマゼンタ 指定 する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線 グラフ 線 幅 大 バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
線 グラフ 色 スラグレー 設定 する	plt.plot(データ列, データ列2, color='slategrey')
データ フレーム リスト 列 第 三 四 分 位 数	df[aList].quantile(0.75)
論理 値 変換 する	bool(x)
ひとつ 大文字 文字 列 内 含ま れる	any(c.isupper() for c in s)
リスト リスト 青い 明るい グラフ プロット する	plt.plot(xdata, ydata, linestyle='bright', color='b')
もしくは もしくは 等しい どう 確認 する	x == 1 or x == 2 or x == 3
ヒストグラム 色 コーラル 設定 する	plt.hist(データ列, color='coral')
既存 ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding='euc_jp')
折れ線 グラフ 描画 し マーカー 三角 印 する	plt.plot(データ列, データ列2, marker='^')
現在 木曜日	datetime.datetime.today().weekday() == 3
赤い 星 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c='r')
実行 時 標準 出力 出力 先 ターミナル 調べる	os.isatty(sys.stdin.fileno())
有理数 使う	import fractions
浮動 小数点 数 整数 変換 する	int(x)
日付 データ 週間 足す	aDate + datetime.timedelta(weeks=n)
配列 列 ごと 合計 値	np.sum(aArray, axis=0)
リスト リスト 散布 図 カラー コード 大 バツ マーカー 描く	plt.plot(xdata, ydata, marker='X', c=rgb)
ファイル 開い バイナリ ストリーム 見る	open(filepath, mode='rb')
つ データ フレーム 横 方向 マージ する	pd.merge(df, df2)
線 グラフ 色 ゴールド 設定 する	plt.plot(データ列, データ列2, color='gold')
ヒストグラム 描画 し その 色 ライト イエロー 設定 する	plt.hist(データ列, color='lightyellow')
ヒストグラム 描画 し その 色 青 紫 設定 する	plt.hist(データ列, color='violet')
割り切れ ない 確認 する	n % n2 != 0
配列 行 ごと 分散	np.var(aArray, axis=1)
データ 列 正規 分布 どの 程度 歪ん いる 見る	ds.kurt()
マッピング 別 辞書 項目 更新 する	aDict.update(aDict2)
タプル 番目 以降 部分 取り出す	aTuple[n:]
正規 分布 疑似 乱数 生成 する	random.normalvariate(mu=0.5, sigma=0.2)
配列 重複 除い た 配列 作る	np.unique(aArray)
折れ線 グラフ 描画 し その 色 オリベドラブ 設定 する	plt.plot(データ列, データ列2, color='olivedrab')
オプション 先頭 カラム インデックス 設定 する	index_col = 0
文字 列 全体 限定 正規 表現 マッチ さ せる	re.fullmatch(pattern, s, flags=re.ASCI)
書き込み モード ファイル パス オープン し する	f = open(filepath, mode='w')
読み込み できる よう ファイル オープン する	open(filepath, mode='r')
カウンタ ユニーク な 項目 列挙 する	list(aCounter)
オプション 未 入力 値 先頭 来る よう する	na_position = 'first'
中央 値 データ フレーム 列 未 入力 値 埋める	df[col].fillna(df[col].median())
ヒストグラム 色 ライト グレー 設定 する	plt.hist(データ列, color='lightgray')
文字 列 中 非 アルファベット 含ま れる	any(not c.isalpha() for c in s)
文字 列 走査 し 正規 表現 複数 行 対応 マッチ する 見る	re.search(pattern, s, flags=re.MULTILINE)
オプション シャルトリューズ グラフ 色 設定 する	color = 'chartreuse'
乗 求める	n ** n2
データ フレーム グループ 化 し それぞれ 列 最小 値 算出 する	df.groupby(column)[column2].min()
ヒストグラム 描画 し その 色 スラグレー 設定 する	plt.hist(データ列, color='slategray')
データ フレーム 列 平均 値	df[col].mean()
リスト リスト 破線 描い その 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
ゴールデン ロッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線 グラフ 描画 し その 色 コーラル 設定 する	plt.plot(データ列, データ列2, color='coral')
オプション 色 ブラック する	color = 'black'
配列 内積	np.dot(aArray, aArray2)
フォーマット 使っ データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], format='%Y-%m-%d')
自然 数 個 もの 個 取り出し た とき 並べ方 総数	math.perm(n, k)
データ 列 折れ線 グラフ 描画 し マーカー ポイント する	plt.plot(データ列, データ列2, marker='.')
表 データ それぞれ グループ ごと 最小 値 計算 する	df.groupby(column).min()
カラー コード 大 バツ マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='X', c=rgb)
要素 ひとつ のり スト	[element]
タイムスタンプデータ タプル する	aDatetime.timetuple()
マッピング 項目 列挙 する	aDict.values()
配列 数列 折れ線 プロット し ラベル付け する	plt.plot(xdata, ydata, label=untitled)
ヒストグラム 描画 し その 色 ナバホホワイト 設定 する	plt.hist(データ列, color='navajowhite')
オプション マゼンタ 色 設定 する	color = 'magenta'
ファイル オープン する	open(filepath, encoding='utf-8')
表 データ 列 名 リスト 小さい 順 破壊 的 ソート する	df.sort_values(by=column, ascending=True, inplace=True)
黒い 大 バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='X', c='k')
折れ線 グラフ 右 三 角 印 線 幅 指定 する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線 グラフ バツ マーカー 青く する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
三 変数 最小 値	min(x, y, z)
文字 列 文字 列 リスト いづれ 確認 する	s in aStringList
タイムスタンプデータ タイムスタンプデータ 同時 どう 調べる	aDatetime == aDatetime2
カウンタ 少ない 順番 列挙 する	aCounter.most_common()[::-1]
リスト 内 要素 全て 真	all(aList)
デック 空 で ない	len(deq) != 0
最大 値 最小 値 範囲 一様 な 疑似 乱数 生成 する	random.uniform(最小値, 最大値)
オプション グラフ 色 サーモン 指定 する	color = 'salmon'
ファイル 文字 列 示す エン コーディング 書き込み 用 オープン する	open(filepath, mode='w', encoding=s)
項目 名 マッピング 存在 する	key in aDict
全て 印字 できる 文字	string.printable
色 差別 ない 色 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
文字 列 一つ タプル	(element,)
折れ線 グラフ 描画 し 色 バイオレット 設定 する	plt.plot(データ列, データ列2, color='violet')
折れ線 グラフ マーカー バツ する	plt.plot(データ列, データ列2, marker='x')
データ 列 位 四捨五入 する	ds.round(-1)
データ フレーム 二つ 列 昇順 破壊 的 ソート する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
オプション パールゴールデンロッド グラフ 色 設定 する	color = 'palegoldenrod'
オプション シスル 使う	color = 'thistle'
配列 分割 数 使っ 分割 し ラベル つける	pd.cut(aArray, n, labels=names)
カラー コード 上 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c=rgb)
数 乗 する	x ** n
割っ た 結果 切り上げる	(n + n2 - 1) // n2
一 桁 数	-9 <= x <= 9
箱 髭 図 並べる	plt.boxplot([データ列, データ列2])
パステル 調 折れ線 グラフ プロット し 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
折れ線 グラフ 色 ミディアムターコイズ 設定 する	plt.plot(データ列, データ列2, color='mediumturquoise')
データ フレーム 中 いくつ ある 数える	df.isin([value]).sum()
キュー 末尾 値 削除 する	deq.pop()
濃い 色 マーカー 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
リスト リスト 明るい グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
積み上げ 棒グラフ プロット する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
カウンタ 少ない 順 リスト し 得る	aCounter.most_common()[::-1]
データ 列 タイム ゾーン 東京 設定 する	ds.tz_convert('Asia/Tokyo')
ビット 積	n & n2
星 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='*')
タプル 各 要素 関数 適用 し た 結果 ソート する	sorted(aTuple, key=func)
文字 列 全て 小文字 調べる	s.islower()
ヒストグラム 色 ペルー 設定 する	plt.hist(データ列, color='peru')
オプション 標準 エラー 出力 先 する	file = sys.stderr
文字 列 文字 列 データ ラベル グラフ 付ける	plt.legend([s, s2])
ヒストグラム 描画 し その 色 グリーン 設定 する	plt.hist(データ列, color='green')
数 実数 割っ た 余り	x % y
上限 両端 キュー 用意 する	collections.deque(maxlen=n)
グラフ 点線 つける	plt.axhline(y=0, linestyle='dotted')
行列 行 ごと 最小 値 求める	np.min(aArray, axis=1)
グラフ グリッド 線 入れる	plt.grid(True)
実数 二 進 対数	math.log2(x)
マッピング 項目 名 対応 し た 値	aDict.get(key)
折れ線 グラフ 描画 し その 色 オリーブ 指定 する	plt.plot(データ列, データ列2, color='olive')
濃い グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
散布 図 黒色 菱形 マーカー 使う	plt.plot(xdata, ydata, marker='D', c='k')
プラットホーム 名	sys.platform
列 正規 表現 まとめ 置き換える	ds.replace(pattern, repl, regex=True)
データ フレーム 表示 する とき 最大 列 数 増やす	pd.set_option('display.max_columns', n)
文字 列 終了 位置 前 部分 文字 列 含ま れ ない 判定 する	s.find(sub, 0, end) == -1
淡い 色 赤く する	plt.plot(xdata, ydata, linestyle='muted', color='r')
色 差別 ない 色 リスト リスト 散布 図 描く	plt.plot(xdata, ydata, c='colorblind')
データ フレーム カラム 正規 表現 まとめ 変更 する	df[col].replace(pattern, repl, regex=True)
プロット 使う フォント 指定 する	sns.set(font=fontName)
リスト イテラブル 散布 図 赤い 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c='r')
エポック 秒 データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], unit='s', utc=True)
部分 文字 列 文字 列 接頭 辞 除去 する	s.removeprefix(sub)
ヒストグラム 描画 し その 色 ホワイトスモーク 指定 する	plt.hist(データ列, color='whitesmoke')
オプション 貝殻 色 用いる	color = 'seashell'
文字 列 開始 位置 終了 位置 間 部分 文字 列 いくつ 含ま れる 調べる	s.count(sub, start, end)
折れ線 グラフ 三角 マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
オプション 標準 出力 出力 する	file = sys.stdout
データ フレーム 列 ユニーク な 値	df[col].unique()
リスト データ 列 カラー コード パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
辞書 カウンタ 準備 する	collections.Counter(aDict)
マッピング コピー 作成 する	dict(aDict)
データ フレーム 列 破壊 的 整列 する	df.sort_values(by=column, inplace=True)
データ フレーム 欠損 値 平均 値 指定 する	df.fillna(df.mean())
データ 列 分割 する	pd.cut(ds, aList)
リスト 引数 展開 し 表示 する	print(*aList, sep=',')
オプション 色 ネイビー セット する	color = 'navy'
オプション グラフ 色 ダークゴールデンロッド セット する	color = 'darkgoldenrod'
折れ線 グラフ 色 アイボリー 指定 する	plt.plot(データ列, データ列2, color='ivory')
文字 列 右端 部分 文字 列 取り除く	s.rstrip(sub)
オプション 耐火 レンガ 色 使う	color = 'firebrick'
データ フレーム 列 分 位 数 求める	df[col].quantile(percent/100)
データ フレーム それぞれ グループ ごと 最大 値	df.groupby(column).max()
オプション パパイヤウィップ 色 用いる	color = 'papayawhip'
年 月 日 時 分 タイム スタンプ 変換 する	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
オブジェクト 浮動 小数点 数 クラス 調べる	isinstance(obj, float)
オプション グラフ 色 ライト ブルー 変更 する	color = 'lightblue'
マップ キー 一覧	list(aDict)
オプション サドル ブラウン グラフ 色 設定 する	color = 'saddlebrown'
データ フレーム リスト カラム 最 頻 値	df[aList].mode()
文字 列 リスト 連結 し ひとつ 文字 列 する	''.join(aStringList)
オプション スラグレー グラフ 色 設定 する	color = 'slategrey'
データ フレーム 列 列 相関 行列 ピアソン 積 率 相関 係数 用い	df[[column, column2]].corr(method='pearson')
文字 列 タブ 区切り ファイル 番目 カラム インデックス 読む	pd.read_csv(filename, index_col=n)
数列 リスト カラー コード 濃い グラフ 描く	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
無限 数列	itertools.count()
配列 リスト 散布 図 赤い ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.', c='r')
ヒストグラム 線 スタイル 実線 設定 する	plt.hist(データ列, linestyle='solid')
破線 グラフ 色 濃い 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
データ フレーム カラム 日	df[col].dt.day
十 六 進 リテラル 変換 する	hex(n)
集合 空 する	aSet.clear()
降順 データ フレーム 列 ソート する	df.sort_values(by=column, ascending=False)
データ フレーム 指定 さ れ た 三 列 抽出 する	df[[column, column2, column3]]
データ フレーム 列 ユニーク な 要素 見る	df[col].unique()
カラー コード 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c=rgb)
データ フレーム 中 未 入力 値 ある 行 削除 する	df.dropna()
イテラブル 文字 列 リスト 変換 し 空白 一つ する	' '.join(map(str, iterable))
タイムスタンプデータ 日付 時刻 データ 早い	aDatetime < aDatetime2
数列 リスト 青い 色 差別 ない 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
オブジェクト バイト 列 クラス インスタンス 確認 する	isinstance(obj, bytes)
リスト 空 で ない 調べる	len(aList) != 0
オプション ファイル 出力 先 する	file = sys.open(filename, 'w')
文字 列 全体 パターン 限定 マッチ する 見る	re.fullmatch(pattern, s, flags=re.ASCI)
線 グラフ 描画 し その 色 スレート ブルー 設定 する	plt.plot(データ列, データ列2, color='slateblue')
赤い 丸 マーカー 数列 イテラブル 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c='r')
ミント クリーム 色 ヒストグラム 描画 する	plt.hist(データ列, color='mintcream')
折れ線 グラフ ポイント マーカー 用いる	plt.plot(データ列, データ列2, marker='.')
折れ線 グラフ 丸 マーカー 黄色 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
オプション コーラル 使う	color = 'coral'
限定 事前 正規 表現 コンパイル する	re.compile(pattern, flag=re.ASCI)
整数 整数 する	int(x)
イテラブル 重複 コンビネーション	itertools.combinations_with_replacement(iterable, n)
データ フレーム 丸め 整数 型 する	df.round().astype(int)
文字 列 マゼンタ 表示 する	print(f'\033[35m{value}\033[0m')
プロット 論文 用 設定 する	sns.set(context='paper')
オプション 色 ホット ピンク 指定 する	color = 'hotpink'
オブジェクト プロパティ 値 値 変更 する	setattr(obj, プロパティ名, 値)
ヒストグラム 描画 し その 色 レモン シフォン 指定 する	plt.hist(データ列, color='lemonchiffon')
オブジェクト リスト タプル	isinstance(obj, (list)
文字 列 漢字 どう 確認 する	('\u4E00' <= ch <= '\u9FD0')
重 見やすく リスト リスト 散布 図 明るい 色 描画 する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
ロージーブラウン ヒストグラム 色 設定 する	plt.hist(データ列, color='rosybrown')
青色 文字 列 プリント する	print(f'\033[34m{value}\033[0m')
マッピング 内部 コピー する	{k: copy.copy(v) for k, v in aDict.items()}
散布 図 カラー コード ポイント マーカー 使う	plt.plot(xdata, ydata, marker='.', c=rgb)
数 最小 値	min(x, y)
棒 描画 し 幅 設定 する	plt.bar(ラベル列, データ列, width=x)
オプション サーモン 色 使う	color = 'salmon'
折れ線 グラフ 色 ハニーデュー 設定 する	plt.plot(データ列, データ列2, color='honeydew')
ディムグレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='dimgray')
赤い パステル 調 折れ線 グラフ 描く	plt.plot(xdata, ydata, linestyle='pastel', color='r')
十 六 進数 文字 列 バイト 列 変換 する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
データ フレーム 正規 分布 どの 程度 歪ん いる 見る	df.kurt()
ヒストグラム 色 アンティーク ホワイト 設定 する	plt.hist(データ列, color='antiquewhite')
オプション 耐火 レンガ 用いる	color = 'firebrick'
データ フレーム カラム 第 三 四 分 位 数	df[col].quantile(0.75)
折れ線 グラフ 描画 し その 色 パレットトルコイズ 設定 する	plt.plot(データ列, データ列2, color='paleturquoise')
データ 列 数列 散布 図 マーカー 描画 する	plt.plot(xdata, ydata, marker='^')
浮動 小数点 数 整数 調べる	x.is_integer()
ダーク シアン 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkcyan')
小さい 順 データ フレーム 二つ 列 ソート し 更新 する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
リスト リスト 濃い 描画 し その 色 青色 設定 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
線 グラフ 色 シャルトリューズ セット する	plt.plot(データ列, データ列2, color='chartreuse')
グラフ カラー テーマ 淡く する	sns.set(pallete='muted')
線 グラフ 描画 し 色 パパイヤウィップ 設定 する	plt.plot(データ列, データ列2, color='papayawhip')
データ フレーム 表示 する とき 列 数 最大 値 設定 する	pd.set_option('display.max_columns', n)
データ フレーム リスト カラム 第 一 四 分 位 数	df[aList].quantile(0.25)
オプション グラフ 色 ダーク オリーブ グリーン 変更 する	color = 'darkolivegreen'
赤い マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='v', c='r')
ヒストグラム 描画 し その 色 ミディアムバイオレットレッド 変更 する	plt.hist(データ列, color='mediumvioletred')
赤色 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v', c='r')
リスト 明るい 色 ヒストグラム 描画 する	plt.hist(xdata, color='bright')
データ フレーム それぞれ グループ ごと 最小 値	df.groupby(column).min()
データ フレーム カラム 正規 分布 どの 程度 尖っ いる 確認 する	df[col].skew()
オプション 色 サーモン 指定 する	color = 'salmon'
データ フレーム エクセルデータファイル 読み込む	pd.read_excel(filename)
集合 空 で ない	len(aSet) != 0
再帰 最大 回数	sys.getrecursionlimit()
二つ カウンタ 共通 する 値	aCounter & aCounter2
表 データ 列 リスト 含ま れる 行 抽出 する	df[df[column].isin(aList)]
形式 ファイル 入力 辞書 変換 する	json.load(fin)
分数 イン ポート する	import fractions
データ フレーム 行 目 ドロップ し 入れ替える	df.drop(n, axis=0, inplace=True)
ふたつ 集合 セット 交わり 持た ない	aSet.isdisjoint(aSet2)
データ フレーム 列 選択 する	df[[column, column2, column3]]
オプション マーカー 加える	marker = '^'
データ フレーム 複数 列 破壊 的 ソート する	df.sort_values(by=column, inplace=True)
分の する	n /= n2
数式 変数 階 微分 算出 する	sympy.diff(e, z, n)
カウンタ リスト 回数 し 引く	aCounter.subtract(iterable)
オプション 文字 コード 設定 する	encoding = 'euc_jp'
真 部分 集合 どう 調べる	aSet < aSet2
データ フレーム カラム 小数点 以下 桁 四捨五入 する	df[col].round(n)
最後 部分 文字 列 文字 列 区切る	s.rsplit(sub)
オプション エクセルファイル シート 名前 変更 する	sheet_name = names
表 データ 列 行 設定 する	df.set_index(column)
ヒストグラム 描画 し 色 ゴールド 設定 する	plt.hist(データ列, color='gold')
ヒストグラム 色 ペルー 変更 する	plt.hist(データ列, color='peru')
数列 リスト 破線 描画 し その 色 明るい 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
日付 時刻 データ 分 前 戻す	aDatetime - datetime.timedelta(minutes=n)
オプション 色 小麦色 設定 する	color = 'wheat'
文字 列 中 部分 文字 列 新しい 文字 列 回数 制限 し 置換 する	s.replace(sub, newsub, n)
線 グラフ 色 チョコレート 設定 する	plt.plot(データ列, データ列2, color='chocolate')
真 なら ない イテラブル 要素 得る	itertools.dropwhile(predicateFunc, iterable)
データ フレーム 中 いくつ 日 付 データ 存在 する 求める	df.isin([value]).sum()
事前 大文字 小文字 無視 し パターン コンパイル する	re.compile(pattern, flag=re.IGNORECASE)
散布 図 パステル 調 色 マーカー 使う	plt.plot(xdata, ydata, c='pastel')
ピアソン 相関 係数 データ フレーム 相関 行列	df.corr(method='pearson')
文字 列 赤色 プリント する	print(f'\033[31m{value}\033[0m')
データ フレーム グループ 化 し それぞれ 列 最大 値 求める	df.groupby(column)[column2].max()
数列 データ 列 淡い グラフ プロット し その 色 黒く する	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ フレーム リスト 指定 さ れ た 列 相関 行列 ヒートマップ グラフ 化 する	sns.heatmap(df[aList].corr())
文字 列 日本語 含ま れる 確認 する	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='^')
淡い グラフ 色 青 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
日付 時刻 データ 週間 分 減算 する	aDatetime - datetime.timedelta(weeks=n)
辞書 浅く コピー する	dict(aDict)
データ フレーム 指定 さ れ た 列 名 一覧 列 取り出す	df[columns]
年 月 日 日付 時刻 オブジェクト 化 する	datetime.datetime(year=year, month=month, day=day)
データ フレーム カラム 欠損 値 中央 値 補う	df[col].fillna(df[col].median())
オプション ダーク カーキ 色 使う	color = 'darkkhaki'
赤色 色 差別 ない グラフ 描く	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
配列 データ 列 淡い 色 折れ線 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n, color='muted')
縦 方向 複数 データ フレーム 連結 する	pd.concat([df, df2, df3], axis=0)
データ フレーム 正規 分布 どの 程度 歪ん いる 確認 する	df.kurt()
折れ線 グラフ 右 三 角 印 大き さ 設定 する	plt.plot(データ列, データ列2, marker='>', markersize=n)
データ フレーム カラム 正規 分布 どの 程度 尖っ いる 見る	df[col].skew()
オプション 分割 記号 コロン する	sep = ':'
ヒストグラム 色 淡い ピンク色 設定 する	plt.hist(データ列, color='lightpink')
データ フレーム リスト カラム 欠損 値 設定 する	df[aList].fillna(x)
降順 列 データ フレーム 並べる	df.sort_values(by=column, ascending=False)
データ フレーム リスト カラム 中 いくつ 日 付 データ 含ま れる 数える	df[aList].isin([value]).sum()
ファイル 書き込み ストリーム 開き する	f = open(filepath, mode='w')
上限 長 指定 し 両端 キュー	collections.deque(maxlen=n)
データ フレーム ファイル ファイル 保存 する	df.to_csv(filename)
実数 余弦 逆数	math.acos(x)
ヒストグラム 色 ライトスカイブルー 設定 する	plt.hist(データ列, color='lightskyblue')
オプション 標準 エラー 使う	file = sys.stderr
文字 列 中 小文字 大文字 変換 する	s.upper()
折れ線 グラフ 線 幅 上 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
文字 列 右側 部分 文字 列 除く	s.rstrip(sub)
部分 文字 列 文字 列 末尾 探す	s.rfind(sub)
データ フレーム 空文字 欠損 値 変換 し ドロップ する	df.replace('', np.nan).dropna()
二つ オブジェクト 同一	obj is obj2
データ 列 四捨五入 し 整数 型 する	ds.round().astype(int)
ピーチ パフ 色 ヒストグラム 描画 する	plt.hist(データ列, color='peachpuff')
オプション 色 ロイヤル ブルー 変更 する	color = 'royalblue'
オプション ブラック 色 指定 する	color = 'black'
キュー 値 左 個 分 ロー テンション する	deq.rotate(-n)
ファイル パス オープン する	open(filepath, encoding='shift_jis')
縦 方向 二つ データ フレーム 連結 する	pd.concat([df, df2], axis=0)
データ 列 日付 データ 変換 する	pd.to_datetime(ds)
データ フレーム 中 列 と列 重複 あれ 消す	df.drop_duplicates(subset=[column, column2])
行列 行	aArray[行番号]
折れ線 グラフ 色 クリムゾン 設定 する	plt.plot(データ列, データ列2, color='crimson')
線 グラフ 色 ティール 設定 する	plt.plot(データ列, データ列2, color='teal')
線 グラフ 色 インディアン レッド 変更 する	plt.plot(データ列, データ列2, color='indianred')
マッピング キー 列挙 する	list(aDict)
色 差別 ない カラー パレット グラフ 描画 用いる	sns.set(pallete='colorblind')
ダーク シアン ヒストグラム 色 設定 する	plt.hist(データ列, color='darkcyan')
ペア リスト カウンタ 生成 する	collections.Counter(dict(pairs))
データ フレーム カラム 値 一 度 置換 する	df[col].replace(ValueMap)
ハニーデュー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='honeydew')
文字 列 中 ひとつ 非 大文字 ある	any(not c.isupper() for c in s)
データ 列 中 ある 文字 列 個数 カウント する	ds.isin([value, value2]).sum()
折れ線 グラフ 色 フローラルホワイト 設定 する	plt.plot(データ列, データ列2, color='floralwhite')
散布 図 黒色 右 三 角 マーカー 用いる	plt.plot(xdata, ydata, marker='>', c='k')
数式 数値 変換 する	float(e)
オプション グラフ 色 赤 設定 する	color = 'red'
オプション エン コーディング 付き 設定 する	encoding = 'utf_8_sig'
淡い 色 ヒストグラム 数列 描画 する	plt.hist(xdata, color='muted')
ヒストグラム 描画 し その 色 スノー 指定 する	plt.hist(データ列, color='snow')
折れ線 グラフ 色 サンディーブラウン 指定 する	plt.plot(データ列, データ列2, color='sandybrown')
データ フレーム 中 列 と列 重複 あれ マスク する	df.duplicated(subset=[column, column2])
列 ユニーク な 値 個数 調べる	df[col].nunique()
データ フレーム カラム 曜日 数 使う	df[col].dt.dayofweek
データ フレーム 埋める	df.fillna(x)
データ フレーム カラム 値 正規 表現 まとめ 置き換える	df[col].replace(pattern, repl, regex=True)
付け ファイル データ フレーム 保存 する	df.to_csv(filename, encoding='utf_8_sig')
小さい 調べる	n < n2
リスト データ 列 散布 図 色 差別 ない 色 用い 重 見やすく プロット する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
オプション スノー 使う	color = 'snow'
ピアソン データ フレーム リスト カラム 相関 行列	df[aList].corr(method='pearson')
オプション グラフ 色 オリベドラブ 設定 する	color = 'olivedrab'
黄色い クロス マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
データ 列 中 欠損 値 合計 数える	ds.isna().sum()
オプション 色 ローン グリーン 変更 する	color = 'lawngreen'
リスト イテラブル 黒色 暗い グラフ プロット する	plt.plot(xdata, ydata, linestyle='dark', color='k')
全 要素 初期 化 さ れ た ベクトル 作成 する	np.ones(要素数, dtype=np.int)
データ フレーム カラム 時 見る	df[col].dt.hour
ヒストグラム 色 オーキッド 設定 する	plt.hist(データ列, color='orchid')
辞書 多重 集合 する	collections.Counter(aDict)
足す	n + n2
ヒストグラム 色 アクア 設定 する	plt.hist(データ列, color='aqua')
オプション アンティーク ホワイト 色 使用 する	color = 'antiquewhite'
データ フレーム リスト カラム 位 丸め 整数 型 する	df[aList].round(-2).astype(int)
グラフ カラー パレット 濃く する	sns.set(pallete='deep')
リスト 配列 散布 図 描画 し マーカー 丸 設定 する	plt.plot(xdata, ydata, marker='o')
リスト シーケンス 続ける	itertools.chain(iterable, iterable2)
データ 列 第 一 四 分 位 数	ds.quantile(0.25)
グラフ 大き さ 縦 横 設定 する	plt.figure(figsize=(width, height))
ゼロ 埋め さ れ た 行列	np.zeros(要素数)
ヒストグラム 色 ミント クリーム 設定 する	plt.hist(データ列, color='mintcream')
カウンタ タプル 引く	aCounter.subtract(aDict)
データ 列 何 月 見る	ds.dt.month
文字 列 開始 位置 以降 部分 文字 列 始まる 調べる	s.startswith(sub, start)
複数 行 対応 パターン 文字 列 分ける	re.split(pattern, s, flags=re.MULTILINE)
オプション グラフ 色 黄 緑 指定 する	color = 'chartreuse'
本日 年数 使う	datetime.datetime.today().year
値 シアン プリント できる 文字 列 変換 する	f'\033[36m{value}\033[0m'
オプション サドル ブラウン 色 設定 する	color = 'saddlebrown'
プロット 大き さ 縦 横 指定 する	plt.figure(figsize=(width, height))
オプション グラフ 色 シャルトリューズ 設定 する	color = 'chartreuse'
カウンタ 最も 頻出 項目 件数	aCounter.most_common()[1]
列 名 指定 さ れ た 列 名 リスト 置き換える	df.columns = columns
数値 両端 キュー 中 含ま れ てる	element in deq
データ フレーム 値 正規 表現 まとめ 置き換える	df.replace(pattern, repl, regex=True)
データ フレーム 列 名前 一覧 指定 し た カラム 削除 する	df.drop(columns, axis=1)
折れ線 グラフ 描画 し その 色 ライム グリーン 設定 する	plt.plot(データ列, データ列2, color='limegreen')
データ フレーム リスト 列 欠損 値 前 値 埋める	df[aList].fillna(method='ffill')
線 グラフ 描画 し その 色 ダーク グリーン 設定 する	plt.plot(データ列, データ列2, color='darkgreen')
シエナ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='sienna')
折れ線 グラフ 色 マゼンタ 変更 する	plt.plot(データ列, データ列2, color='magenta')
折れ線 グラフ 描画 し その 色 シスル 設定 する	plt.plot(データ列, データ列2, color='thistle')
全 要素 初期 化 さ れ た 整数 型 行列	np.zeros(行数, 列数, dtype=np.int)
折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
パステル 調 色 折れ線 グラフ 描き その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
付き 使っ 書き込み 用 ファイル オープン する	open(filepath, mode='w', encoding='utf_8_sig')
折れ線 グラフ 色 オリーブ 設定 する	plt.plot(データ列, データ列2, color='olive')
オプション モカシン 色 使う	color = 'moccasin'
データ フレーム リスト カラム 欠損 値 中央 値 増やす	df[aList].fillna(df[aList].median())
辞書 キー 値 もしくは 要素 得る	aDict.get(key, element)
日本語 フォント グラフ 表示 可能 な よう する	sns.set(font='IPAexGothic')
ミッドナイト ブルー ヒストグラム 色 指定 する	plt.hist(データ列, color='midnightblue')
淡い 折れ線 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
本日 何 月 知る	datetime.datetime.today().month
プログラム 実行 正しく 終了 する	sys.exit(0)
オブジェクト プロパティ 削除 する	delattr(obj, プロパティ名)
グレー ヒストグラム 色 設定 する	plt.hist(データ列, color='grey')
折り返し オフ 設定 する	pd.set_option('expand_frame_repr', False)
スラグレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='slategrey')
文字 列 中 ひとつ 非 英数字 含ま れる 調べる	any(not c.isalnum() for c in s)
ファイル パス 追加 できる よう 文字 列 示す エン コーディング 使っ オープン する	open(filepath, mode='a', encoding=s)
双方向 キュー 右側 値 削除 する	deq.pop()
データ フレーム 各 列 毎 集約 し 列 分散 計算 する	df.groupby(column)[column2].var()
折れ線 グラフ 描画 し その 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgrey')
データ 列 位 丸め 整数 型 する	ds.round(-2).astype(int)
日付 データ 分 減らす	aDate - datetime.timedelta(minutes=n)
部分 文字 列 どう テスト する	sub in s
文字 列 左 トリム する	s.lstrip()
二つ データ 列 並べ 箱 ひ げ 図 する	plt.boxplot([データ列, データ列2])
データ フレーム 複数 列 グループ 化 し 要約 統計 量 求める	df.groupby(columns).describe()
ファイル パス 書き込み モード オープン する	open(filepath, mode='w')
日付 時刻 データ 時間 数	aDatetime.hour
最適 な 位置 凡例 入れる	plt.legend(loc='best')
配列 リスト 散布 図 プロット し マーカー 下 三角 設定 する	plt.plot(xdata, ydata, marker='v')
ヒストグラム 描画 し その 色 ゴールデン ロッド 設定 する	plt.hist(データ列, color='goldenrod')
オブジェクト プロパティ 値 指定 する	setattr(obj, プロパティ名, 値)
折れ線 グラフ 描画 し 色 トマト 指定 する	plt.plot(データ列, データ列2, color='tomato')
ヒストグラム 描画 し その 色 パパイヤウィップ 設定 する	plt.hist(データ列, color='papayawhip')
ファイル 追加 用 開き する	f = open(filepath, mode='a')
ヒストグラム 色 ミディアムターコイズ 指定 する	plt.hist(データ列, color='mediumturquoise')
ヒストグラム 色 青 緑 変更 する	plt.hist(データ列, color='turquoise')
オブジェクト プロパティ 値 設定 する	setattr(obj, プロパティ名, 値)
ファイル パス バイナリ 書き込み 用 オープン する	open(filepath, mode='wb')
データ フレーム 列 用い で 破壊 的 ソート する	df.sort_values(by=column, inplace=True)
リスト 配列 折れ線 グラフ 透明 度 描く	plt.plot(xdata, ydata, alpha=alpha)
大きい	n > n2
文字 列 最後 部分 文字 列 二つ 区切っ 後半 文字 列 使う	s.rpartition(sub)[-1]
文字 列 両端 部分 文字 列 消す	s.strip(sub)
実数 余弦	math.cos(x)
最大 値 最小 値 範囲 一様 な 疑似 乱数	random.uniform(最小値, 最大値)
数列 濃い 色 柱状 図 描く	plt.hist(xdata, color='deep')
黒い 濃い 描く	plt.plot(xdata, ydata, linestyle='deep', color='k')
折れ線 グラフ 描画 し 色 耐火 レンガ 設定 する	plt.plot(データ列, データ列2, color='firebrick')
オプション グラフ 色 サドル ブラウン 設定 する	color = 'saddlebrown'
リスト 要素 逆順 する	aList[::-1]
赤い ダイアモンドマーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D', c='r')
変数 太 文字 する	f'\033[1m{value}\033[0m'
オプション グラフ 色 貝殻 設定 する	color = 'seashell'
文字 コード ファイル 書き込み 用 開く	open(filepath, mode='w', encoding=text)
求める	math.comb(n, k)
データ フレーム 表示 する とき 小数点 以下 表示 精度 桁 設定 する	pd.set_option('precision', n)
要素 集合 メンバー 調べる	element in aSet
リスト イテラブル 明るい 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
データ フレーム エポック 秒 日付 型 する	pd.to_datetime(df[col], unit='s', utc=True)
データ フレーム 関数 値 まとめ た 表 使う	df.groupby(関数)
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 分散 求める	df.groupby([column, column2], as_index=False).var()
オプション 用いる	encoding = 'euc_jp'
ヒストグラム 描画 し 色 ブルー バイオレット 設定 する	plt.hist(データ列, color='blueviolet')
折れ線 グラフ 黒い 四角 印 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
要素 セット 除去 する	aSet.remove(element)
オプション ナバホホワイト グラフ 色 設定 する	color = 'navajowhite'
折れ線 グラフ 菱形 マーカー 緑色 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
列 欠損 値 設定 する	ds.fillna(x)
オプション 青 紫 グラフ 色 設定 する	color = 'violet'
オプション ロージーブラウン 色 使う	color = 'rosybrown'
オプション 書き込み モード 使う	mode = 'w'
ライト グレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightgrey')
リスト リスト 散布 図 色 差別 ない 色 描画 する	plt.plot(xdata, ydata, c='colorblind')
折れ線 グラフ 赤い 星 マーカー 描画 する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
散布 図 黒い マーカー 使う	plt.plot(xdata, ydata, marker='v', c='k')
データ 列 平均 値 埋める	ds.fillna(ds.mean())
折れ線 グラフ 描画 し 色 ダーク オリーブ グリーン 設定 する	plt.plot(データ列, データ列2, color='darkolivegreen')
標準 出力	sys.stdout
日付 データ 曜日 整数 見る	aDate.weekday()
スレート ブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='slateblue')
オプション ゴールド 使う	color = 'gold'
データ フレーム データ フレーム 列 つなぐ	pd.concat([df, ds], axis=1)
行列 ユニーク な 要素	np.unique(aArray)
ひとつ アルファベット 文字 列 内 ある 調べる	any(c.isalpha() for c in s)
漢字 文字 列 含ま れる	re.search('[\u4E00-\u9FD0]', s)
オプション グリーン グラフ 色 設定 する	color = 'green'
折れ線 グラフ 赤い 四角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
イテラブル データ 列 散布 図 描画 し マーカー 設定 する	plt.plot(xdata, ydata, marker='v')
辞書 キー 列挙 する	list(aDict)
折れ線 グラフ データ フレーム カラム カラム 描く	plt.plot(df[col], df[col2])
二つ カウンタ いずれ 含ま れる 要素	aCounter | aCounter2
配列 リスト 境界 値 分割 する	pd.cut(aArray, aList)
折れ線 グラフ 色 ラベンダー ブラッシュ セット する	plt.plot(データ列, データ列2, color='lavenderblush')
データ フレーム カラム 分散 算出 する	df[col].var()
文字 列 リスト 一つ し ひとつ 文字 列 する	''.join(map(str, iterable))
オプション スラグレー 色 使う	color = 'slategrey'
オプション シエナ グラフ 色 設定 する	color = 'sienna'
青い 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
配列 リスト 破線 プロット し その 色 暗い 変更 する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
キー 辞書 上 定義 済み	key in aDict
データ フレーム 列 欠損 値 平均 値 補う	df[col].fillna(df[col].mean())
折れ線 グラフ 色 黄色 変更 する	plt.plot(データ列, データ列2, color='yellow')
リスト リスト 青い 暗い 描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
データ フレーム 最初 見る	df.head()
データ 列 折れ線 グラフ 描画 し マーカー 星 印 する	plt.plot(データ列, データ列2, marker='*')
文字 列 リスト 含ま れ ない	element not in aList
重 見やすく 散布 図 色 差別 ない 色 マーカー 描く	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
リスト データ 列 明るい 描画 し その 色 青色 設定 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
折れ線 グラフ 線 幅 指定 する	plt.plot(xdata, ydata, linewidth=n)
オプション 色 グレー 設定 する	color = 'gray'
折れ線 グラフ 色 ディムグレー 設定 する	plt.plot(データ列, データ列2, color='dimgrey')
組 末尾 要素 取り除く	aTuple[:-n]
折れ線 グラフ 色 モカシン 指定 する	plt.plot(データ列, データ列2, color='moccasin')
表 データ 使う	import pandas as pd
リスト リスト 散布 図 描画 し ポイント マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='.', c=rgb)
黒い 左 三 角 マーカー リスト 数列 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c='k')
折れ線 グラフ 色 ラベンダー 設定 する	plt.plot(データ列, データ列2, color='lavender')
タプル 末尾 要素 除く	aTuple[:-n]
ヒストグラム 描画 し その 色 アリスブルー 設定 する	plt.hist(データ列, color='aliceblue')
ヒストグラム 描画 し その 色 ミスティローズ する	plt.hist(データ列, color='mistyrose')
データ フレーム 列 値 多い データ 抽出 する	df[df[column] > x]
データ フレーム リスト 列 欠損 値 第 二 四 分 位 数 補う	df[aList].fillna(df[aList].median())
ファイル オープン する	open(filepath, encoding='utf-8')
リスト 個 分割 する	pd.cut(aList, n)
淡い グラフ 色 カラー コード セット する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
表 列 値 グループ 化 する	df.groupby(column)
オプション グラフ 色 ベージュ 変更 する	color = 'beige'
リスト 全 値 クリア する	aList.clear()
折れ線 グラフ マーカー 青く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
散布 図 カラー コード 四角 マーカー 使う	plt.plot(xdata, ydata, marker='s', c=rgb)
ベクトル 内積 計算 する	np.dot(aArray, aArray2)
折れ線 グラフ 左 三 角 マーカー 黒く する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
日付 データ 秒 分 減算 する	aDate - datetime.timedelta(seconds=n)
文字 列 無限 な イテラブル	itertools.repeat(element)
データ フレーム それぞれ グループ ごと 分散 計算 する	df.groupby(column).var()
オブジェクト プロパティ 値 使う	getattr(obj, プロパティ名)
行列 列 ごと 最大 値 計算 する	np.max(aArray, axis=0)
組 先頭 除く	aTuple[1:]
ピンク色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='pink')
折れ線 グラフ 描画 し 色 黄色く する	plt.plot(データ列, データ列2, color='y')
データ フレーム 分 位 数 算出 する	df.quantile(percent/100)
折れ線 グラフ 色 淡い ピンク色 変更 する	plt.plot(データ列, データ列2, color='lightpink')
表 データ 列 重複 あれ マスク する	df.duplicated(subset=column)
配列 リスト 散布 図 黒い 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c='k')
実数 整数 変換 する	int(x)
オプション グラフ 色 ターコイズ 設定 する	color = 'turquoise'
レモン シフォン 色 ヒストグラム 描画 する	plt.hist(データ列, color='lemonchiffon')
チョコレート 色 ヒストグラム 描画 する	plt.hist(データ列, color='chocolate')
散布 図 赤い ポイント マーカー 描く	plt.plot(xdata, ydata, marker='.', c='r')
データ フレーム 記述 統計 量	df.describe()
データ フレーム 列 で 降順 ソート する	df.sort_values(by=column, ascending=False)
リスト 色 差別 ない 色 柱状 図 描画 する	plt.hist(xdata, color='colorblind')
オプション 色 ライム グリーン 設定 する	color = 'limegreen'
データ フレーム 秒 タイム スタンプ 型 変換 する	pd.to_datetime(df[col], unit='s', utc=True)
オプション シルバー 色 使う	color = 'silver'
オプション サドル ブラウン 色 使う	color = 'saddlebrown'
データ フレーム カラム 月	df[col].dt.month
日付 時刻 データ 何 日 知る	aDatetime.day
ヒストグラム 色 ダーク グレー 設定 する	plt.hist(データ列, color='darkgrey')
リスト リスト 破線 グラフ 描画 し その 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
折れ線 グラフ 描画 し 色 ダーク オレンジ 設定 する	plt.plot(データ列, データ列2, color='darkorange')
折れ線 グラフ 緑色 三角 印 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
オプション 使う	encoding = 'utf-8'
文字 列 中 正規 表現 新しい 文字 列 置換 する	re.sub(pattern, newsub, s)
リスト データ 列 散布 図 黒い ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.', c='k')
オプション ダークゴールデンロッド 色 使う	color = 'darkgoldenrod'
散布 図 赤色 星 マーカー 使う	plt.plot(xdata, ydata, marker='*', c='r')
年 日付 変換 する	datetime.date(year=year, month=1, day=1)
横 棒グラフ 描画 し 幅 セット する	plt.barh(ラベル列, データ列, width=x)
数値 プリント する	print(value)
ビン 数 データ フレーム 中 列 ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
リスト 複製 する	aList.copy()
文字 列 正規 表現 置換 する	re.sub(pattern, newsub, s)
数式 因数 分解 する	sympy.factor(e)
リスト 配列 黒色 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
青色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='blue')
日付 データ 月曜日 調べる	aDate.weekday() == 0
エクセルデータファイル シート データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
ダークマゼンタ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkmagenta')
標準 入力 行 分 改行 取り除い 読み込む	sys.stdin.readline().rstrip()
オプション アクア 色 使用 する	color = 'aqua'
ヒストグラム 色 スノー 設定 する	plt.hist(データ列, color='snow')
データ フレーム 中 列 分割 数 ビン 分割 する	pd.cut(df[col], n)
ファイル ファイル 名 どう 調べる	filename.endswith('.tsv')
オプション ポイント マーカー 使用 する	marker = '.'
自然 数 階 乗	math.factorial(n)
ファイル データ フレーム 読む	pd.read_csv(filename, sep='\t')
折れ線 色 カラー コード 設定 する	plt.plot(xdata, ydata, color=rgb)
リスト リスト 散布 図 描い マーカー 設定 する	plt.plot(xdata, ydata, marker='^')
線 グラフ 描画 し その 色 ミディアムスプリンググリーン 設定 する	plt.plot(データ列, データ列2, color='mediumspringgreen')
文字 列 漢字 どう 調べる	('\u4E00' <= ch <= '\u9FD0')
ダーク グリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkgreen')
リスト リスト 折れ線 グラフ 描画 し ラベル付け する	plt.plot(xdata, ydata, label=untitled)
第 二 四 分 位 数 データ フレーム カラム 欠損 値 埋める	df[col].fillna(df[col].median())
計算 機 イプシロン	sys.float_info.epsilon
オプション スプリング グリーン 色 使う	color = 'springgreen'
リスト 数列 散布 図 描画 し マーカー 色 明るい セット する	plt.plot(xdata, ydata, c='bright')
データ フレーム カラム 値 未 入力 値 調べる	df[col].isna()
暗い 色 折れ線 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
行 列 次元 リスト	[[0] * n for _ in range(n2)]
配列 四 分 位 数 ごと ビン 分割 する	pd.qcut(aArray, 4)
データ フレーム 位 四捨五入 し 整数 する	df.round(-3).astype(int)
標準 入力 行 読み込ん 改行 取り除く	sys.stdin.readline().rstrip()
リスト リスト 青色 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
正規 化 さ れ た 度数 分布 図 描く	plt.hist(データ列, density=True)
奇数 確認 する	n % 2 == 1
緑色 左 三 角 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
ふたつ 関係 スーパー セット 確認 する	aSet.issuperset(aSet2)
オプション ミディアムシアグリーン 色 設定 する	color = 'mediumseagreen'
折れ線 グラフ 描画 し その 色 ティール 設定 する	plt.plot(データ列, データ列2, color='teal')
欠損 値 加え データ フレーム 列 ダミー 変数 変換 する	pd.get_dummies(df[column], dummy_na=True)
オプション ハニーデュー 色 使用 する	color = 'honeydew'
ヒストグラム 色 黄 緑 設定 する	plt.hist(データ列, color='chartreuse')
ファイル ファイル 名 取り出す	os.path.basename(filepath)
オプション 追加 モード 設定 する	mode = 'a'
実数 切り上げ 整数 変換 する	math.ceil(x)
リスト 最後 取り除く	aList[:-1]
線 グラフ 描画 し 色 フクシア 設定 する	plt.plot(データ列, データ列2, color='fuchsia')
文字 列 開始 位置 終了 位置 間 部分 文字 列 いくつ ある 調べる	s.count(sub, start, end)
折れ線 グラフ 星 マーカー 黒く する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
実数 無限 大	math.isinf(x)
リスト イテラブル 散布 図 描画 し 菱形 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='D', c=rgb)
行列 列 ごと 最大 値	np.max(aArray, axis=0)
パステル 調 グラフ 色 カラー コード 変更 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
散布 図 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v')
八 進 文字 列 見る	oct(n)[2:]
折れ線 グラフ 描画 し その 色 ダークスラテグレー 変更 する	plt.plot(データ列, データ列2, color='darkslategray')
グラフ 描画 明るい カラー パレット 使う	sns.set(pallete='bright')
リスト リスト 破線 プロット し その 色 パステル 調 の する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
データ フレーム 型 リスト データ 型 カラム 抽出 する	df.select_dtypes(include=typeList)
データ フレーム 中 いくつ 欠損 値 含ま れる 求める	df.isna().sum()
数列 配列 散布 図 描画 し 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, c='colorblind')
配列 分割 する	pd.cut(aArray, aList)
配列 数列 散布 図 描い 文字 列 凡例 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
データ フレーム リスト カラム 位 丸める	df[aList].round(-3)
線 グラフ 描画 し その 色 ミディアムアクアマリン 設定 する	plt.plot(データ列, データ列2, color='mediumaquamarine')
オプション グリーン イエロー 使用 する	color = 'greenyellow'
線 グラフ 色 グリーン イエロー 指定 する	plt.plot(データ列, データ列2, color='greenyellow')
データ 列 どの 程度 分散 し いる 見る	ds.var()
リスト データ 列 散布 図 描画 し マーカー ダイアモンド 設定 する	plt.plot(xdata, ydata, marker='D')
線 グラフ 色 イエロー グリーン 変更 する	plt.plot(データ列, データ列2, color='yellowgreen')
綺麗 な グラフ 用いる 準備 する	import seaborn as sns
ライトスレイグレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightslategrey')
列 名前 列挙 する	df.columns
ファイル パス 開い 追加 ストリーム 使う	open(filepath, mode='a')
折れ線 グラフ 青い バツ 印 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
ヒストグラム 色 ディムグレー 変更 する	plt.hist(データ列, color='dimgray')
データ フレーム カラム 十 位 四捨五入 し 整数 する	df[col].round(-1).astype(int)
データ フレーム 先頭 行	df.head(n)
タプル ミュータブル する	list(aTuple)
折れ線 グラフ 色 ダーク シアン 設定 する	plt.plot(データ列, データ列2, color='darkcyan')
データ 列 配列 暗い 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
マッピング キー 要素 設定 する	aDict[key] = element
折れ線 グラフ 大き さ 右 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='>', markersize=n)
赤色 大 バツ マーカー 散布 図 使用 する	plt.plot(xdata, ydata, marker='X', c='r')
ファイル パス ストリーム 開い する	file = open(filepath)
出力 ストリーム 文字 列 変換 し 書き込む	f.write(str(x))
ファイル バイナリ 書き込み できる よう オープン する	open(filepath, mode='wb')
リスト リスト 散布 図 クロス マーカー 描く	plt.plot(xdata, ydata, marker='x')
黒い 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ フレーム 列 並べ 直し 上位 取り出す	df.sort_values(columns).head(n)
グラフ 濃く する	sns.set(pallete='deep')
データ フレーム リスト 列 欠損 値 平均 値 指定 する	df[aList].fillna(df[aList].mean())
タプル 値 ソート する	sorted(aTuple)
整数 セット どれ どう 確認 する	n in aSet
値 集合 含ま れ ない	element not in aSet
文字 列 全角 数字 半角 数字 変換 する	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
ダイアモンドマーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D')
リスト リスト 散布 図 描画 し マーカー 右 三 角 設定 する	plt.plot(xdata, ydata, marker='>')
ヒストグラム 描画 し その 色 グレー 指定 する	plt.hist(データ列, color='gray')
折れ線 グラフ 上 三 角 マーカー 用いる	plt.plot(データ列, データ列2, marker='^')
リスト 変化 折れ線 描画 する	plt.plot(range(len(xdata)), xdata)
折れ線 グラフ 描画 し 色 ロージーブラウン 設定 する	plt.plot(データ列, データ列2, color='rosybrown')
二つ 文字 列 等しく ない	s != s2
文字 列 リスト 含ま れ ない 調べる	element not in aList
赤色 明るい 折れ線 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
折れ線 グラフ 描画 し その 色 ライム 設定 する	plt.plot(データ列, データ列2, color='lime')
ヒストグラム 色 サドル ブラウン 設定 する	plt.hist(データ列, color='saddlebrown')
データ フレーム カラム インデックス する	df.set_index(col, inplace=True)
列 文字 列 欠損 値 する	ds.replace(s, np.nan)
ファイル パス セパレータ 記号 使う	os.sep
青い ヒストグラム 描画 する	plt.hist(データ列, color='b')
オプション 色 ロイヤル ブルー 設定 する	color = 'royalblue'
散布 図 赤色 左 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='<', c='r')
本日 タイム スタンプ	datetime.datetime.now()
プラットホーム 名 知る	sys.platform
文字 列 太字 する	f'\033[1m{value}\033[0m'
ヒストグラム 色 青 緑 設定 する	plt.hist(データ列, color='teal')
オプション グラフ 色 ブラック 変更 する	color = 'black'
データ フレーム 列 ソート し 上位 件 取り出す	df.sort_values(columns).head(n)
二つ 変数 同じ 値 する	x = y = n
コレクション 使用 する	import collections
プロット 描画 濃い 色 使う	sns.set(pallete='deep')
まとめ データ フレーム 置き換える	df.replace(ValueMap)
折れ線 グラフ 色 ライトスカイブルー 設定 する	plt.plot(データ列, データ列2, color='lightskyblue')
ネイピア 数 使用 する	math.e
データ 列 リスト 散布 図 暗い 色 用い 重 見 やすく 描く	plt.plot(xdata, ydata, c='dark', alpha=0.5)
折れ線 グラフ 描画 し その 色 ライトスレイグレー 設定 する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線 グラフ マーカー 三角 する	plt.plot(データ列, データ列2, marker='^')
データ フレーム 中 文字 列 ある	df.isin([value, value2])
一 点 鎖線 用い 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, linestyle='dashbot')
デフォルト 適用 する	sns.set()
折れ線 グラフ 色 ダークスレートブルー 設定 する	plt.plot(データ列, データ列2, color='darkslateblue')
明日 日付	datetime.date.today() + datetime.timedelta(days=1)
淡い 色 ヒストグラム データ 列 描画 する	plt.hist(xdata, color='muted')
折れ線 グラフ 大き さ バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markersize=n)
文字 列 全体 ケース 無視 し 正規 表現 マッチ さ せる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
リスト 等量 分割 数 使っ ビン 分割 する	pd.qcut(aList, n)
両端 キュー 要素 左 個 分 ロー テンション する	deq.rotate(-n)
最大 長 ある 両端 キュー	collections.deque(maxlen=n)
オプション ロージーブラウン 色 用いる	color = 'rosybrown'
データ 列 何 曜日 確認 する	ds.dt.weekday_name
書式 タプル フォーマット する	formatText.format_map(aDict)
文字 列 中 限定 正規 表現 全 マッチ 使う	re.findall(pattern, s, flags=re.ASCI)
印字 可能 な 文字 列	ascii(x)
データ フレーム リスト カラム 丸める	df[aList].round()
折れ線 グラフ 色 グレー 設定 する	plt.plot(データ列, データ列2, color='gray')
データ フレーム 指定 さ れ た 三つ 列 選ぶ	df[[column, column2, column3]]
オプション シルバー グラフ 色 設定 する	color = 'silver'
ヒストグラム 色 黒く する	plt.hist(データ列, color='k')
ファイル 番目 カラム インデックス 読み込む	pd.read_csv(filename, index_col=n)
グリーン イエロー 色 ヒストグラム 描画 する	plt.hist(データ列, color='greenyellow')
リスト リスト 境界 値 ビニング する	pd.cut(aList, aList)
実数 逆 双曲線 正接 求める	math.atanh(x)
空 チェーン マップ	collections.ChainMap()
既存 ファイル 追加 できる よう 文字 コード オープン する	open(filepath, mode='a', encoding=text)
集合 イミュータブル 版	frozenset(aSet)
リスト リスト 色 差別 ない グラフ 描画 し 色 青色 セット する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
線 グラフ 色 スプリング グリーン 設定 する	plt.plot(データ列, データ列2, color='springgreen')
ヒストグラム 描画 し その 色 アクアマリン 設定 する	plt.hist(データ列, color='aquamarine')
タプル 値 数 得る	len(aDict)
カンマ 文字 列 分割 し 文字 列 リスト 変換 する	s.split(',')
ミディアムスプリンググリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mediumspringgreen')
文字 列 リスト 連結 し ひとつ 文字 列 する	''.join(aStringList)
行列 転置 行列 計算 する	aArray.T
文字 列 開始 位置 以降 部分 文字 列 開始 する 調べる	s.startswith(sub, start)
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 標準 偏差 求める	df.groupby([column, column2], as_index=False).std()
ヒストグラム 描画 し 色 チョコレート 設定 する	plt.hist(データ列, color='chocolate')
明るい グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
データ フレーム 表示 する とき 折り返し し ない よう する	pd.set_option('expand_frame_repr', False)
青色 ヒストグラム 描画 する	plt.hist(データ列, color='blue')
データ フレーム 複数 列 グループ 分け する	df.groupby(columns)
データ フレーム 行 目 破壊 的 ドロップ する	df.drop(n, axis=0, inplace=True)
配列 四 分 位 数 ごと 分割 する	pd.qcut(aArray, 4)
オプション ダーク オリーブ グリーン グラフ 色 変更 する	color = 'darkolivegreen'
両端 キュー 番目 要素 挿入 する	deq.insert(n, element)
文字 列 片仮名 平仮名 変換 する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
データ 列 欠損 値 最 頻 値 セット する	ds.fillna(ds.mode().iloc[0])
実行 環境 調べる	sys.platform.startswith('win32')
リスト リスト 散布 図 描い 左 三 角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='<', c=rgb)
カウンタ キー カウント リスト し 得る	aCounter.items()
散布 図 カラー コード 四角 マーカー 描く	plt.plot(xdata, ydata, marker='s', c=rgb)
折れ線 グラフ 黄色い 印 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
暗い 色 リスト ヒストグラム 描画 する	plt.hist(xdata, color='dark')
リスト データ 列 黒い 濃い 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
変数 近づく 場合 数値 極限 値 求める	sympy.limit(e, z, 0)
進 文字 列 バイナリ 変換 する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
配列 平均 値	np.mean(aArray)
ヒストグラム プロット する	plt.hist(データ列)
オブジェクト バイト 列 型 どう	isinstance(obj, bytes)
書き込み モード ファイル 開き する	f = open(filepath, mode='w')
部分 文字 列 部分 文字 列 始まる	s.startswith(sub)
データ フレーム カラム 文字 列 未 入力 値 変換 する	df[col].replace(s, np.nan)
リスト イテラブル 濃い グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
ファイル 読み込み 用 開く	open(filepath, mode='r')
プロット ポスター 用 変更 する	sns.set(context='poster')
プロット 描画 綺麗 する	import seaborn as sns
データ 列 前 行 値 設定 する	ds.fillna(method='ffill')
折れ線 グラフ 四角 マーカー 緑色 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
列 キー し つ データ フレーム 外部 結合 する	pd.merge(df, df2, on=column, how='outer')
フォーマット データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], format=fmt)
データ フレーム 各 グループ ごと 最大 値 算出 する	df.groupby(column).max()
リスト ビン 数 ビン 分割 し ラベル つける	pd.cut(aList, n, labels=names)
リスト 配列 散布 図 描画 し 右 三 角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='>', c=rgb)
データ フレーム 列 文字 列 含ま れ ない 行 抽出 する	df[not df[column].str.contains(s)]
データ フレーム 列 並べ 直す	df.sort_values(by='A')
文字 列 フォーマット し 本日 文字 列 する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
オブジェクト 集合 クラス 判定 する	isinstance(obj, set)
折れ線 グラフ ポイント マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='.', markersize=n)
データ フレーム 列 名 リスト 値 グループ 化 する	df.groupby(columns)
折れ線 グラフ 色 バリーウッド 指定 する	plt.plot(データ列, データ列2, color='burlywood')
淡い 色 イテラブル リスト 散布 図 描画 する	plt.plot(xdata, ydata, c='muted')
ピアソン 積 率 相関 係数 データ フレーム 相関 行列	df.corr(method='pearson')
文字 列 新しい 文字 列 置き換える	s.replace(sub, newsub)
オプション ダークスレートブルー 使う	color = 'darkslateblue'
始まる 無限 イテラブル	itertools.count()
オプション ライト コーラル 色 使う	color = 'lightcoral'
ヒストグラム 描画 し 色 ホット ピンク 設定 する	plt.hist(データ列, color='hotpink')
オプション グラフ 種類 破線 設定 する	linestyle = 'dashed'
データ フレーム カラム 何 日 調べる	df[col].dt.day
辞書 インデント 付き 文字 列 する	json.dumps(aDict, ensure_ascii=False, indent=n)
無限 数列	itertools.repeat(n)
既存 ファイル 文字 コード 追加 できる よう オープン する	open(filepath, mode='a', encoding=text)
文字 列 先頭 正規 表現 マッチ する 見る	re.match(pattern, s)
データ フレーム カラム 何 曜日 調べる	df[col].dt.weekday_name
折れ線 グラフ 色 リネン 設定 する	plt.plot(データ列, データ列2, color='linen')
イテラブル 数列 散布 図 描画 し その 大き さ 設定 する	plt.scatter(xdata, ydata, s=n)
上位 集合 どう	aSet.issuperset(aSet2)
文字 列 中 タブ 文字 空白 する	s.expandtabs(tabsize=n)
オプション グラフ 色 インディアン レッド 変更 する	color = 'indianred'
折れ線 グラフ 描画 し その 色 プラム 設定 する	plt.plot(データ列, データ列2, color='plum')
破壊 的 データ フレーム 列 で ソート する	df.sort_values(by='A', inplace=True)
折れ線 グラフ 左 三 角 マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線 グラフ 描画 し その 色 サーモン 設定 する	plt.plot(データ列, データ列2, color='salmon')
コーンズシルク 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='cornsilk')
リスト 数列 相関 可視 化 する	plt.scatter(xdata, ydata)
データ フレーム カテゴリ データ 列 名 リスト 使う	df.select_dtypes('object').columns
最初 カテゴリー 除外 し データ フレーム 列 ダミー 変数 変換 する	pd.get_dummies(df[column], drop_first=True)
カラー コード 右 三 角 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='>', c=rgb)
青い 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
データ 列 データ 列 重複 取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
数 乗	x ** 3
リスト データ 列 パステル 調 色 折れ線 描き その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
線 グラフ 色 ダーク カーキ 設定 する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線 グラフ 描画 し その 色 グレー 指定 する	plt.plot(データ列, データ列2, color='gray')
折れ線 グラフ 描画 し その 色 耐火 レンガ 変更 する	plt.plot(データ列, データ列2, color='firebrick')
リスト 数列 散布 図 バツ マーカー プロット する	plt.plot(xdata, ydata, marker='x')
オプション ハニーデュー 使用 する	color = 'honeydew'
リスト データ 列 破線 グラフ 描画 し その 色 暗い 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
配列 行 ごと 合計 値	np.sum(aArray, axis=1)
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep=',')
データ フレーム 二つ 列 降順 破壊 的 ソート する	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データ フレーム 複数 列 降順 ソート する	df.sort_values(by=column, ascending=False)
区間 数 ヒストグラム 描画 する	plt.hist(データ列, bins=n)
リスト リスト 散布 図 赤い 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c='r')
ファイル 追加 できる よう オープン する	open(filepath, mode='a')
ヒストグラム 描画 し 色 ダークシアグリーン 設定 する	plt.hist(データ列, color='darkseagreen')
データ フレーム 重複 し た 行 ドロップ し 更新 する	df.drop_duplicates(inplace=True)
ファイル オープン し 追加 ストリーム 使う	open(filepath, mode='a')
ファイル ファイル 番目 列 インデックス し 読み込む	pd.read_csv(filename, index_col=n)
実数 調べる	math.isnan(x)
オプション グラフ 色 ホワイトスモーク 指定 する	color = 'whitesmoke'
オプション グラフ 色 シスル 設定 する	color = 'thistle'
線 グラフ 描画 し その 色 茶色 設定 する	plt.plot(データ列, データ列2, color='brown')
オプション ブラック 用いる	color = 'black'
数式 簡略 化 行う	sympy.sympify(e)
明るい 色 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, c='bright')
始まる 無限 リスト	itertools.count()
列 ぐるぐる 繰り返す	itertools.cycle(iterable)
二つ 関係 上位 集合 もしくは 等しい どう	aSet > aSet2
シエナ ヒストグラム 色 変更 する	plt.hist(データ列, color='sienna')
アルファベット 小文字 列	string.ascii_lowercase
正 数 調べる	n > 0
データ フレーム カラム 位 丸め 整数 する	df[col].round(-3).astype(int)
ヒストグラム 描画 し 色 黒く する	plt.hist(データ列, color='k')
日付 データ 日付 データ 時間 差 秒 数 求める	(aDate - aDate2).total_seconds()
線 幅 ダイアモンド 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
スクリプト ファイル 同じ フォルダ ファイル パス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
現在 作業 ディレクトリ 変更 する	os.chdir(os.dirname(filepath))
カラム 中 含ま れる 日付 データ 合計 数える	ds.isin([value]).sum()
データ 列 リスト 散布 図 淡い 色 用い 描く	plt.plot(xdata, ydata, c='muted')
イテラブル 数列 散布 図 描画 し マーカー 四角 設定 する	plt.plot(xdata, ydata, marker='s')
時間 文字 列 日付 データ 変換 する	pd.to_datetime(s, unit='s', utc=True)
ヒストグラム 描画 し 色 ダークターコイズ 変更 する	plt.hist(データ列, color='darkturquoise')
実数 以上 最小 整数	math.ceil(x)
リスト 逆順 する	aList[::-1]
折れ線 グラフ 色 深紅 設定 する	plt.plot(データ列, データ列2, color='crimson')
データ フレーム リスト カラム 直前 値 埋める	df[aList].fillna(method='ffill')
オブジェクト クラス	isinstance(obj, クラス)
オプション ミディアムスレートブルー 色 用いる	color = 'mediumslateblue'
ヒストグラム 描画 し 色 ディムグレー セット する	plt.hist(データ列, color='dimgrey')
倍数 調べる	n % n2 == 0
オプション コーラル 色 使用 する	color = 'coral'
散布 図 カラー コード ポイント マーカー 用い 描画 する	plt.plot(xdata, ydata, marker='.', c=rgb)
オプション 印 バツ 変更 する	marker = 'x'
実数 実数 割る	x / y
ヒストグラム 描い ビン 数 セット する	plt.hist(データ列, bins=n)
オプション ベージュ 使用 する	color = 'beige'
オプション グラフ 色 リネン 設定 する	color = 'linen'
折れ線 グラフ 大 バツ マーカー 青く する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線 グラフ 丸 マーカー 黒色 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
標準 入力 行 改行 なし で 読む	sys.stdin.readline().rstrip()
ヒストグラム 色 シャルトリューズ する	plt.hist(データ列, color='chartreuse')
折れ線 グラフ 描画 し 色 ゴールド 設定 する	plt.plot(データ列, データ列2, color='gold')
文字 列 タイム スタンプ 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
縦 棒グラフ 描画 する	plt.bar(ラベル列, データ列)
折れ線 グラフ 丸 マーカー 線 幅 指定 する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
要素 セット メンバー で ない 調べる	element not in aSet
赤い ダイアモンドマーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='D', c='r')
ケン ドール 相関 係数 データ フレーム 列 列 相関 行列 算出 する	df[[column, column2]].corr(method='kendall')
カラー コード ポイント マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='.', c=rgb)
データ フレーム リスト カラム 空文字 変換 し ドロップ する	df[aList].replace('', np.nan).dropna()
配列 差 計算 する	aArray - aArray2
色 差別 ない 色 青 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
折れ線 グラフ 描画 し その 色 スチール ブルー 変更 する	plt.plot(データ列, データ列2, color='steelblue')
部分 文字 列 文字 列 中 含ま れる 調べる	sub in s
ヒストグラム 描画 し その 色 アイボリー 指定 する	plt.hist(データ列, color='ivory')
オプション ディムグレー グラフ 色 設定 する	color = 'dimgray'
正規 表現 複数 行 対応 文字 列 全体 マッチ さ せる	re.fullmatch(pattern, s, flags=re.MULTILINE)
オプション グラフ 色 ゴールド 変更 する	color = 'gold'
日付 データ データ フレーム カラム データ フレーム インデックス する	df.index = pd.DatetimeIndex(df[col])
データ 列 個 分割 し ラベル つける	pd.cut(ds, n, labels=names)
リスト 縦 軸 リスト 横 軸 指定 し 折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
エポック 秒 文字 列 日付 型 する	pd.to_datetime(s, unit='s', utc=True)
ピアソン 相関 係数 データ フレーム リスト 列 相関 行列	df[aList].corr(method='pearson')
データ フレーム 列 名前 付け 直す	df.rename(columns={column: name})
イテラブル 配列 色 差別 ない グラフ 描画 し その 色 青色 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リスト 少なくとも ひとつ 真	any(aList)
データ フレーム 歪 度	df.kurt()
文字 列 バイト 列 変換 する	s.encode(encoding='sjis', errors='ignore')
ヒストグラム 描画 し その 色 ダーク グレー 設定 する	plt.hist(データ列, color='darkgrey')
小さい	n < n2
データ 列 何 年 見る	ds.dt.year
二つ 文字 列 同じ	s == s2
カラム 最大 値 置換 する	ds.fillna(ds.max())
実数 双曲線 正接	math.tanh(x)
文字 列 正規 表現 置き換える	re.sub(pattern, newsub, s)
イテラブル リスト 明るい グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
明るい 色 赤色 設定 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
データ フレーム グループ 化 し それぞれ 列 個数 求める	df.groupby(column)[column2].count()
ピアソン 相関 係数 用い データ フレーム 相関 行列	df.corr(method='pearson')
何 試し 動かし みる	print('Hello World')
線 グラフ 描画 し その 色 コーンフラワーブルー 変更 する	plt.plot(データ列, データ列2, color='cornflowerblue')
データ フレーム リスト 列 分散 計算 する	df[aList].var()
データ 列 折れ線 グラフ 描画 し マーカー 四角 印 する	plt.plot(データ列, データ列2, marker='s')
データ フレーム ランダム 抽出 する	df.sample()
ヒストグラム 色 スラグレー 指定 する	plt.hist(データ列, color='slategray')
ダーク サーモン ヒストグラム 色 設定 する	plt.hist(データ列, color='darksalmon')
本日 木曜日 調べる	datetime.datetime.today().weekday() == 3
日付 使う	import datetime
辞書 形式 文字 列 する	json.dumps(aDict, ensure_ascii=False)
引い する	n -= n2
データ フレーム リスト 列 相関 行列 ケンドール 相関 係数 用い	df[aList].corr(method='kendall')
リスト リスト カラー コード パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
ケン ドール 順位 相関 係数 データ フレーム リスト 列 相関 行列	df[aList].corr(method='kendall')
割り切れる どう 調べる	n % 3 == 0
データ フレーム 列 以上 データ 取り出す	df[df[column] >= x]
色 差別 ない 色 マーカー 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
折れ線 グラフ 右 三 角 印 青色 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
凡例 グラフ 表示 する	plt.legend()
黒い 星 マーカー 用い 散布 図 プロット する	plt.plot(xdata, ydata, marker='*', c='k')
オプション グラフ 色 ミディアムオーキッド 設定 する	color = 'mediumorchid'
データ フレーム リスト 列 位 丸める	df[aList].round(-2)
文字 列 中 正規 表現 すべて マッチ 見る	re.findall(pattern, s)
データ 列 ボックス チャート 描く	plt.boxplot(データ列)
リスト 縦 軸 リスト 横 軸 大き さ 散布 図 描画 する	plt.scatter(xdata, ydata, s=n)
データ フレーム グループ 化 し それぞれ 列 合計 求める	df.groupby(column)[column2].sum()
ヒストグラム 描画 し 色 ライム グリーン 指定 する	plt.hist(データ列, color='limegreen')
付き ファイル データ フレーム 保存 する	df.to_csv(filename, encoding='utf_8_sig')
二 次元 リスト 転置 行列	[list(x) for x in list(zip(*aList))]
変数 最も 大きい 値	max(x, y)
文字 列 白色 表示 できる 文字 列 変換 する	f'\033[37m{value}\033[0m'
ライトスレイグレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightslategrey')
オプション ライトスチールブルー 色 使う	color = 'lightsteelblue'
オプション 色 シルバー 指定 する	color = 'silver'
オプション ライト イエロー グラフ 色 設定 する	color = 'lightyellow'
オプション グラフ 色 赤 する	color = 'red'
実数 逆数	math.asinh(x)
折れ線 グラフ 描画 し その 色 アンティーク ホワイト する	plt.plot(データ列, データ列2, color='antiquewhite')
ヒストグラム 色 シルバー 設定 する	plt.hist(データ列, color='silver')
データ フレーム 各 列 毎 グループ 化 し 文字 列 グループ 大き さ 求める	df.groupby(column).size()[s]
数値 白色 する	f'\033[37m{value}\033[0m'
リスト リスト 散布 図 黒い 大 バツ マーカー 描く	plt.plot(xdata, ydata, marker='X', c='k')
データ フレーム リスト カラム 中 文字 列 文字 列 ある 調べる	df[aList].isin([value, value2])
実数 タンジェント 算出 する	math.tan(x)
濃い カラー パレット グラフ 描画 使う	sns.set(pallete='deep')
バイト オーダ 調べる	sys.byteorder
オプション グラフ 色 スノー 設定 する	color = 'snow'
ファイル 存在 し ない	not os.path.exists(filepath)
全 要素 初期 化 し た 行列 作る	np.ones(行数, 列数, dtype=np.int)
シスル 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='thistle')
オプション 星 マーカー 加える	marker = '*'
オプション グラフ 色 ゴールデン ロッド 設定 する	color = 'goldenrod'
日付 データ 日曜日 どう 確認 する	aDate.weekday() == 6
小さい	n < n2
リスト リスト 折れ線 描画 する	plt.plot(xdata, ydata)
イテラブル リスト 暗い グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
全 要素 初期 化 さ れ た 配列 初期 化 する	np.ones(要素数, dtype=np.int)
ヒストグラム 色 クリムゾン 変更 する	plt.hist(データ列, color='crimson')
保存 する ファイル 小数点 以下 桁 数 設定 する	df.to_csv(filename, float_format='%.3f')
データ フレーム 列 パーセンタイル	df[col].quantile(percent/100)
データ 列 何 月 見る	ds.dt.month
文字 列 セパレータ 区切る	s.split(sub)
データ フレーム リスト カラム 上位	df[aList].quantile(0.25)
データ フレーム 型 リスト 指定 さ れ た データ 型 列 抽出 する	df.select_dtypes(include=typeList)
オプション ビスク グラフ 色 変更 する	color = 'bisque'
オプション 改行 区切り 使う	sep = '\n'
イテラブル リスト 連結 する	itertools.chain(iterable, iterable2)
上限 キュー イテラブル 用意 する	collections.deque(iterable, maxlen=n)
日付 データ 時間 分 減算 する	aDate - datetime.timedelta(hours=n)
個 分 左 双方向 キュー 値 ロー テンション する	deq.rotate(-n)
ダークスレートブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkslateblue')
列 タプル デカルト 積	itertools.product(iterable, iterable2)
列 データ フレーム グループ 化 し 列 要約 統計 量 求める	df.groupby(column).describe()[column2]
実行 結果 青色 プリント する	print(f'\033[34m{value}\033[0m')
列 キー し 二つ データ フレーム 外部 結合 する	pd.merge(df, df2, on=column, how='outer')
データ 列 イテラブル 散布 図 ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D')
黒色 暗い 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
昇順 列 破壊 的 データ フレーム ソート する	df.sort_values(by='A', ascending=True, inplace=True)
空文字	''
オブジェクト 整数	isinstance(obj, int)
リスト リスト 明るい 色 折れ線 グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
オプション ブランチドアーモンド グラフ 色 指定 する	color = 'blanchedalmond'
暗い グラフ 色 赤く する	plt.plot(xdata, ydata, linestyle='dark', color='r')
値 引い 代入 する	n -= n2
数式 積分 計算 する	sympy.integrate(e)
色 差別 ない グラフ プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
オプション 淡い 茶色 色 使用 する	color = 'tan'
オプション ライトスレイグレー 色 使う	color = 'lightslategray'
オブジェクト ある クラス	isinstance(obj, クラス)
実数 床	math.floor(x)
折れ線 グラフ 描画 し 色 ダークターコイズ 設定 する	plt.plot(データ列, データ列2, color='darkturquoise')
文字 列 回 続く 列	itertools.repeat(element, n)
ヒストグラム 描画 し その 色 レベッカパープル 変更 する	plt.hist(データ列, color='rebeccapurple')
オプション 番目 列 インデックス 変更 する	index_col = n
ラベンダー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lavender')
明るい 色 数列 リスト 散布 図 描く	plt.plot(xdata, ydata, c='bright')
折れ線 グラフ 色 ダーク グリーン 指定 する	plt.plot(データ列, データ列2, color='darkgreen')
イテラブル 重複 組み合せ 得る	itertools.combinations_with_replacement(iterable, n)
異なる カラム キー データ フレーム ジョイン する	pd.merge(df, df2, left_on='A', right_on='B')
日付 データ 分 加算 する	aDate + datetime.timedelta(minutes=n)
実数 非 数	math.isnan(x)
八 進 文字 列 バイト 列 変換 する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
リスト データ 列 折れ線 描い 透明 度 設定 する	plt.plot(xdata, ydata, alpha=alpha)
ビン 数 度数 分布 図 描く	plt.hist(データ列, bins=n)
データ フレーム 列 昇順 ソート する	df.sort_values(by='A', ascending=True)
折れ線 グラフ 色 ミディアムアクアマリン 設定 する	plt.plot(データ列, データ列2, color='mediumaquamarine')
ヒストグラム 描画 し その 色 ダークシアグリーン 設定 する	plt.hist(データ列, color='darkseagreen')
ディムグレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='dimgray')
リスト リスト 散布 図 描画 し 星 マーカー 色 カラー コード 変更 する	plt.plot(xdata, ydata, marker='*', c=rgb)
オプション 標準 出力 使う	file = sys.stdout
暗い 色 用い 重 見やすく 数列 データ 列 散布 図 プロット する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
グラフ 使う フォント 日本語 変更 する	sns.set(font='IPAexGothic')
双方向 キュー 中 要素 数える	deq.count(element)
日付 データ 月曜日	aDate.weekday() == 0
オプション 複数 行 対応 する	flag = re.MULTILINE
データ 列 リスト 淡い プロット し 色 黒 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ フレーム グループ 化 し それぞれ 列 合計 算出 する	df.groupby(column)[column2].sum()
ひとつ アスキー 文字 文字 列 内 含ま れる どう 調べる	any(c.isascii() for c in s)
データ 列 時 使う	ds.dt.hour
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 平均 値 求める	df.groupby([column, column2], as_index=False).mean()
ヒストグラム 描画 し その 色 赤 変更 する	plt.hist(データ列, color='red')
折れ線 グラフ 大 バツ マーカー 黒く する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
ヒストグラム 色 スラグレー 設定 する	plt.hist(データ列, color='slategrey')
データ フレーム リスト カラム 位 四捨五入 する	df[aList].round(-1)
ヒストグラム 実線 指定 する	plt.hist(データ列, linestyle='solid')
ファイル 用い 開く	open(filepath, encoding='euc_jp')
データ フレーム 二つ 列 ソート し 先頭 来る よう する	df.sort_values(by=['A', 'B'], na_position='first')
切り下げ 整数 する	math.floor(x)
データ フレーム リスト カラム 中 日付 データ 含ま れる	df[aList].isin([value])
データ 列 並べ 箱 ひ げ 図 する	plt.boxplot([データ列, データ列2])
ヒストグラム 色 ミディアムオーキッド 設定 する	plt.hist(データ列, color='mediumorchid')
正規 表現 限定 コンパイル する	re.compile(pattern, flag=re.ASCI)
両端 キュー デキュー する	deq.popleft()
データ フレーム 列 文字 列 始まる 行 抽出 する	df[df[column].str.startswith(s)]
データ フレーム リスト カラム 欠損 値 変更 する	df[aList].fillna(x)
文字 列 中 部分 文字 列 新しい 文字 列 回数 制限 し 置き換える	s.replace(sub, newsub, n)
オプション 色 ミッドナイト ブルー 設定 する	color = 'midnightblue'
個 データ 列 ビン 分割 し ラベル つける	pd.cut(ds, n, labels=names)
マッピング カウンタ する	collections.Counter(aDict)
リスト 個 ビン 分割 し ラベル つける	pd.cut(aList, n, labels=names)
異なる 列 キー し つ データ フレーム 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
日付 データ 時間 分 加算 する	aDate + datetime.timedelta(hours=n)
ヒストグラム 描画 し その 色 ダーク カーキ 設定 する	plt.hist(データ列, color='darkkhaki')
カウンタ 同士 共通 部分	aCounter & aCounter2
データ フレーム 各 列 毎 グループ 化 し 文字 列 グループ 個数 計算 する	df.groupby(column).size()[s]
散布 図 暗い 色 マーカー 用いる	plt.plot(xdata, ydata, c='dark')
リスト リスト 散布 図 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*')
文字 列 内 ひとつ 英数字 ある	any(c.isalnum() for c in s)
文字 列 最初 部分 文字 列 二つ 区切っ 後半 文字 列 求める	s.partition(sub)[-1]
折れ線 グラフ ポイント マーカー 赤く する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
等しい 調べる	n == n2
双方向 キュー 右 求める	deq[-1]
リスト 数列 リスト 値 応じ 散布 図 色 変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
散布 図 明るい 色 描画 する	plt.plot(xdata, ydata, c='bright')
折れ線 グラフ 実線 変更 する	plt.plot(データ列, データ列2, linestyle='solid')
ヒストグラム 色 カデット ブルー 変更 する	plt.hist(データ列, color='cadetblue')
それぞれ する	x, y, z = n, n2, n3
データ フレーム 指定 さ れ た データ 型 列 名 列挙 する	df.select_dtypes(型).columns
実数 床 数	math.floor(x)
線 グラフ 描画 し 色 ホット ピンク 設定 する	plt.plot(データ列, データ列2, color='hotpink')
データ フレーム 中 列 等量 ビン 数 ビン 分割 する	pd.qcut(df[col], n)
非 アスキー 文字 文字 列 中 ある どう 調べる	any(not c.isascii() for c in s)
折れ線 グラフ 描画 し その 色 レモン シフォン 設定 する	plt.plot(データ列, データ列2, color='lemonchiffon')
データ フレーム 重複 し た 行 消す	df.drop_duplicates()
淡い グラフ 色 赤色 設定 する	plt.plot(xdata, ydata, linestyle='muted', color='r')
データ フレーム カラム 位 丸める	df[col].round(-1)
ヒストグラム 色 貝殻 設定 する	plt.hist(データ列, color='seashell')
カラー コード ダイアモンドマーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='D', c=rgb)
データ 列 百 位 四捨五入 する	ds.round(-2)
数列 数列 青い 濃い グラフ プロット する	plt.plot(xdata, ydata, linestyle='deep', color='b')
データ フレーム 二つ 列 で 降順 整列 する	df.sort_values(by=['A', 'B'], ascending=False)
リスト タプル 変換 する	tuple(aList)
リスト リスト 暗い 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
マスク さ れ た 列 要素 取り出す	itertools.compress(iterable, selectors=iterable2)
パス ディレクトリ 加える	sys.path.append(os.path.join(os.path.dirname(__file__), dir))
データ フレーム 正規 分布 どの 程度 尖っ いる 見る	df.skew()
折れ線 グラフ 描画 し その 色 ホット ピンク 設定 する	plt.plot(データ列, データ列2, color='hotpink')
横 棒 描画 し 中央 寄せ する	plt.barh(ラベル列, データ列, align='center')
オプション 色 バリーウッド 設定 する	color = 'burlywood'
オプション グラフ 色 パウダー ブルー 設定 する	color = 'powderblue'
データ フレーム 列 グループ 化 し 各 グループ ごと 個数 算出 する	df.groupby(column).count()
折れ線 グラフ 描画 し その 色 ベージュ 設定 する	plt.plot(データ列, データ列2, color='beige')
データ フレーム 列 ドロップ し 更新 する	df.drop(column, axis=1, inplace=True)
データ フレーム 相関 行列 スピアマン	df.corr(method='spearman')
オプション グラフ 色 ライトグリーン 指定 する	color = 'lightgreen'
データ フレーム 各 列 列 組み合わせ 毎 グループ 分け し 標準 偏差 求める	df.groupby([column, column2], as_index=False).std()
配列 一 次元 する	aArray.flatten()
日付 データ 金曜日	aDate.weekday() == 4
実数 万 位 四捨五入 する	round(x, -4)
キュー ポップ する	deq.pop()
データ 列 中 いくつ 日 付 データ 存在 する 数える	ds.isin([value]).sum()
ヒストグラム 色 淡い ピンク色 変更 する	plt.hist(データ列, color='lightpink')
データ フレーム 列 文字 列 含ま れ ない 行 抽出 する	df[not df[column].str.contains(s)]
列 名 リスト 昇順 データ フレーム ソート する	df.sort_values(by=column, ascending=True)
エクセルデータ データ フレーム 読み込む	pd.read_excel(filename)
タイムスタンプデータ 秒 前 戻す	aDatetime - datetime.timedelta(seconds=n)
キー タプル 上 未 定義	key not in aDict
アルファベット 全て 見る	string.ascii_letters
文字 列 大文字 小文字 整える	s.casefold()
カラー バー 横向き 描画 する	plt.colorbar(orientation='horizontal')
真に なる イテラブル 要素 取り除く	itertools.dropwhile(predicateFunc, iterable)
折れ線 グラフ 黒い 大 バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線 グラフ 大き さ 左 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線 グラフ 色 ドジャーブルー 設定 する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線 グラフ 菱形 マーカー 用いる	plt.plot(データ列, データ列2, marker='D')
折れ線 グラフ 描画 し その 色 シエナ 変更 する	plt.plot(データ列, データ列2, color='sienna')
線 グラフ 描画 し その 色 リネン 設定 する	plt.plot(データ列, データ列2, color='linen')
リスト リスト 散布 図 プロット し 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, c='pastel')
データ フレーム 列 並べ 直し 更新 する	df.sort_values(by='A', inplace=True)
データ フレーム 表示 する とき カラム 最大 幅 設定 する	pd.set_option('max_colwidth', n)
列 配列 抽出 する	df[column].values
折れ線 グラフ スタイル 破線 設定 する	plt.plot(データ列, データ列2, linestyle='dashed')
リスト リスト 散布 図 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o')
ファイル 読み込み モード オープン する	open(filepath, mode='r')
ヒストグラム 色 ディムグレー 変更 する	plt.hist(データ列, color='dimgrey')
データ 列 配列 散布 図 黒色 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='k')
実数 斜辺 求める	math.hypot(x, y)
オプション 色 ライトスレイグレー 設定 する	color = 'lightslategrey'
リスト 赤色 化 する	f'\033[31m{value}\033[0m'
折れ線 グラフ 描画 し その 色 スカイ ブルー する	plt.plot(データ列, データ列2, color='skyblue')
列 重複 コンビネーション	itertools.combinations_with_replacement(iterable, n)
データ フレーム リスト カラム 中 文字 列 日付 データ ある 確認 する	df[aList].isin([value, value2])
赤い ヒストグラム 描画 する	plt.hist(データ列, color='r')
データ 列 値 どう 調べる	ds.isna()
列 データ フレーム 集約 し 各 グループ ごと 分散 求める	df.groupby(column).var()
データ フレーム ファイル 形式 保存 する	df.to_csv(filename, sep='\t')
データ フレーム 列 以下 データ 取り出す	df[df[column] <= x]
オプション スラグレー グラフ 色 変更 する	color = 'slategray'
データ 列 時	ds.dt.hour
二つ データ フレーム 列 と列 キー 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
部分 文字 列 範囲 指定 し 探す	s.find(sub, start, end)
文字 列 部分 文字 列 二つ 分ける	s.partition(sub)
データ フレーム 列 並べ 上位 取り出す	df.sort_values(columns).head(n)
データ フレーム 各 列 毎 グループ 化 し 列 標準 偏差 求める	df.groupby(column)[column2].std()
行 データ フレーム 表示 できる よう する	pd.set_option('display.max_rows', n)
オブジェクト ユーザ 向け 文字 列 変換 する	str(obj)
オプション セパレータ 文字 列 する	sep = s
ヒストグラム 色 茶色 セット する	plt.hist(データ列, color='brown')
折れ線 グラフ 色 白く する	plt.plot(データ列, データ列2, color='w')
折れ線 グラフ 三角 マーカー 黄色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
列 キー し データ フレーム 内部 ジョイン する	pd.merge(df, df2, on=column, how='inner')
度数 分布 図 描画 し 区間 数 設定 する	plt.hist(データ列, bins=n)
リスト リスト 散布 図 描画 し マーカー 四角 設定 する	plt.plot(xdata, ydata, marker='s')
データ フレーム 中 いくつ 文字 列 存在 する 数える	df.isin([value]).sum()
ヒストグラム 描画 し その 色 サドル ブラウン 設定 する	plt.hist(データ列, color='saddlebrown')
データ フレーム 指定 さ れ た カラム	df[column]
折れ線 グラフ 色 青 緑 設定 する	plt.plot(データ列, データ列2, color='teal')
文字 列 右端 タブ 除去 する	s.rstrip('\t')
回 文字 列 繰り返す イテラブル	itertools.repeat(element, n)
散布 図 大 バツ マーカー 使用 する	plt.plot(xdata, ydata, marker='X')
文字 列 終了 位置 前 部分 文字 列 含ま れる 調べる	s.find(sub, 0, end) != -1
リスト リスト 散布 図 カラー コード 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c=rgb)
濃い の 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
タプル 値 小さい 順 並べる	sorted(aTuple, reverse=False)
オプション グラフ 色 レベッカパープル 指定 する	color = 'rebeccapurple'
データ フレーム 列 ソート し 先頭 する	df.sort_values(by=column, na_position='first')
ヒストグラム 色 ダークスレートブルー 設定 する	plt.hist(データ列, color='darkslateblue')
文字 列 先頭 正規 表現 限定 マッチ する 調べる	re.match(pattern, s, flags=re.ASCI)
散布 図 赤い バツ マーカー 使う	plt.plot(xdata, ydata, marker='x', c='r')
線 グラフ 描画 し その 色 小麦色 設定 する	plt.plot(データ列, データ列2, color='wheat')
ヒストグラム 色 ライトスレイグレー 変更 する	plt.hist(データ列, color='lightslategray')
折れ線 グラフ 色 ミディアムオーキッド 指定 する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線 グラフ 緑色 ポイント 印 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
文字 列 最初 部分 文字 列 分け た とき 後半 文字 列 取り出す	s.partition(sub)[-1]
データ フレーム データ 条件 フィルタ する	df[(df[column] == x) & (df[column2] == x2)]
黒色 星 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='*', c='k')
リスト ソート する	sorted(aList)
文字 列 中 パターン 複数 行 対応 マッチ する 文字 列 探す	re.search(pattern, s, flags=re.MULTILINE)
列 累積 し た イテラブル	itertools.accumulate(iterable, operator.mul)
データ 列 縦 軸 リスト 軸 指定 し 折れ線 グラフ 描く	plt.plot(xdata, ydata)
折れ線 グラフ 黄色い 印 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
乱数 正規 分布 得る	random.normalvariate(mu=0.5, sigma=0.2)
列 キー し データ フレーム 結合 する	pd.merge(df, df2, on=column)
オブジェクト 種類	type(obj)
オプション トマト 用いる	color = 'tomato'
グラフ 中 縦 軸 ラベル 付ける	plt.ylabel(untitled)
オプション 貝殻 グラフ 色 設定 する	color = 'seashell'
リスト リスト 用い 濃い グラフ 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
空 行 プリント する	print()
折れ線 グラフ 描画 し その 色 スラグレー 設定 する	plt.plot(データ列, データ列2, color='slategray')
二つ 文字 列 コロン 区切っ 出力 する	print(value, value2, sep=':')
実数 実数 加算 する	x + y
カデット ブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='cadetblue')
ファイル パス オープン し 書き込み ストリーム 求める	open(filepath, mode='w')
間 ヒストグラム 用い リスト プロット する	plt.hist(データ列, range=(start, end))
付き 書き込み できる よう ファイル オープン する	open(filepath, mode='w', encoding='utf_8_sig')
オプション グラフ 種類 一 点 鎖線 指定 する	linestyle = 'dashbot'
グラフ 点線 つける	plt.axvline(x=0, linestyle='dotted')
破壊 的 データ フレーム 重複 し た 行 消す	df.drop_duplicates(inplace=True)
日付 データ 週間 後 進める	aDate + datetime.timedelta(weeks=n)
データ 列 何 年 確認 する	ds.dt.year
折れ線 グラフ 描画 し その 色 ペールグリーン 設定 する	plt.plot(データ列, データ列2, color='palegreen')
データ フレーム リスト カラム パーセンタイル	df[aList].quantile(0.75)
折れ線 グラフ 描画 し その 色 シエナ 設定 する	plt.plot(データ列, データ列2, color='sienna')
整数 八 進数 リテラル 使う	oct(n)
文字 列 右 トリム する	s.rstrip()
リスト 配列 散布 図 プロット し マーカー バツ 設定 する	plt.plot(xdata, ydata, marker='x')
データ フレーム 中 列 等間隔 個 ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
データ フレーム カラム 中 文字 列 日付 データ いくつ ある カウント する	df[col].isin([value, value2]).sum()
二 変数 最も 小さい 値	min(x, y)
部分 文字 列 文字 列 分割 し た 場合 残り 文字 列 使う	s.partition(sub)[-1]
折れ線 グラフ 描画 し その 色 真紅 変更 する	plt.plot(データ列, データ列2, color='crimson')
折れ線 グラフ 描画 し その 色 ホワイトスモーク 設定 する	plt.plot(データ列, データ列2, color='whitesmoke')
双方向 キュー 空 する	deq.clear()
オプション マーカー 描画 する	marker = 'v'
折れ線 グラフ 色 ロージーブラウン 指定 する	plt.plot(データ列, データ列2, color='rosybrown')
割る	n / n2
アクアマリン 色 ヒストグラム 描画 する	plt.hist(データ列, color='aquamarine')
パステル 調 カラー パレット グラフ 描画 使う	sns.set(pallete='pastel')
差	n - n2
リスト リスト 色 差別 ない 色 折れ線 グラフ 描い その 線 幅 セット する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
折れ線 グラフ 描画 し その 色 アンティーク ホワイト 設定 する	plt.plot(データ列, データ列2, color='antiquewhite')
文字 列 内 アルファベット 含ま れる 調べる	any(c.isalpha() for c in s)
値 集合	element in aSet
オプション 色 サンディーブラウン する	color = 'sandybrown'
リスト リスト 濃い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
ダークゴールデンロッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkgoldenrod')
データ フレーム エポック 秒 日付 データ 変換 する	pd.to_datetime(df[col], unit='s', utc=True)
タプル 形式 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False)
カウンタ 交差 演算 する	aCounter & aCounter2
オプション フォレストグリーン 色 指定 する	color = 'forestgreen'
データ フレーム 中 ある 文字 列 文字 列 合計 数える	df.isin([value, value2]).sum()
暗い グラフ 色 青く する	plt.plot(xdata, ydata, linestyle='dark', color='b')
データ 列 直前 値 埋める	ds.fillna(method='ffill')
ヒストグラム 描画 し その 色 ライト グレー 指定 する	plt.hist(データ列, color='lightgray')
データ フレーム 各 列 毎 グループ 化 し 文字 列 グループ 個数 求める	df.groupby(column).size()[s]
ファイル パス バイナリ 書き込み モード オープン し する	f = open(filepath, mode='wb')
データ 列 リスト 暗い 色 折れ線 グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リスト 配列 散布 図 プロット し マーカー 色 明るい 設定 する	plt.plot(xdata, ydata, c='bright')
データ フレーム 行 取り出す	df[:n]
データ フレーム 列 と列 消す	df.drop([column, column2], axis=1)
データ 列 折れ線 グラフ 描画 し マーカー する	plt.plot(データ列, データ列2, marker='v')
折れ線 グラフ 菱形 マーカー 黒色 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
リスト 配列 散布 図 黒い 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c='k')
カラム 欠損 値 後 行 値 埋める	ds.fillna(method='bfill')
マップ キー 一覧	aDict.keys()
何 回 再帰 できる	sys.getrecursionlimit()
コーラル 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='coral')
線 グラフ 色 インディゴ 変更 する	plt.plot(データ列, データ列2, color='indigo')
表 データ 一番 右 列 除く	df[df.columns[:-1]]
印字 可能 な 文字 全部 使う	string.printable
散布 図 黒色 バツ マーカー 使っ 描画 する	plt.plot(xdata, ydata, marker='x', c='k')
組 末尾 取り除く	aTuple[:-1]
日付 時刻 データ 日付 時刻 データ 時間 差	aDatetime - aDatetime2
データ フレーム リスト カラム まとめ 置き換える	df[aList].replace(ValueMap)
ベクトル 和 算出 する	aArray + aArray2
分子 分母 分数 作る	fractions.Fraction(分子, 分母)
オプション パールバイオレットレッド 色 使用 する	color = 'palevioletred'
文字 列 読み込む	json.loads(jsonString)
数列 リスト 明るい 色 折れ線 グラフ プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
二つ データ フレーム 横向き 連結 する	pd.concat([df, df2], axis=1)
データ フレーム 列 文字 列 欠損 値 変換 する	df[col].replace(s, np.nan)
ヒストグラム 色 ダーク シアン 変更 する	plt.hist(データ列, color='darkcyan')
明るい 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リスト リスト 散布 図 下 三角 マーカー プロット する	plt.plot(xdata, ydata, marker='v')
番目 値 取り除く	aList.pop(n)
データ フレーム カラム 中 文字 列 ある 調べる	df[col].isin([value])
データ フレーム 全体 インデックス 昇順 並べ 直す	df.sort_index(ascending=True)
データ 列 リスト 散布 図 色 差別 ない 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
要素 集合 メンバー テスト する	element in aSet
イテラブル 配列 散布 図 色 差別 ない 色 用い 描画 する	plt.plot(xdata, ydata, c='colorblind')
配列 リスト パステル 調 色 折れ線 グラフ 描き 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
オブジェクト 論理 値 クラス	isinstance(obj, bool)
日付 時刻 データ 何 曜日 知る	aDatetime.weekday()
辞書 項目 名 値	aDict[key]
折れ線 グラフ 描画 し その 色 スラグレー 変更 する	plt.plot(データ列, データ列2, color='slategrey')
実数 二 乗	x ** 2
全 要素 初期 化 さ れ た 三 ビット 整数 型 行列	np.zeros(行数, 列数, dtype=np.int16)
オプション パープル 色 使う	color = 'purple'
文字 列 青色 する	f'\033[34m{value}\033[0m'
行列 列 ごと 分散	np.var(aArray, axis=0)
両端 キュー 要素 スタック する	deq.append(element)
データ フレーム 列 ユニーク な 要素 抽出 し リスト 化 する	df[col].unique().tolist()
リスト 暗い 色 柱状 図 描画 する	plt.hist(xdata, color='dark')
ターコイズ 色 ヒストグラム 描画 する	plt.hist(データ列, color='turquoise')
データ 列 折れ線 グラフ 描画 し マーカー 左 三 角 する	plt.plot(データ列, データ列2, marker='<')
オプション グラフ 色 シアン 設定 する	color = 'cyan'
実数 整数	x.is_integer()
黒い 左 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c='k')
データ フレーム 各 列 カラム 組み合わせ 毎 分類 し 平均 値 求める	df.groupby([column, column2], as_index=False).mean()
ケース 無視 し 文字 列 先頭 正規 表現 マッチ さ せる	re.match(pattern, s, flags=re.IGNORECASE)
集合 要素 全て 消す	aSet.clear()
折れ線 グラフ 描画 し その 色 アクア セット する	plt.plot(データ列, データ列2, color='aqua')
文字 列 中 正規 表現 マッチ する 位置 探す	re.search(pattern, s)
オプション エン コーディング 指定 する	encoding = 'utf-8'
列 列 データ フレーム ソート し 更新 する	df.sort_values(by=['A', 'B'], inplace=True)
リスト 配列 散布 図 赤い 四角 マーカー プロット する	plt.plot(xdata, ydata, marker='s', c='r')
数列 データ 列 淡い 描画 し その 色 青く する	plt.plot(xdata, ydata, linestyle='muted', color='b')
ヒストグラム 描画 し その 色 ペールグリーン 指定 する	plt.hist(データ列, color='palegreen')
オレンジ レッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='orangered')
データ 列 データ 列 カラー コード パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
オプション オールド レース 使用 する	color = 'oldlace'
オプション ミディアムスレートブルー 色 使う	color = 'mediumslateblue'
プロット 描画 色 差別 ない カラー パレット 使う	sns.set(pallete='colorblind')
書式 データ 列 タイム スタンプ 型 変換 する	pd.to_datetime(ds, format=fmt)
割り切れる どう 調べる	n % 2 == 0
再帰 上限 上げる	sys.setrecursionlimit(1000000)
ヒストグラム 線 スタイル 破線 セット する	plt.hist(データ列, linestyle='dashed')
データ 列 四 分 位 数 ごと ビン 分割 する	pd.qcut(ds, 4)
ルート チェーン マップ 作る	collections.ChainMap()
ヒストグラム 描画 し その 色 ミディアムスレートブルー 設定 する	plt.hist(データ列, color='mediumslateblue')
実数 逆 正弦 求める	math.asin(x)
オブジェクト 文字 列 クラス どう	isinstance(obj, str)
負 整数 調べる	n < 0
データ フレーム 転置 する	df.T
データ フレーム 行 範囲 指定 し 選択 する	df[start:end]
カウンタ 共通 部分	aCounter & aCounter2
データ フレーム ファイル 読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
リスト 明るい 色 ヒストグラム 使っ 描画 する	plt.hist(xdata, color='bright')
データ 列 曜日 数	ds.dt.dayofweek
リスト データ 列 散布 図 プロット し 丸 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='o', c=rgb)
文字 列 左側 タブ 除去 する	s.lstrip('\t')
グラフ 中 縦 軸 ラベル 指定 する	plt.ylabel(untitled)
折れ線 グラフ 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n)
データ フレーム リスト 列 最大 値 補う	df[aList].fillna(df[aList].max())
ライム 色 ヒストグラム 描画 する	plt.hist(データ列, color='lime')
リスト 配列 破線 グラフ プロット し その 色 明るい 変更 する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
ファイル 拡張 子 なし ファイル 名	os.path.splitext(os.path.basename(filepath))[0]
データ フレーム 列 名前 一 度 文字 列 文字 列 置換 する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データ フレーム リスト 列 歪 度 算出 する	df[aList].kurt()
黒色 丸 マーカー リスト 配列 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c='k')
年 月 日 時 分 日付 時刻 オブジェクト 化 する	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
ライトスレイグレー ヒストグラム 色 変更 する	plt.hist(データ列, color='lightslategrey')
部分 集合	aSet.issubset(aSet2)
表 中 列 と列 重複 あれ マスク する	df.duplicated(subset=[column, column2])
大きく かつ 小さい 調べる	n < n2 and n2 < n3
割る 有理数 表現	fractions.Fraction(numerator=n, denominator=m)
異なる 列 キー し 二つ データ フレーム ジョイン する	pd.merge(df, df2, left_on='A', right_on='B')
連立 方程式 解 求める	sympy.solve([e, e2])
十 六 進数 文字 列	hex(n)[2:]
プラットホーム 調べる	sys.platform.startswith('darwin')
辞書 キー 対応 し た 値	aDict.get(key)
データ 列 リスト 折れ線 ラベル付け し プロット する	plt.plot(xdata, ydata, label=untitled)
データ フレーム 各 グループ ごと 平均 値	df.groupby(column).mean()
小数点 数 タンジェント 求める	math.tan(x)
ヒストグラム 色 貝殻 変更 する	plt.hist(データ列, color='seashell')
イテラブル 文字 列 リスト 変換 し タブ 連結 する	'\t'.join(map(str, iterable))
変数 アンダーライン 付き プリント できる 文字 列 変換 する	f'\033[4m{value}\033[0m'
カウンタ 同士 積 集合 演算 する	aCounter & aCounter2
折れ線 グラフ 星 マーカー 赤色 する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
平均 値 データ フレーム リスト カラム 欠損 値 補う	df[aList].fillna(df[aList].mean())
日付 時刻 データ 日付 時刻 データ 早い 調べる	aDatetime < aDatetime2
分子 分母 有理数 作成 する	fractions.Fraction(numerator=n, denominator=m)
ヒストグラム 色 ライトゴールドロディイエロー 変更 する	plt.hist(データ列, color='lightgoldenrodyellow')
型 名前 付き タプル	issubclass(C, tuple)
オプション フクシア 用いる	color = 'fuchsia'
ヒストグラム 描画 し その 色 ピンク 設定 する	plt.hist(データ列, color='pink')
折れ線 グラフ 描画 し 色 サーモン 設定 する	plt.plot(データ列, データ列2, color='salmon')
データ フレーム グループ 化 し 列 個数 求める	df.groupby(column)[column2].count()
データ フレーム 各 次元 大き さ 確認 する	df.shape
横 棒グラフ 描画 し 幅 指定 する	plt.barh(ラベル列, データ列, width=x)
ヒストグラム 色 カーキ 設定 する	plt.hist(データ列, color='khaki')
モジュール イン ポート する	import os
文字 列 日付 時刻 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
一 桁 正 数 どう 調べる	0 <= x <= 9
散布 図 黒色 四角 マーカー 使う	plt.plot(xdata, ydata, marker='s', c='k')
パパイヤウィップ ヒストグラム 色 設定 する	plt.hist(データ列, color='papayawhip')
オプション 線 幅 指定 する	linewidth = n
オプション 色 ミディアムシアグリーン 指定 する	color = 'mediumseagreen'
文字 列 カタカナ どう 調べる	('ァ' <= ch <= 'ン')
オプション ビット 整数 型 使う	dtype = np.int16
キー 辞書 存在 する 調べる	key not in aDict
ハニーデュー 色 ヒストグラム 描画 する	plt.hist(データ列, color='honeydew')
データ 列 ビン 数 ビン 分割 し ラベル つける	pd.cut(ds, n, labels=names)
文字 列 区切り 記号 分割 し 文字 列 リスト 変換 する	s.split(sep)
カラム 中央 値	ds.median()
ヒストグラム 色 ダーク オリーブ グリーン 設定 する	plt.hist(データ列, color='darkolivegreen')
整数 符号 付き 長 さ バイト 列 変換 する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
日付 データ 水曜日	aDate.weekday() == 2
オプション グラフ 色 スプリング グリーン 変更 する	color = 'springgreen'
コサイン	math.cos(x)
三つ 文字 列 順に 表示 する	print(value, value2, value3)
折れ線 グラフ 丸 マーカー 使う	plt.plot(データ列, データ列2, marker='o')
データ フレーム 表示 する とき 小数点 以下 桁 設定 する	pd.set_option('precision', n)
限定 文字 列 全体 正規 表現 マッチ さ せる	re.fullmatch(pattern, s, flags=re.ASCI)
実数 逆 双曲線 正弦	math.asinh(x)
オブジェクト 論理 値 クラス 調べる	isinstance(obj, bool)
リスト リスト 暗い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
折れ線 グラフ 描画 し その 色 ダークマゼンタ 設定 する	plt.plot(データ列, データ列2, color='darkmagenta')
データ フレーム 中 列 列 重複 削除 する	df.drop_duplicates(subset=[column, column2])
リスト リスト 暗い グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
ヒストグラム 色 青く する	plt.hist(データ列, color='b')
日付 時刻 データ 秒 後 進める	aDatetime + datetime.timedelta(seconds=n)
文字 列 中 ひとつ 非 英数字 ある どう 調べる	any(not c.isalnum() for c in s)
線 グラフ 描画 し 色 黄色く する	plt.plot(データ列, データ列2, color='y')
ヒストグラム 描画 し その 色 デピンク 変更 する	plt.hist(データ列, color='deeppink')
グラフ 背景 色 暗く する	sns.set(style='darkgrid')
正規 表現 使う	import re
列 それぞれ 関数 フィルタ する	map(func, iterable)
折れ線 グラフ 描画 し その 色 ライム 変更 する	plt.plot(データ列, データ列2, color='lime')
オプション グラフ 色 パールゴールデンロッド 設定 する	color = 'palegoldenrod'
配列 リスト 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n)
データ フレーム カラム 平均 値 設定 する	df[col].fillna(df[col].mean())
折れ線 グラフ 色 コーンフラワーブルー 設定 する	plt.plot(データ列, データ列2, color='cornflowerblue')
日付 時刻 データ 秒 数 使う	aDatetime.second
八 進 数字 全部 求める	string.octdigits
折れ線 グラフ 右 三 角 マーカー 黄色く する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線 グラフ 四角 マーカー 使う	plt.plot(データ列, データ列2, marker='s')
真 なる イテラブル 部分 取り除く	itertools.dropwhile(predicateFunc, iterable)
双方向 キュー 最初 データ	deq[0]
オプション ダーク グリーン 使う	color = 'darkgreen'
文字 列 開始 位置 以降 部分 文字 列 ない	s.find(sub, start) == -1
折れ線 グラフ 大き さ 左 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='<', markersize=n)
配列	np.arange(1, N+1)
データ フレーム 各 列 毎 グループ 化 し 文字 列 グループ 使う	df.groupby(column).get_group(s)
ディープスカイブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='deepskyblue')
データ フレーム 列 グループ 化 し グループ ごと 件数 知る	df.groupby(column).size()
行列 列 ごと 最大 値 算出 する	np.max(aArray, axis=0)
オプション グラフ 色 パパイヤウィップ 設定 する	color = 'papayawhip'
配列 リスト 散布 図 赤い マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='r')
ヒストグラム アルファ 変更 する	plt.hist(データ列, alpha=x)
ユニーク な 要素 ごと 頻度 求める	np.unique(aArray, return_counts=True)
緑色 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
限定 文字 列 先頭 パターン マッチ さ せる	re.match(pattern, s, flags=re.ASCI)
データ 列 折れ線 グラフ 描画 し マーカー 丸 する	plt.plot(データ列, データ列2, marker='o')
データ フレーム 列 ドロップ し 入れ替える	df.drop(column, axis=1, inplace=True)
ブランチドアーモンド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='blanchedalmond')
ヒストグラム 描画 し その 色 ディープスカイブルー する	plt.hist(データ列, color='deepskyblue')
折れ線 グラフ 描画 し 色 赤 変更 する	plt.plot(データ列, データ列2, color='red')
部分 文字 列 文字 列 分け た とき 後半 文字 列 求める	s.partition(sub)[-1]
ライトスチールブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightsteelblue')
データ フレーム 表示 する とき 表示 可能 な 最大 列 数 減らす	pd.set_option('display.max_columns', n)
データ フレーム エクセルファイルファイル ファイル 書き込む	df.to_excel(filename)
線 グラフ 描画 し その 色 アリスブルー する	plt.plot(データ列, データ列2, color='aliceblue')
関数 値 データ フレーム グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(関数)]
ヒストグラム 描画 し 色 アイボリー 設定 する	plt.hist(データ列, color='ivory')
散布 図 カラー コード 星 マーカー 使う	plt.plot(xdata, ydata, marker='*', c=rgb)
句点 文字 全部 使う	string.punctuation
イテラブル 重複 なく 要素 選ぶ	random.sample(iterable, k=n)
データ フレーム 指定 さ れ た データ 型 カラム 名 一覧	df.select_dtypes(型).columns
オプション 付き 使う	encoding = 'utf_8_sig'
ヒストグラム 色 ダークオーキッド 設定 する	plt.hist(データ列, color='darkorchid')
マッピング 全 項目 消去 する	aDict.clear()
線 グラフ 色 シエナ 設定 する	plt.plot(データ列, データ列2, color='sienna')
商 求める	n / n2
データ 列 折れ線 グラフ 描画 し 印 菱形 印 する	plt.plot(データ列, データ列2, marker='D')
データ フレーム 列 ヒストグラム 可視 化 する	plt.hist(df[column])
個 配列 分割 する	pd.cut(aArray, n)
赤い 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='r')
折れ線 グラフ 描画 し その 色 ダークスレートブルー 指定 する	plt.plot(データ列, データ列2, color='darkslateblue')
データ フレーム 中 カラム 個 等間隔 ビン 分割 し ラベル つける	pd.cut(df[col], n, labels=names)
破線 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
文字 列 左側 部分 文字 列 除く	s.lstrip(sub)
空白	' '
散布 図 赤い 丸 マーカー 使う	plt.plot(xdata, ydata, marker='o', c='r')
真 なる 列 要素 取り除く	itertools.dropwhile(predicateFunc, iterable)
小数点 数 正接	math.tan(x)
リスト リスト 黒い パステル 調 グラフ 描く	plt.plot(xdata, ydata, linestyle='pastel', color='k')
イテラブル データ 列 散布 図 黒い 丸 マーカー プロット する	plt.plot(xdata, ydata, marker='o', c='k')
青色 暗い 描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
オプション サンディーブラウン グラフ 色 設定 する	color = 'sandybrown'
数列 リスト 散布 図 赤色 菱形 マーカー 描画 する	plt.plot(xdata, ydata, marker='D', c='r')
一 点 鎖線 付ける	plt.axhline(y=0, linestyle='dashbot')
ファイル 追加 モード オープン する	open(filepath, mode='a')
ファイル 名 ファイル 調べる	filename.endswith('.json')
行列 値 変更 する	aArray[行番号, 列番号] = 指定の値
ヒストグラム 描画 し その 色 ライト グレー 変更 する	plt.hist(データ列, color='lightgray')
ファイル 開い 読み込み ストリーム 見る	open(filepath, mode='r')
ヒストグラム 描画 し その 色 ミディアムスレートブルー する	plt.hist(データ列, color='mediumslateblue')
オブジェクト 名前 付き タプル 調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
散布 図 濃い 色 マーカー 用いる	plt.plot(xdata, ydata, c='deep')
文字 列 新しい 文字 列 全部 置き換える	s.replace(sub, newsub)
データ 列 日付 データ する	pd.to_datetime(ds)
折れ線 グラフ 描画 し 色 赤く する	plt.plot(データ列, データ列2, color='r')
ふたつ 集合 和 集合 求める	aSet.union(aSet2)
日付 時刻 データ タプル 変換 する	aDatetime.timetuple()
タプル 少なくとも ひとつ 真	any(aTuple)
折れ線 グラフ 描画 し 色 ダーク バイオレット 設定 する	plt.plot(データ列, データ列2, color='darkviolet')
各 列 毎 データ フレーム グループ 化 し 列 標準 偏差 求める	df.groupby(column)[column2].std()
データ フレーム 行 条件 フィルタ する	df[(df[column] == x) & (df[column2] == x2)]
暗い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
データ フレーム 列 と列 重複 あれ 削除 する	df.drop_duplicates(subset=[column, column2])
データ 列 リスト 破線 プロット し その 色 濃い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リスト イテラブル 明るい グラフ 描い 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
文字 列 フォーマット 日付 データ する	pd.to_datetime(s, format='%Y-%m-%d')
アクア ヒストグラム 色 指定 する	plt.hist(データ列, color='aqua')
ベクトル 最小	np.min(aArray)
明るい グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
二 進 表現 変換 する	bin(n)
標準 入力 得る	sys.stdin
オプション リネン 色 使う	color = 'linen'
散布 図 重なり 見やすく 明るい 色 描画 する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
データ フレーム 列 列 値 まとめ た グループ 使う	df.groupby(['A', 'B'])
線 グラフ 色 オレンジ 設定 する	plt.plot(データ列, データ列2, color='orange')
浮動 小数点 数 乗 数 剰余	pow(x, n, y)
文字 列 接頭 辞 部分 文字 列	s.startswith(sub)
イテラブル リスト 破線 グラフ 描画 し 色 濃い 変更 する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
二つ リスト マップ	dict(zip(aList, aList2))
ヒストグラム 色 濃い 青 セット する	plt.hist(データ列, color='darkblue')
未 初期 化 配列 作る	np.empty(要素数, dtype=np.int)
現在 再帰 最大 回数	sys.getrecursionlimit()
折れ線 グラフ 描画 し その 色 デピンク 指定 する	plt.plot(データ列, データ列2, color='deeppink')
列 多重 集合 変換 する	collections.Counter(iterable)
折れ線 グラフ 四角 マーカー 赤く する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
二つ 文字 列 コロン 区切っ プリント する	print(value, value2, sep=':')
数列 リスト 明るい 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
データ 列 リスト 散布 図 大き さ 描画 する	plt.scatter(xdata, ydata, s=n)
ミディアムアクアマリン ヒストグラム 色 変更 する	plt.hist(データ列, color='mediumaquamarine')
オプション 小麦色 色 設定 する	color = 'wheat'
コマンド 引数 一覧	sys.argv[1:]
ダークオーキッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkorchid')
割っ た 結果 切り上げ	(n + n2 - 1) // n2
データ フレーム カラム 中 合計 数える	df[col].isna().sum()
オプション ミディアムスプリンググリーン 色 使う	color = 'mediumspringgreen'
ヒストグラム 描画 し その 色 グリーン イエロー 設定 する	plt.hist(データ列, color='greenyellow')
黒い ヒストグラム 描画 する	plt.hist(データ列, color='k')
データ ラベル プロット 中 場所 入れる	plt.legend(loc=(x, y))
線 グラフ 色 ライト コーラル 設定 する	plt.plot(データ列, データ列2, color='lightcoral')
数値 時刻 データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], unit='s', utc=True)
オブジェクト プロパティ 削除 する	delattr(obj, プロパティ名)
データ フレーム リスト カラム 未 入力 値 モード 設定 する	df[aList].fillna(df[aList].mode().iloc[0])
列 各 データ 何 回 出現 する 見る	ds.value_counts()
部分 文字 列 部分 文字 列 始まる 判定 する	s.startswith(sub)
配列 スカラー 倍 求める	aArray * n
ヒストグラム 描画 し その 色 ピンク 変更 する	plt.hist(データ列, color='pink')
オプション コロン 区切り 使う	sep = ':'
データ フレーム 読む	pd.read_csv(filename, sep='\t')
データ フレーム 列 まとめ た グループ	df.groupby(column)
小文字 大文字 する	s.upper()
ヒストグラム 描画 し 色 シルバー 設定 する	plt.hist(データ列, color='silver')
両端 キュー 末尾 イテラブル 各 要素 追加 する	deq.extend(iterable)
イテラブル 集合	set(iterable)
商 余り 同時に 求める	divmod(x, y)
リスト データ 列 散布 図 描画 し 下 三角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='v', c=rgb)
折れ線 グラフ ダイアモンドマーカー 青く する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
リスト 文字 列 リスト 変換 し カンマ つなげる	','.join(map(str, iterable))
数列 イテラブル 散布 図 黒色 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c='k')
データ フレーム リスト カラム 中 いくつ 存在 する 数える	df[aList].isin([value]).sum()
アルファベット ひとつ ランダム 選ぶ	random.choice(string.ascii_uppercase)
折れ線 グラフ バツ マーカー 加える	plt.plot(データ列, データ列2, marker='x')
オプション 色 カーキ 変更 する	color = 'khaki'
折れ線 グラフ 緑色 上 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
文字 列 最後 部分 文字 列 二分 し 前半 文字 列 見る	s.rpartition(sub)[0]
折れ線 グラフ 赤い 左 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
リスト リスト 散布 図 赤い 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c='r')
パターン 文字 列 日付 時刻 変換 する	datetime.datetime.strptime(日付の書かれた文字列, format)
個 リスト 等量 ビン 分割 する	pd.qcut(aList, n)
データ フレーム カラム ヒストグラム 描画 する	plt.hist(df[column])
リスト 配列 淡い 折れ線 グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
日付 時刻 データ 分 前 する	aDatetime - datetime.timedelta(minutes=n)
オプション 付き 用いる	encoding = 'utf_8_sig'
列 セット 変換 する	set(iterable)
折れ線 グラフ 色 スノー する	plt.plot(データ列, データ列2, color='snow')
パウダー ブルー ヒストグラム 色 変更 する	plt.hist(データ列, color='powderblue')
文字 列 部分 文字 列 二分 し 前半 文字 列 使う	s.partition(sub)[0]
配列 ビン 数 ビン 分割 する	pd.cut(aArray, n)
データ フレーム 複数 列 まとめ た 表	df.groupby(columns)
本日 何 曜日 知る	datetime.datetime.today().weekday()
ヒストグラム 描画 し その 色 ダークターコイズ 設定 する	plt.hist(データ列, color='darkturquoise')
ヒストグラム 描画 し その 色 ダーク グリーン 設定 する	plt.hist(データ列, color='darkgreen')
配列 イテラブル 散布 図 描き 菱形 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='D', c=rgb)
文字 列 開始 位置 終了 位置 間 部分 文字 列 登場 回数 カウント する	s.count(sub, start, end)
リスト リスト カラー コード 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
環境 名前 調べる	sys.platform
暗い 色 用い リスト ヒストグラム 描画 する	plt.hist(xdata, color='dark')
英字 小文字 全部 求める	string.ascii_lowercase
データ フレーム 二つ 列 降順 ソート する	df.sort_values(by=['A', 'B'], ascending=False)
折れ線 グラフ 描画 し 色 ゴールデン ロッド 設定 する	plt.plot(データ列, データ列2, color='goldenrod')
現在 作業 ディレクトリ 変更 する	os.chdir(os.dirname(filepath))
つ 浮動 小数点 数 ほぼ 等しい 調べる	math.isclose(x, x2)
グラフ 水平 方向 破線 設定 する	plt.axhline(y=0, linestyle='dashed')
タプル 最初 文字 列 探す	aTuple.index(element)
データ フレーム カラム 年	df[col].dt.year
カラー コード 四角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='s', c=rgb)
データ 列 丸める	ds.round()
文字 列 右側 空白 取り除く	s.rstrip()
双曲線 余弦 逆数	math.acosh(x)
データ フレーム データ 列 横 方向 つなぐ	pd.concat([df, ds], axis=1)
文字 列 文字 リスト 変換 する	list(s)
データ フレーム 列 一意 な 要素 数	df[col].nunique()
シーケンス ダミー 変数 する	pd.get_dummies(iterable)
データ スタック 中 含ま れ てる 調べる	element in deq
列 未 入力 値 直後 値 設定 する	ds.fillna(method='bfill')
実数 負	x < 0
ファイル データ フレーム 読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
リスト リスト 散布 図 プロット し マーカー 色 色 差別 ない セット する	plt.plot(xdata, ydata, c='colorblind')
リスト データ フレーム 指定 さ れ た 列 抽出 する	df[column].values.tolist()
大きく かつ 未満	n < n2 and n2 < n3
リスト リスト 散布 図 赤い 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<', c='r')
無限 カウントアップ する	itertools.count()
リスト リスト 散布 図 濃い 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
折れ線 グラフ 描画 し その 色 ディープスカイブルー 設定 する	plt.plot(データ列, データ列2, color='deepskyblue')
明るい グラフ 色 黒 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
折れ線 グラフ 描画 し その 色 オールド レース 設定 する	plt.plot(データ列, データ列2, color='oldlace')
データ 列 どの 値 最も 現れる 見る	ds.mode()
昇順 破壊 的 複数 列 データ フレーム ソート する	df.sort_values(by=column, ascending=True, inplace=True)
両端 キュー 空か 調べる	len(deq) == 0
日付 時刻 データ 週間 後 進める	aDatetime + datetime.timedelta(weeks=n)
リスト 長 さ	len(aList)
関数 無限 バージョン	itertools.count(start=n, step=step)
文字 列 リスト 含ま れる どう 調べる	element in aList
小文字 全部 求める	string.ascii_lowercase
現在 何時 知る	datetime.date.today().hour
改行 なし 変数 プリント する	print(value, end='')
二 変数 最大 値 計算 する	max(x, y)
新しい 文字 列 正規 表現 マッチ し た 文字 列 置き換える	re.sub(pattern, newsub, s)
オプション スチール ブルー 色 する	color = 'steelblue'
八 進 数字 求める	string.octdigits
データ フレーム 列 並べ 直し 更新 する	df.sort_values(by='A', inplace=True)
データ フレーム 列 と列 重複 あれ 消す	df.drop_duplicates(subset=column)
二 進 文字 列 バイト バイト 列 する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
ヒストグラム 描画 し その 色 ミディアムスレートブルー 変更 する	plt.hist(データ列, color='mediumslateblue')
折れ線 グラフ マーカー 四角 する	plt.plot(データ列, データ列2, marker='s')
オプション 下 三角 マーカー 描画 する	marker = 'v'
日付 時刻 データ タイムスタンプデータ 時間 差	aDatetime - aDatetime2
前もって 複数 行 対応 正規 表現 コンパイル する	re.compile(pattern, flag=re.MULTILINE)
データ フレーム 中 列 ビニング する	pd.cut(df[col], aList)
本日 文字 列 フォーマット し 文字 列 する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
暗い 色 リスト 配列 散布 図 プロット する	plt.plot(xdata, ydata, c='dark')
オプション 標準 出力 出力 する	file = sys.stdout
オプション ライム グリーン グラフ 色 セット する	color = 'limegreen'
文字 列 リスト ひとつ 文字 列 する	''.join(map(str, iterable))
データ 列 ビン 数 ビン 分割 する	pd.cut(ds, n)
データ 列 日	ds.dt.day
オプション 色 淡い 茶色 設定 する	color = 'tan'
オプション 出力 先 ファイル 設定 する	file = sys.open(filename, 'w')
オプション エン コーディング 文字 列 示す 文字 コード 設定 する	encoding = s
ヒストグラム 描画 し その 色 ティール 設定 する	plt.hist(データ列, color='teal')
オプション ペールグリーン グラフ 色 設定 する	color = 'palegreen'
余弦 逆数	math.acos(x)
ユニーク な 要素 ごと 頻度 使う	np.unique(aArray, return_counts=True)
ヒストグラム 色 トマト 指定 する	plt.hist(データ列, color='tomato')
二つ 数値 カンマ 区切っ プリント する	print(value, value2, sep=',')
リスト リスト 散布 図 右 三 角 マーカー プロット する	plt.plot(xdata, ydata, marker='>')
棒 描い 幅 設定 する	plt.bar(ラベル列, データ列, width=x)
ハロー ワールド 出力 する	print('Hello World')
折れ線 グラフ 赤い 左 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
本日 月曜日	datetime.datetime.today().weekday() == 0
日付 時刻 データ 秒 分 減らす	aDatetime - datetime.timedelta(seconds=n)
浮動 小数点 数 正 数	x > 0
ヒストグラム 描画 し その 色 チョコレート 設定 する	plt.hist(データ列, color='chocolate')
データ 列 中 いくつ 欠損 値 ある カウント する	ds.isna().sum()
文字 列 中 部分 文字 列 出現	s.count(sub)
データ フレーム 最初 カラム 除く	df[df.columns[1:]]
グリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='green')
折れ線 グラフ 描画 し 色 ペールグリーン 設定 する	plt.plot(データ列, データ列2, color='palegreen')
データ 列 曜日 数 使う	ds.dt.dayofweek
小数点 以下 桁 文字 列 変換 する	':.1f'.format(x)
赤い ダイアモンドマーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D', c='r')
データ 列 丸め 整数 型 する	ds.round().astype(int)
データ フレーム カラム 空文字 欠損 値 変換 し ドロップ する	df[col].replace('', np.nan).dropna()
スタック 値 取り除く	deq.remove(element)
散布 図 赤い ダイアモンドマーカー 使う	plt.plot(xdata, ydata, marker='D', c='r')
タイムスタンプデータ 日曜日 調べる	aDatetime.weekday() == 6
保存 する ファイル 小数点 以下 桁 数 指定 する	df.to_csv(filename, float_format='%.3f')
日付 時刻 データ 秒 求める	aDatetime.second
オプション グラフ 色 アクアマリン 設定 する	color = 'aquamarine'
イテラブル いつ 繰り返す	itertools.cycle(iterable)
リスト 配列 明るい 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
表 データ グループ 化 し 各 列 分散 求める	df.groupby(column)[column2].var()
個 要素 ある リスト	[element] * n
ヒストグラム 描画 し その 色 ライト ブルー 設定 する	plt.hist(データ列, color='lightblue')
グラフ 用途 画面 変更 する	sns.set(context='notebook')
オプション データ 型 指定 する	dtype = np.int8
オプション グラフ 色 ライト シアン 設定 する	color = 'lightcyan'
リスト リスト パステル 調 色 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
ファイル データ フレーム タブ 区切り 保存 する	df.to_csv(filename, sep='\t')
つ 文字 列 等しく ない 確認 する	s != s2
散布 図 カラー コード 左 三 角 マーカー 使っ 描く	plt.plot(xdata, ydata, marker='<', c=rgb)
ヒストグラム 描画 し 区間 数 設定 する	plt.hist(データ列, bins=n)
リスト 引数 展開 し プリント する	print(*aList)
表示 可能 な 列 数 最大 値 セット する	pd.set_option('display.max_columns', n)
セパレータ 文字 列 分割 し 文字 列 リスト 変換 する	s.split(sep)
オプション 色 ライト イエロー 指定 する	color = 'lightyellow'
数式 因数 分解 行う	sympy.factor(e)
次元 リスト 作る	[[0] * n for _ in range(n2)]
暗い グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
ミッドナイト ブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='midnightblue')
バージョン 表示 する	print(pd.__version__)
折れ線 グラフ 描画 し その 色 青 紫 設定 する	plt.plot(データ列, データ列2, color='violet')
カウンタ 低 頻度 な 方 リスト し 得る	aCounter.most_common()[::-1]
データ フレーム 列 つ 選択 する	df[[column, column2]]
リスト 配列 散布 図 描い バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='x', c=rgb)
ベクトル ベース 全 要素 配列	np.zeros_like(aArray)
折れ線 グラフ 一 点 鎖線 描画 する	plt.plot(データ列, データ列2, linestyle='dashbot')
色 差別 ない 色 ヒストグラム データ 列 描画 する	plt.hist(xdata, color='colorblind')
リスト リスト 散布 図 赤い 下 三角 マーカー プロット する	plt.plot(xdata, ydata, marker='v', c='r')
折れ線 グラフ 描画 し その 色 シスル 指定 する	plt.plot(データ列, データ列2, color='thistle')
オプション ミディアムターコイズ 色 用いる	color = 'mediumturquoise'
データ フレーム カラム 分散	df[col].var()
集合 イミュータブル な セット 変換 する	frozenset(aSet)
データ フレーム カラム 小数点 以下 桁 丸める	df[col].round(n)
リスト リスト 散布 図 プロット し その 大き さ 設定 する	plt.scatter(xdata, ydata, s=n)
オプション 出力 先 標準 エラー 設定 する	file = sys.stderr
ヒストグラム 描画 し その 色 耐火 レンガ 設定 する	plt.hist(データ列, color='firebrick')
折れ線 グラフ 星 印 線 幅 変更 する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
オプション 濃い シアン 色 設定 する	color = 'darkcyan'
ヒストグラム 描画 し その 色 ライトスレイグレー 指定 する	plt.hist(データ列, color='lightslategray')
グラフ カラー パレット パステル 調 する	sns.set(pallete='pastel')
折れ線 グラフ バツ 印 使用 する	plt.plot(データ列, データ列2, marker='x')
線 グラフ 色 ミディアムターコイズ 設定 する	plt.plot(データ列, データ列2, color='mediumturquoise')
配列 数列 散布 図 カラー コード 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c=rgb)
リスト リスト 散布 図 黒い 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c='k')
グラフ デザイン 綺麗 する	import seaborn as sns
列 一意 な 要素	ds.unique()
ラベンダー ヒストグラム 色 指定 する	plt.hist(データ列, color='lavender')
文字 列 リスト 含ま れ ない どう	element not in aList
配列 データ 列 カラー コード 色 差別 ない グラフ 描く	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
実 部 虚 部 複素数 用意 する	complex(x, y)
カラー コード 菱形 マーカー イテラブル データ 列 散布 図 描く	plt.plot(xdata, ydata, marker='D', c=rgb)
整数 乗 し 浮動 小数点 数 余り	pow(x, n, y)
折れ線 グラフ 描画 し その 色 サンディーブラウン 設定 する	plt.plot(データ列, データ列2, color='sandybrown')
データ フレーム 重複 見る	df.duplicated()
フォーマット 文字 列 辞書 変換 する	json.loads(jsonString)
複数 シート エクセルデータファイル 読む	pd.read_excel(filename, sheet_name=[n, n2])
散布 図 右 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='>')
ハロー ワールド 表示 する	print('Hello World')
散布 図 黒い バツ マーカー 用いる	plt.plot(xdata, ydata, marker='x', c='k')
折れ線 グラフ 描画 し その 色 紺碧 設定 する	plt.plot(データ列, データ列2, color='azure')
日付 時刻 データ 何時 知る	aDatetime.hour
リスト 要素 スワップ する	aList[i], aList[j] = aList[j], aList[i]
データ フレーム カラム タイム ゾーン 文字 列 設定 する	df[col].tz_convert(s)
タプル 要素 並べる	sorted(aTuple)
黒い 濃い グラフ プロット する	plt.plot(xdata, ydata, linestyle='deep', color='k')
データ 列 直後 値 埋める	ds.fillna(method='bfill')
折れ線 グラフ 描画 し マーカー 四角 印 する	plt.plot(データ列, データ列2, marker='s')
文字 列 両端 部分 文字 列 除去 する	s.strip(sub)
集合 補 集合 求める	aSet.difference(aSet2)
リスト リスト 青い 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
リスト データ 列 散布 図 カラー コード バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c=rgb)
カラム 位 丸め 整数 型 する	ds.round(-1).astype(int)
最後 追加 し た 項目 マッピング ポップ する	aDict.popitem()
線 グラフ 色 ダーク オリーブ グリーン 変更 する	plt.plot(データ列, データ列2, color='darkolivegreen')
イテラブル 文字 列 リスト 変換 し 改行 連結 する	'\n'.join(map(str, iterable))
実数 切り上げる	math.ceil(x)
コマンド 第 引数 確 め る	sys.argv[1]
ヒストグラム 描画 し その 色 バリーウッド 設定 する	plt.hist(データ列, color='burlywood')
透明 度 折れ線 グラフ プロット する	plt.plot(xdata, ydata, alpha=alpha)
部分 文字 列 文字 列 分け た とき 後半 文字 列 使う	s.partition(sub)[-1]
文字 列 中 正規 表現 マッチ し た 全て 文字 列 リスト 変換 する	re.findall(pattern, s)
リスト 全て 真	all(aList)
折れ線 グラフ 下 三角 印 大き さ 設定 する	plt.plot(データ列, データ列2, marker='v', markersize=n)
文字 列 大文字 小文字 交換 する	s.swapcase()
底 する 浮動 小数点 数 対数	math.log(x, k)
データ フレーム 列 ソート し 下 方 取り出す	df.sort_values(columns).tail(n)
進数 文字 列 バイト 列 変換 する	int(s, n).to_bytes(length=bytesize, byteorder='big')
折れ線 グラフ 描画 し 色 タン 設定 する	plt.plot(データ列, データ列2, color='tan')
軸 ラベル 付ける	plt.xlabel(untitled)
折れ線 グラフ 描画 し 色 ディムグレー 設定 する	plt.plot(データ列, データ列2, color='dimgrey')
データ フレーム インデックス 昇順 ソート する	df.sort_index(ascending=True)
データ 列 どの 値 頻出 見る	ds.mode()
折れ線 グラフ 色 シエナ 変更 する	plt.plot(データ列, データ列2, color='sienna')
データ フレーム 列 値 グループ 分け し それぞれ グループ ごと 合計 求める	df.groupby(column).sum()
最後 部分 文字 列 文字 列 分割 し た とき 前半 文字 列	s.rpartition(sub)[0]
書式 文字 列 タイム スタンプ 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
テキストファイル ファイル 名	filename.endswith('.txt')
赤い 三角 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='^', c='r')
オプション グラフ 色 ライト グレー 設定 する	color = 'lightgrey'
グレー ヒストグラム 色 する	plt.hist(データ列, color='grey')
データ フレーム リスト 列 欠損 値 後 行 値 設定 する	df[aList].fillna(method='bfill')
オプション ナバホホワイト 使用 する	color = 'navajowhite'
折れ線 ラベル つける	plt.plot(xdata, ydata, label=untitled)
グラフ 色 テーマ 濃く する	sns.set(pallete='deep')
折れ線 グラフ 描画 し その 色 ミディアムシアグリーン 設定 する	plt.plot(データ列, データ列2, color='mediumseagreen')
データ フレーム ファイル インデックス 付け ず 保存 する	df.to_csv(filename, index=None)
リスト 数列 散布 図 下 三角 マーカー 描く	plt.plot(xdata, ydata, marker='v')
折れ線 グラフ 描画 し その 色 コーンズシルク 設定 する	plt.plot(データ列, データ列2, color='cornsilk')
暗い 色 赤く する	plt.plot(xdata, ydata, linestyle='dark', color='r')
カラム 位 丸め 整数 型 する	ds.round(-3).astype(int)
ヒストグラム 描画 し その 色 オレンジ 設定 する	plt.hist(データ列, color='orange')
重 見やすく 淡い 色 用い リスト 数列 散布 図 描画 する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
オプション ダーク カーキ 使う	color = 'darkkhaki'
変数 無限 大 近づく 時 数式 極限 値 求める	sympy.limit(e, z, oo)
ヒストグラム 描画 し 色 ライト シアン 変更 する	plt.hist(データ列, color='lightcyan')
小数点 数 逆 余弦	math.acos(x)
ファイル 読み込み モード オープン し する	f = open(filepath, mode='r')
折れ線 グラフ 緑色 丸 マーカー 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
辞書 項目 名 要素 する	aDict[key] = element
ヒストグラム 色 ダークマゼンタ 設定 する	plt.hist(データ列, color='darkmagenta')
グラフ 点線 付ける	plt.axvline(x=0, linestyle='dotted')
エクセルファイルファイル 読む	pd.read_excel(filename)
割り切れ ない 調べる	n % n2 != 0
カラム データ フレーム グループ 化 し それぞれ グループ ごと 個数 計算 する	df.groupby(column).count()
ヒストグラム 色 ダーク サーモン 設定 する	plt.hist(データ列, color='darksalmon')
折れ線 グラフ 描画 し その 色 マルーン 設定 する	plt.plot(データ列, データ列2, color='maroon')
文字 列 日付 データ する	pd.to_datetime(s)
イテラブル 長 さ 順列	itertools.permutations(iterable, n)
折れ線 グラフ 三角 マーカー 赤く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
オプション 文字 列 区切り 使う	sep = s
エクセルファイル データ フレーム 読み込む	pd.read_excel(filename)
データ フレーム 列 消す	df.drop(column, axis=1)
データ フレーム 列 と列 重複 あれ 削除 する	df.drop_duplicates(subset=column)
追加 できる よう ファイル オープン する	open(filepath, mode='a')
カラム 名前 一覧 見る	df.columns
データ フレーム ヒートマップ 描画 する	sns.heatmap(df.corr())
淡い 色 折れ線 グラフ 描画 し その 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n, color='muted')
プラットホーム 名前	sys.platform
オブジェクト 数値	isinstance(obj, (int,float))
度数 分布 図 ビン 設定 する	plt.hist(データ列, bins=n)
年 月 日付 変換 する	datetime.date(year=year, month=month, day=1)
データ フレーム 列 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(column)]
データ フレーム カラム ドロップ し 入れ替える	df.drop(column, axis=1, inplace=True)
逆数 求める	math.asinh(x)
リスト 横 軸 指定 し 折れ線 描く	plt.plot(range(len(xdata)), xdata)
ヒストグラム 色 ローン グリーン 指定 する	plt.hist(データ列, color='lawngreen')
折れ線 グラフ 色 暗い 赤 設定 する	plt.plot(データ列, データ列2, color='darkred')
黄色い バツ 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線 グラフ 青い 印 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
データ フレーム 列 以上 かつ 未満 行 取り出す	df[(x <= df[column]) & (df[column] < x2)]
昇順 データ フレーム 列 用い ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
ヒストグラム 描画 し その 色 コーンフラワーブルー する	plt.hist(データ列, color='cornflowerblue')
折れ線 グラフ 色 ダーク シアン 変更 する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線 グラフ 描画 し その 色 ティール 指定 する	plt.plot(データ列, データ列2, color='teal')
オプション 使用 する	encoding = 'utf-8'
実数 逆 余弦 計算 する	math.acos(x)
ファイル パス 付き 使っ 開く	open(filepath, encoding='utf_8_sig')
プログラム 実行 異常 止める	sys.exit(1)
箱 ひ げ 図 二つ 並べる	plt.boxplot([データ列, データ列2])
リスト リスト 接続 する	aList + aList2
グラフ 画面 用 指定 する	sns.set(context='notebook')
アクア 色 ヒストグラム 描画 する	plt.hist(データ列, color='aqua')
折れ線 グラフ 色 ライト ブルー 設定 する	plt.plot(データ列, データ列2, color='lightblue')
既存 ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding='utf-8')
文字 列 右側 余分 な 改行 除去 する	s.rstrip()
カーキ ヒストグラム 色 設定 する	plt.hist(データ列, color='khaki')
二つ データ フレーム 横 方向 連結 する	pd.concat([df, df2], axis=1)
ヒストグラム 色 ライトグリーン 変更 する	plt.hist(データ列, color='lightgreen')
データ 列 イン ポート する	import pandas as pd
書き込み 用 ファイル オープン する	open(filepath, mode='w', encoding='shift_jis')
ヒストグラム 描画 し その 色 オレンジ レッド 設定 する	plt.hist(データ列, color='orangered')
ファイル オープン し バイナリ ストリーム 使う	open(filepath, mode='rb')
文字 列 無限 続く イテラブル	itertools.repeat(element)
ファイル フォルダ 名 ファイル 名 分割 する	os.path.split(filepath)
折れ線 グラフ 描画 し その 色 フローラルホワイト 設定 する	plt.plot(データ列, データ列2, color='floralwhite')
データ 列 分割 数 ビン 分割 し ラベル つける	pd.cut(ds, n, labels=names)
リスト リスト 明るい 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
ダークターコイズ 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkturquoise')
オプション エン コーディング 設定 する	encoding = 'utf-8'
正規 表現 文字 列 先頭 限定 マッチ さ せる	re.match(pattern, s, flags=re.ASCI)
データ 列 ラベル 指定 し 縦 棒グラフ 描画 する	plt.bar(ラベル列, データ列)
形式 ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
日付 データ 水曜日 どう 調べる	aDate.weekday() == 2
横 棒グラフ プロット し 中央 寄せ する	plt.barh(ラベル列, データ列, align='center')
イテラブル 文字 列 リスト 変換 し 部分 文字 列 結合 する	sub.join(map(str, iterable))
文字 列 中 日本語 含ま れる 調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
オブジェクト バイト 列 クラス 調べる	isinstance(obj, bytes)
ふたつ 関係 真 上位 集合 テスト する	aSet > aSet2
イテラブル リスト 淡い 折れ線 グラフ プロット し その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
符号 なし ビット 整数 型 ゼロ 埋め さ れ た ベクトル 作成 する	np.zeros(要素数, dtype=np.uint8)
オプション ミディアムバイオレットレッド 色 使う	color = 'mediumvioletred'
データ フレーム カラム 百 位 丸め 整数 する	df[col].round(-2).astype(int)
リスト 数列 散布 図 黒い ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.', c='k')
折れ線 グラフ 黄色い ポイント 印 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
ヒストグラム 描画 し その 色 モカシン 設定 する	plt.hist(データ列, color='moccasin')
スピアマン データ フレーム 列 列 相関 行列 計算 する	df[[column, column2]].corr(method='spearman')
ヒストグラム 描画 し その 色 コーンフラワーブルー 設定 する	plt.hist(データ列, color='cornflowerblue')
データ フレーム カラム 中 文字 列 ある	df[col].isin([value])
折れ線 グラフ 線 幅 四角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
データ フレーム リスト カラム 空文字 欠損 値 変換 し ドロップ する	df[aList].replace('', np.nan).dropna()
データ 列 時 見る	ds.dt.hour
折れ線 グラフ 描画 し その 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightseagreen')
ファイル 読み込む	pd.read_csv(filename, encoding='shift_jis')
ヒストグラム 二つ 並べ 描画 する	plt.hist([データ列, データ列2], color=['b', 'r'])
データ フレーム インデックス 用い 昇順 ソート する	df.sort_index(ascending=True)
データ フレーム メディアン	df.median()
オプション 色 ピーチ パフ 設定 する	color = 'peachpuff'
折れ線 グラフ 点線 描画 する	plt.plot(データ列, データ列2, linestyle='dotted')
明るい グラフ 色 赤 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
色 差別 ない グラフ 色 カラー コード 変更 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
ファイル データ フレーム 保存 する	df.to_csv(filename, encoding='shift_jis')
ヒストグラム 色 マゼンタ 設定 する	plt.hist(データ列, color='magenta')
辞書 階層 化 する	collections.ChainMap(aDict, aDict2)
カラー コード 横 棒グラフ 色 変更 する	plt.barh(ラベル列, データ列, color=rgb)
オプション 色 シーグリーン セット する	color = 'seagreen'
オブジェクト フィールド 値 値 指定 する	setattr(obj, プロパティ名, 値)
倍数 調べる	n % 3 == 0
ヒストグラム 色 ミディアムターコイズ 設定 する	plt.hist(データ列, color='mediumturquoise')
データ フレーム カラム 未 入力 値 最大 値 埋める	df[col].fillna(df[col].max())
集合 変更 不能 変換 する	frozenset(aSet)
形式 バイト 列 辞書 する	json.loads(b.decode('unicode-escape'))
列 降順 破壊 的 データ フレーム ソート する	df.sort_values(by=column, ascending=False, inplace=True)
文字 列 リスト 列 変換 し 改行 一つ する	'\n'.join(map(str, iterable))
以下 調べる	n <= n2
リスト リスト 色 差別 ない グラフ 描い その 色 青 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リスト ヒストグラム する	plt.hist(aList)
偶数 調べる	n % 2 == 0
オプション 暗い 赤 使う	color = 'darkred'
折れ線 グラフ 大 バツ 印 加える	plt.plot(データ列, データ列2, marker='X')
ヒストグラム 描画 し その 色 スノー 設定 する	plt.hist(データ列, color='snow')
集合 リスト 変換 する	list(aSet)
タプル 平均 値	sum(aTuple)/len(aTuple)
リスト リスト 折れ線 描画 し 色 文字 列 設定 する	plt.plot(xdata, ydata, color=s)
グラフ 用途 論文 指定 する	sns.set(context='paper')
折れ線 グラフ 描画 し その 色 コーラル セット する	plt.plot(データ列, データ列2, color='coral')
パープル 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='purple')
棒グラフ 色 指定 する	plt.bar(ラベル列, データ列, color=rgb)
二つ オブジェクト 同じ 参照 確認 する	obj is obj2
オプション グラフ 色 ラベンダー ブラッシュ 設定 する	color = 'lavenderblush'
アクアマリン ヒストグラム 色 指定 する	plt.hist(データ列, color='aquamarine')
データ 列 位 丸める	ds.round(-1)
リスト 数列 折れ線 グラフ 描画 し その 色 カラー コード 変更 する	plt.plot(xdata, ydata, color=rgb)
データ 列 度数 分布 図 する	plt.hist(ds)
線 グラフ 色 ピーチ パフ 設定 する	plt.plot(データ列, データ列2, color='peachpuff')
データ フレーム 重複 し た 行 削除 する	df.drop_duplicates()
線 グラフ 色 淡い 茶色 セット する	plt.plot(データ列, データ列2, color='tan')
最後 部分 文字 列 文字 列 分け た とき 先頭 文字 列	s.rpartition(sub)[0]
一 桁 数 確認 する	0 <= n <= 9
カンマ 文字 列 区切っ 列挙 する	s.split(',')
散布 図 黒色 左 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='<', c='k')
個 集まり 個 重複 なく 選ぶ 方法	math.comb(n, k)
エクセルファイルファイル 名前 シート データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
空 カウンタ 用意 する	collections.Counter()
データ フレーム 列 値 まとめ た グループ	df.groupby(['A', 'B'])
線 グラフ 描画 し その 色 ゲインズボロ 設定 する	plt.plot(データ列, データ列2, color='gainsboro')
ドジャーブルー ヒストグラム 色 設定 する	plt.hist(データ列, color='dodgerblue')
表 見る	df.head()
整数 二 進 表記 変換 する	bin(n)
データ 列 リスト 境界 値 ビン 分割 する	pd.cut(ds, aList)
リスト 全て 要素 取り除く	aList.clear()
ファイル 書き込み ストリーム オープン し する	f = open(filepath, mode='w')
菱形 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='D')
折れ線 グラフ 色 ミディアムスプリンググリーン セット する	plt.plot(データ列, データ列2, color='mediumspringgreen')
データ フレーム 中 ある 文字 列 日付 データ 数 数える	df.isin([value, value2]).sum()
データ フレーム 破壊 的 列 で ソート する	df.sort_values(by='A', inplace=True)
オプション ゴールド 色 使用 する	color = 'gold'
パラメータ 近づく とき 数値 極限 値 算出 する	sympy.limit(e, z, 0)
折れ線 グラフ 描画 し その 色 ベージュ 設定 する	plt.plot(データ列, データ列2, color='beige')
折れ線 グラフ 色 耐火 レンガ 設定 する	plt.plot(データ列, データ列2, color='firebrick')
ヒストグラム 描画 し 色 パパイヤウィップ 設定 する	plt.hist(データ列, color='papayawhip')
度数 分布 図 描画 し 正規 化 する	plt.hist(データ列, density=True)
データ フレーム ファイル 読み込む	pd.read_csv(filename, sep=',')
リスト リスト 散布 図 赤色 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c='r')
データ フレーム カラム 位 丸め 整数 型 する	df[col].round(-1).astype(int)
折れ線 グラフ 緑色 クロス マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
リスト 配列 散布 図 ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D')
リスト 要素 昇順 ソート する	sorted(aList, reverse=False)
浮動 小数点 数 数 割っ た 余り	x % y
行列 行 ごと 分散	np.var(aArray, axis=1)
折れ線 グラフ 描画 し その 色 スチール ブルー 指定 する	plt.plot(データ列, データ列2, color='steelblue')
リスト 配列 散布 図 マーカー 描画 する	plt.plot(xdata, ydata, marker='^')
データ フレーム 列 かつ 列 で ある 行 抽出 する	df[(df[column] == x) & (df[column2] == x2)]
データ フレーム 複数 列 値 グループ 化 する	df.groupby(columns)
文字 列 太 文字 プリント できる 文字 列 変換 する	f'\033[1m{value}\033[0m'
配列 ヒストグラム 暗い 色 描く	plt.hist(xdata, color='dark')
リスト リスト 折れ線 グラフ 描画 し 透明 度 変更 する	plt.plot(xdata, ydata, alpha=alpha)
列 出現 回数 し カウンタ 更新 する	aCounter.update(iterable)
配列 間 要素 ごと 最大公約数 求める	np.gcd(aArray, aArray2)
赤色 バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
データ フレーム インデックス 行 抽出 する	df.loc[n]
リスト リスト 散布 図 描き マーカー 左 三 角 設定 する	plt.plot(xdata, ydata, marker='<')
色 差別 ない 色 散布 図 重なり 見やすく 描画 する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
オプション スプリング グリーン 色 用いる	color = 'springgreen'
グラフ 点線 設定 する	plt.axvline(x=0, linestyle='dotted')
ヒストグラム 描画 し その 色 淡い 茶色 セット する	plt.hist(データ列, color='tan')
プロット プレゼン 用 設定 する	sns.set(context='talk')
耐火 レンガ 色 ヒストグラム 描画 する	plt.hist(データ列, color='firebrick')
ヒストグラム 色 コーンズシルク 設定 する	plt.hist(データ列, color='cornsilk')
ミディアムバイオレットレッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='mediumvioletred')
文字 列 走査 し 正規 表現 マッチ する 見る	re.search(pattern, s)
データ フレーム 列 ごと グループ 化 し 個数 計算 する	df.groupby(column).count()
文字 列 空白 用い 分割 する	s.split()
データ フレーム 行 サンプリング する	df.sample(n)
ファイル 書き込み できる よう オープン する	open(filepath, mode='w')
データ フレーム カラム 欠損 値 最小 値 設定 する	df[col].fillna(df[col].min())
データ フレーム カラム 中 文字 列 文字 列 いくつ ある カウント する	df[col].isin([value, value2]).sum()
列 集合	set(iterable)
ふたつ 集合 共通 要素 持た ない テスト する	aSet.isdisjoint(aSet2)
ふたつ リスト 共 通り スト	list(set(aList) & set(aList2))
三 乗	n ** 3
ファイル パス 追加 モード 開く	open(filepath, mode='a')
文字 列 リスト 連結 する	''.join(aStringList)
黒い 菱形 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='D', c='k')
オプション 文字 コード 使用 する	encoding = text
データ フレーム カラム 中 ある 日付 データ 合計 数える	df[col].isin([value]).sum()
オプション 色 赤 設定 する	color = 'red'
データ 列 位 四捨五入 し 整数 型 する	ds.round(-2).astype(int)
データ フレーム 列 正規 表現 文字 列 マッチ する 行 抽出 する	df[df[column].str.match(s)]
パステル 調 色 ヒストグラム 配列 描画 する	plt.hist(xdata, color='pastel')
集合 イテラブル 追加 更新 する	aSet.update(iterable)
文字 列 白色 プリント できる 文字 列 変換 する	f'\033[37m{value}\033[0m'
桁 数	len(str(n))
ヒストグラム 色 コーンフラワーブルー 変更 する	plt.hist(データ列, color='cornflowerblue')
最大 長 両端 キュー リスト 用意 する	collections.deque(iterable, maxlen=n)
配列 データ 型	aArray.dtype()
表 データ 小さい 順 列 ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
折れ線 グラフ 描画 し その 色 レモン シフォン 設定 する	plt.plot(データ列, データ列2, color='lemonchiffon')
明るい 色 散布 図 描く	plt.plot(xdata, ydata, c='bright')
ヒストグラム 色 黄色 設定 する	plt.hist(データ列, color='yellow')
タプル 番号 付け する	enumerate(aTuple, start=n)
ヒストグラム 描画 し その 色 アリスブルー 変更 する	plt.hist(データ列, color='aliceblue')
タイムスタンプデータ 秒 分 減算 する	aDatetime - datetime.timedelta(seconds=n)
本日 火曜日	datetime.datetime.today().weekday() == 1
色 全般 的 パステル 調 する	sns.set(pallete='pastel')
行列 逆 行列	np.linalg.inv(aArray)
ファイル パス 拡張 子 付き ファイル 名 見る	os.path.basename(filepath)
グラフ 凡例 位置 指定 する	plt.legend(loc=(x, y))
データ フレーム 値 まとめ 正規 表現 置換 する	df.replace(pattern, repl, regex=True)
数 小数点 以下 丸める	round(x, n)
データ フレーム 列 列 相関 行列	df[[column, column2]].corr()
散布 図 バツ マーカー 用い 描画 する	plt.plot(xdata, ydata, marker='x')
文字 列 ユニコードエスケープ バイト 列 する	s.encode(encoding='unicode_escape')
グラフ 色 設定 する	sns.set(pallete=palleteName)
サドル ブラウン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='saddlebrown')
オプション ホット ピンク色 用いる	color = 'hotpink'
オプション ベージュ 色 使用 する	color = 'beige'
配列 リスト 折れ線 グラフ 文字 列 色 描画 する	plt.plot(xdata, ydata, color=s)
折れ線 グラフ 色 パールバイオレットレッド セット する	plt.plot(データ列, データ列2, color='palevioletred')
等間隔 個 リスト 分割 し ラベル つける	pd.cut(aList, n, labels=names)
オプション レベッカパープル 用いる	color = 'rebeccapurple'
カウンタ タプル 使っ 更新 する	aCounter.update(aDict)
イテラブル リスト 散布 図 赤い 丸 マーカー プロット する	plt.plot(xdata, ydata, marker='o', c='r')
列 値 データ フレーム グループ 化 し 要約 統計 量 算出 する	df.groupby(column).describe()
ヒストグラム 描画 し 色 スノー 設定 する	plt.hist(データ列, color='snow')
データ フレーム カラム 日付 データ 変換 し インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
データ フレーム カラム 値 正規 表現 まとめ 置き換える	df[col].replace(pattern, repl, regex=True)
グラフ 破線 設定 する	plt.axhline(y=0, linestyle='dashed')
リスト ナンバリング する	enumerate(aList)
データ 列 空文字 ドロップ する	ds.replace('', np.nan).dropna()
オプション ダーク グリーン グラフ 色 変更 する	color = 'darkgreen'
データ フレーム 列 文字 列 終わる 行 抽出 する	df[df[column].str.endswith(s)]
文字 列 回 続く イテラブル	itertools.repeat(element, n)
赤い バツ マーカー 配列 配列 散布 図 プロット する	plt.plot(xdata, ydata, marker='x', c='r')
グラフ 描画 する 準備 する	from sympy import N
オプション バッファリング サイズ 変更 する	buffering = 4096
データ 列 千 位 丸める	ds.round(-3)
リスト 色 差別 ない 色 ヒストグラム 描画 する	plt.hist(xdata, color='colorblind')
リスト リスト 散布 図 描い 大 バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='X', c=rgb)
整数 十 六 進数 表現 変換 する	hex(n)
リスト イテラブル 散布 図 黒い 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c='k')
整数 進 リテラル	hex(n)
パステル 調 グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
データ フレーム 列 で 降順 ソート する	df.sort_values(by='A', ascending=False)
折れ線 グラフ 描画 し その 色 黄 緑 設定 する	plt.plot(データ列, データ列2, color='chartreuse')
文字 列 同じ で ない	s != s2
範囲 ヒストグラム 用い リスト 描画 する	plt.hist(データ列, range=(start, end))
二 次元 リスト	[[0] * n for _ in range(n2)]
オプション グラフ 色 スレート ブルー セット する	color = 'slateblue'
データ フレーム リスト 指定 さ れ た 列 各 列 間 相関 係数	df[aList].corr()
ローン グリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='lawngreen')
文字 列 番目 求める	s[n]
正弦	math.sin(x)
列 歪 度 求める	ds.kurt()
インデント 幅 辞書 形式 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, indent=n)
データ フレーム リスト カラム 中 いくつ 欠損 値 存在 する 数える	df[aList].isna().sum()
折れ線 グラフ 描画 し その 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgray')
列 と列 キー し 二つ データ フレーム 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
リスト 配列 散布 図 赤色 ダイアモンドマーカー 描く	plt.plot(xdata, ydata, marker='D', c='r')
折れ線 グラフ 描画 し その 色 インディアン レッド 変更 する	plt.plot(データ列, データ列2, color='indianred')
折れ線 グラフ 黒い 星 マーカー 描画 する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
データ 列 リスト 散布 図 描画 し 色 暗い 指定 する	plt.plot(xdata, ydata, c='dark')
データ フレーム 列 列 並べる	df.sort_values(by=['A', 'B'])
データ フレーム リスト カラム 正規 分布 上下 広がり	df[aList].skew()
変数 マイナス 無限 大 近づく とき 数式 極限 値 求める	sympy.limit(e, z, -oo)
現在 タイム スタンプ	int(time.time())
オプション 読み込む シート 名 設定 する	sheet_name = names
黒色 色 差別 ない グラフ 描く	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
要素 セット 含ま れる	element in aSet
書き込み 用 付き ファイル 開く	open(filepath, mode='w', encoding='utf_8_sig')
ベクトル 内積	np.dot(aArray, aArray2)
折れ線 グラフ 描画 し その 色 アイボリー 設定 する	plt.plot(データ列, データ列2, color='ivory')
文字 列 中 部分 文字 列 含ま れ ない どう 調べる	sub not in s
オプション シーグリーン 色 用いる	color = 'seagreen'
折れ線 グラフ 青い 四角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
インタプリタ 実行 ファイル 絶対 パス	sys.executable
線 グラフ 色 ホット ピンク 設定 する	plt.plot(データ列, データ列2, color='hotpink')
全 要素 初期 化 さ れ た 整数 型 行列 作成 する	np.zeros(行数, 列数, dtype=np.int)
データ フレーム リスト カラム 欠損 値 最小 値 置換 する	df[aList].fillna(df[aList].min())
列 出現 回数 し カウンタ 引く	aCounter.subtract(iterable)
年 月 日付 時刻 する	datetime.datetime(year=year, month=month, day=1)
個 データ 列 ビン 分割 し ラベル つける	pd.cut(ds, n, labels=names)
ファイル ストリーム 読み込み する	file = open(filepath)
データ フレーム 列 名 複数 指定 し 選択 する	df[columns]
方程式 数式 変数 解 算出 する	sympy.solve(e, z)
データ フレーム カラム インデックス する	df.set_index(col, inplace=True)
配列 リスト 暗い グラフ 描い 色 黒 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
線 グラフ 描画 し その 色 パールバイオレットレッド セット する	plt.plot(データ列, データ列2, color='palevioletred')
ヒストグラム 描画 し その 色 オーキッド セット する	plt.hist(データ列, color='orchid')
二つ 文字 列 ケース 無視 し 比較 する	s.casefold() < s2.casefold()
折れ線 グラフ 描画 し 色 パウダー ブルー 設定 する	plt.plot(データ列, データ列2, color='powderblue')
折れ線 グラフ 描画 し 色 パープル 設定 する	plt.plot(データ列, データ列2, color='purple')
折れ線 グラフ 描画 し その 色 スノー 設定 する	plt.plot(データ列, データ列2, color='snow')
オプション グラフ 色 シスル 変更 する	color = 'thistle'
日付 データ 日付 データ 先 どう 調べる	aDate < aDate2
マッピング フォーマット 出力 ストリーム 保存 する	json.dump(aDict, fout, ensure_ascii=False)
オプション ゴースト ホワイト グラフ 色 設定 する	color = 'ghostwhite'
折れ線 グラフ 色 ブルー バイオレット 設定 する	plt.plot(データ列, データ列2, color='blueviolet')
範囲 指定 し 整数 乱数 求める	random.randint(最小値, 最大値)
ヒストグラム 色 スラグレー する	plt.hist(データ列, color='slategrey')
スピアマン データ フレーム リスト カラム 相関 行列	df[aList].corr(method='spearman')
赤い 上 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
ピアソン 相関 係数 データ フレーム 列 列 相関 行列	df[[column, column2]].corr(method='pearson')
偶整数 列	list(range(2, n, 2))
データ フレーム 行 振り 直す	df.reset_index()
オプション エン コーディング 文字 コード 設定 する	encoding = text
オプション プラム 用いる	color = 'plum'
濃い グラフ 色 黒く する	plt.plot(xdata, ydata, linestyle='deep', color='k')
データ フレーム 各 列 毎 グループ 化 し 文字 列 グループ 大き さ 求める	df.groupby(column).size()[s]
疑似 乱数	random.random()
二つ 列 用い 表 データ 破壊 的 ソート する	df.sort_values(by=['A', 'B'], inplace=True)
リスト 柱状 グラフ 可視 化 する	plt.hist(aList)
データ フレーム 欠損 値 平均 値 設定 する	df.fillna(df.mean())
ヒストグラム 描画 し 色 コーンフラワーブルー 設定 する	plt.hist(データ列, color='cornflowerblue')
数列 データ 列 散布 図 描い 大 バツ マーカー 色 カラー コード セット する	plt.plot(xdata, ydata, marker='X', c=rgb)
リスト 配列 折れ線 グラフ プロット し ラベル付け する	plt.plot(xdata, ydata, label=untitled)
本日 土曜日 確認 する	datetime.datetime.today().weekday() == 5
折れ線 グラフ マーカー クロス する	plt.plot(データ列, データ列2, marker='x')
ヒストグラム 色 ライト シアン 指定 する	plt.hist(データ列, color='lightcyan')
データ 列 リスト 青色 パステル 調 の 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
わる	n / n2
オプション グラフ 種類 一 点 鎖線 設定 する	linestyle = 'dashbot'
折れ線 グラフ 黄色い ダイアモンド 印 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
オプション 線 種 点線 セット する	linestyle = 'dotted'
浮動 小数点 数 変換 する	float(x)
データ フレーム それぞれ グループ ごと 合計	df.groupby(column).sum()
淡い 色 リスト ヒストグラム 描画 する	plt.hist(xdata, color='muted')
赤い 菱形 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='D', c='r')
全 要素 初期 化 さ れ た 三 二 ビット 整数 型 行列	np.zeros(行数, 列数, dtype=np.int16)
オプション ディムグレー 色 使う	color = 'dimgrey'
ヒストグラム 描画 し 色 ダーク バイオレット 指定 する	plt.hist(データ列, color='darkviolet')
データ フレーム それぞれ グループ 毎 平均 値	df.groupby(column).mean()
全 要素 初期 化 さ れ た ベクトル	np.zeros(要素数)
データ フレーム つ 列 用い 小さい 順 並べる	df.sort_values(by=['A', 'B'], ascending=True)
タプル 先頭 除く	aTuple[1:]
データ フレーム 未 入力 値 直後 値 埋める	df.fillna(method='bfill')
タン 色 ヒストグラム 描画 する	plt.hist(データ列, color='tan')
カラー バー 水平 描画 する	plt.colorbar(orientation='horizontal')
オプション 使う	encoding = 'euc_jp'
大きく かつ 未満 調べる	n < n2 and n2 < n3
折れ線 グラフ 大 バツ 印 サイズ 設定 する	plt.plot(データ列, データ列2, marker='X', markersize=n)
ヒストグラム 描画 し 色 チョコレート 変更 する	plt.hist(データ列, color='chocolate')
折れ線 グラフ 色 黄色 設定 する	plt.plot(データ列, データ列2, color='yellow')
両端 キュー 先頭 列 要素 追加 する	deq.extendleft(iterable)
配列 リスト 散布 図 ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.')
タイムスタンプデータ タイムスタンプデータ あと どう 調べる	aDatetime > aDatetime2
タプル コピー する	aDict.copy()
オプション グラフ 色 アリスブルー 設定 する	color = 'aliceblue'
折れ線 グラフ ダイアモンドマーカー 黄色く する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
全 要素 初期 値 初期 化 さ れ た ベクトル 作る	np.full(要素数, 初期値, dtype=np.int)
ケン ドール 相関 係数 データ フレーム 列 列 相関 行列	df[[column, column2]].corr(method='kendall')
データ 列 最小 値 設定 する	ds.fillna(ds.min())
暗い 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
配列 配列 青い 暗い グラフ プロット する	plt.plot(xdata, ydata, linestyle='dark', color='b')
ベスト な 位置 凡例 入れる	plt.legend(loc='best')
ヒストグラム 色 シアン 設定 する	plt.hist(データ列, color='cyan')
配列 等しい 量 なる よう ビン 数 使っ ビン 分割 する	pd.qcut(aArray, n)
文字 列 末尾 使う	s[-1]
オプション 紺 用いる	color = 'darkblue'
データ フレーム 複数 列 並べ 直す	df.sort_values(by=column)
昨日 日付	datetime.date.today() - datetime.timedelta(days=1)
ピンク ヒストグラム 色 設定 する	plt.hist(データ列, color='deeppink')
オプション ディムグレー 色 用いる	color = 'dimgrey'
データ 列 折れ線 グラフ 描画 し マーカー バツ 印 する	plt.plot(データ列, データ列2, marker='x')
データ フレーム 存在 する 行 削除 する	df.dropna()
既存 ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding='utf-8')
データ 列 折れ線 グラフ 描画 し マーカー 左 三 角 印 する	plt.plot(データ列, データ列2, marker='<')
折れ線 グラフ 色 茶色 変更 する	plt.plot(データ列, データ列2, color='brown')
折れ線 グラフ 色 ダーク オレンジ 設定 する	plt.plot(データ列, データ列2, color='darkorange')
型 名前 付き タプル	issubclass(C, tuple)
線 グラフ 描画 し その 色 ライトゴールドロディイエロー 変更 する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
文字 列 開始 位置 終了 位置 間 部分 文字 列 ある	s.find(sub, start, end) != -1
年 月 日 時 分 日付 時刻	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
データ フレーム リスト カラム 正規 分布 どの 程度 歪ん いる 見る	df[aList].kurt()
オプション レベッカパープル 色 設定 する	color = 'rebeccapurple'
データ フレーム リスト カラム 標本 標準 偏差	df[aList].std()
データ フレーム 重複 し いる	df.duplicated()
文字 ユニ コード	ord(ch)
オプション 丸 マーカー 使う	marker = 'o'
折れ線 グラフ ラベル 指定 する	plt.plot(xdata, ydata, label=untitled)
大きい	n > n2
倍数	n % 3 == 0
データ フレーム 列 名前 一覧 使う	df.columns
ドジャーブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='dodgerblue')
十 六 進 文字 列 バイト 列 変換 する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
ヒストグラム 描画 し その 色 リネン 設定 する	plt.hist(データ列, color='linen')
ヒストグラム 描画 し その 色 オリベドラブ する	plt.hist(データ列, color='olivedrab')
折れ線 グラフ 三角 マーカー 使う	plt.plot(データ列, データ列2, marker='^')
散布 図 パステル 調 色 描画 する	plt.plot(xdata, ydata, c='pastel')
折れ線 グラフ 下 三角 マーカー 黒く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
赤い 右 三 角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='>', c='r')
二つ データ フレーム 横 方向 マージ する	pd.merge(df, df2)
集合 列 要素 全て 追加 する	aSet.update(iterable)
データ 列 日付 データ 変換 する	pd.to_datetime(ds)
既存 ファイル パス 使っ 追加 できる よう オープン する	open(filepath, mode='a', encoding='utf-8')
文字 列 開始 位置 以降 部分 文字 列 始まる どう 調べる	s.startswith(sub, start)
リスト データ 列 折れ線 グラフ 描き ラベル付け する	plt.plot(xdata, ydata, label=untitled)
データ フレーム カラム タイム ゾーン 日本 設定 する	df[col].tz_convert('Asia/Tokyo')
列 長 さ 順列	itertools.permutations(iterable, n)
本日 土曜日 調べる	datetime.datetime.today().weekday() == 5
二つ リスト スラッシュ 区切っ 表示 する	print(value, value2, sep='/')
パステル 調 色 リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, c='pastel')
データ フレーム エポック 秒 日付 データ する	pd.to_datetime(df[col], unit='s', utc=True)
空文字 使う	''
インプレイス データ フレーム 行 目 削除 する	df.drop(n, axis=0, inplace=True)
オプション マルーン 色 使う	color = 'maroon'
本日 形式 文字 列 変換 する	datetime.datetime.today().isoformat()
各 列 毎 データ フレーム グループ 化 し 列 平均 値 求める	df.groupby(column)[column2].mean()
折れ線 グラフ ポイント マーカー 大き さ セット する	plt.plot(データ列, データ列2, marker='.', markersize=n)
フォーマット データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], format='%Y-%m-%d')
ヒストグラム 色 ミディアムスレートブルー する	plt.hist(データ列, color='mediumslateblue')
日付 データ 日付 データ 後ろ どう 確認 する	aDate > aDate2
ラベル付け し イテラブル 配列 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, label=untitled)
データ フレーム グループ 化 し それぞれ 列 合計 算出 する	df.groupby(column)[column2].sum()
データ フレーム カラム タイム スタンプ 型 変換 し データ フレーム インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
文字 列 末尾 部分 文字 列 区切る	s.rsplit(sub)
折れ線 グラフ 星 印 黄色く する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
箱 ひ げ 図 つ 並べて 描く	plt.boxplot([データ列, データ列2])
ヒストグラム 描画 し その 色 ミディアムスレートブルー 設定 する	plt.hist(データ列, color='mediumslateblue')
エクセルデータファイル 番目 シート データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
淡い 色 マーカー 重 見やすく 散布 図 描画 する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
ヒストグラム 色 イエロー グリーン 設定 する	plt.hist(データ列, color='yellowgreen')
オプション ローン グリーン 色 使う	color = 'lawngreen'
グラフ タイトル 設定 する	plt.title(untitled)
レベッカパープル 色 ヒストグラム 描画 する	plt.hist(データ列, color='rebeccapurple')
ヒストグラム 破線 描画 する	plt.hist(データ列, linestyle='dashed')
データ 列 ユニーク な 値	ds.unique()
データ フレーム リスト カラム 欠損 値 中央 値 設定 する	df[aList].fillna(df[aList].median())
データ フレーム 列 ドロップ する	df.drop(column, axis=1)
色 差別 ない グラフ 色 赤 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
リスト 数列 青い パステル 調 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
小数点 数 自然 対数 求める	math.log(x)
リスト 数列 明るい 色 折れ線 グラフ 描き 線 幅 セット する	plt.plot(xdata, ydata, linewidth=n, color='bright')
プラットホーム マック	sys.platform.startswith('darwin')
文字 列 エン コーディング バイト 列 変換 する	s.encode(encoding=encoding)
文字 列 リスト 要素 で ない	element not in aList
ヒストグラム 描画 し その 色 ミディアムオーキッド する	plt.hist(データ列, color='mediumorchid')
データ フレーム カラム 中 いくつ 欠損 値 存在 する カウント する	df[col].isna().sum()
折れ線 グラフ 大き さ 下 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markersize=n)
データ フレーム リスト カラム 欠損 値 置換 する	df[aList].fillna(x)
オプション グラフ 色 ティール 設定 する	color = 'teal'
折れ線 グラフ 緑色 下 三角 印 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
ヒストグラム 色 オールド レース 指定 する	plt.hist(データ列, color='oldlace')
オプション グラフ 色 サーモン 設定 する	color = 'salmon'
ヒストグラム 描画 し 色 オレンジ 指定 する	plt.hist(データ列, color='orange')
文字 列 中 大文字 小文字 無視 し パターン マッチ し た 全て 文字 列 リスト 変換 する	re.findall(pattern, s, flags=re.IGNORECASE)
オプション スノー 使用 する	color = 'snow'
オプション グラフ 色 シルバー 設定 する	color = 'silver'
有理数 用いる	import fractions
折れ線 グラフ 色 スレート ブルー 設定 する	plt.plot(データ列, データ列2, color='slateblue')
数列 リスト 黒色 淡い グラフ プロット する	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ フレーム 重複 し いる どう	df.duplicated()
オプション グラフ 色 ダークオーキッド 設定 する	color = 'darkorchid'
データ フレーム ファイル ヘッダ 付け ず 保存 する	df.to_csv(filename, header=None)
オプション グラフ 色 ローン グリーン 設定 する	color = 'lawngreen'
色 差別 ない グラフ データ 列 データ 列 描い その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
キュー 最初 リスト 各 値 つけ加える	deq.extendleft(iterable)
ファイル 拡張 子 変更 する	os.path.splitext(filepath)[0] + text
日付 時刻 データ 時間 分 減らす	aDatetime - datetime.timedelta(hours=n)
グラフ 凡例 入れる	plt.legend()
色 差別 ない 折れ線 グラフ 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
第 引数 指定 さ れ た ファイル 名前	sys.argv[1]
データ 列 曜日 名前	ds.dt.weekday_name
折れ線 グラフ 色 ダーク オリーブ グリーン 設定 する	plt.plot(データ列, データ列2, color='darkolivegreen')
データ フレーム カラム 曜日 何 日 目 調べる	df[col].dt.dayofweek
キー 辞書 存在 する 調べる	key in aDict
オプション ミディアムスレートブルー グラフ 色 変更 する	color = 'mediumslateblue'
リスト リスト 折れ線 カラー コード 描画 する	plt.plot(xdata, ydata, color=rgb)
浮動 小数点 数 複素数 する	complex(x)
線 グラフ 色 ライトスレイグレー 変更 する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線 グラフ 三角 マーカー 緑色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
データ 列 データ 列 散布 図 描画 し マーカー 色 濃い 設定 する	plt.plot(xdata, ydata, c='deep')
オプション 青色 使用 する	color = 'blue'
折れ線 グラフ 色 ダークスラテグレー 設定 する	plt.plot(データ列, データ列2, color='darkslategray')
エクセルデータファイル 読み込む	pd.read_excel(filename)
パラメータ 数式 積分 する	sympy.integrate(e, z)
紺碧 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='azure')
セット 空か	len(aSet) == 0
列 データ フレーム ソート し 下位 取り出す	df.sort_values(columns).tail(n)
双方向 キュー 末尾 値 取り除く	deq.pop()
データ フレーム 位 四捨五入 し 整数 する	df.round(-2).astype(int)
データ フレーム 行 抽出 する	df[:n]
マルーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='maroon')
棒グラフ 幅 設定 する	plt.bar(ラベル列, データ列, width=x)
オブジェクト バイト 列 クラス どう 確認 する	isinstance(obj, bytes)
カウンタ 辞書 変換 する	dict(aCounter)
ゼロ 埋め さ れ た 三 二 ビット 整数 型 配列	np.zeros(要素数, dtype=np.int16)
オプション オリーブ色 用いる	color = 'olive'
両端 キュー 空	len(deq) == 0
ファイル バイト 読む	f.read(n)
アクア 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='aqua')
データ 列 欠損 値 最 頻 値 埋める	ds.fillna(ds.mode().iloc[0])
空 階層 化 マップ	collections.ChainMap()
文字 列 リスト 連結 し 一つ 文字 列 する	''.join(aStringList)
ポスター 用 グラフ 設定 する	sns.set(context='poster')
ヒストグラム 線 スタイル 破線 指定 する	plt.hist(データ列, linestyle='dashed')
ベクトル 次元 行 変形 する	aArray.reshape(1, -1)
データ フレーム リスト カラム 中 文字 列 含ま れる	df[aList].isin([value, value2])
オプション イエロー グリーン 色 用いる	color = 'yellowgreen'
文字 列 内 ひとつ 文字 ある	any(c.isascii() for c in s)
折れ線 グラフ 左 三 角 マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
暗い 折れ線 グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
色 差別 ない グラフ 色 黒色 変更 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
ロージーブラウン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='rosybrown')
個 整数 列	list(range(n))
ヒストグラム 色 ブランチドアーモンド 指定 する	plt.hist(データ列, color='blanchedalmond')
ヒストグラム 描画 し その 色 バイオレット 設定 する	plt.hist(データ列, color='violet')
オプション ゴールド グラフ 色 設定 する	color = 'gold'
ヒストグラム 色 シスル 指定 する	plt.hist(データ列, color='thistle')
折れ線 グラフ 描画 し その 色 変更 する	plt.plot(データ列, データ列2, color='darkslategrey')
データ フレーム 欠損 値 パーセンタイル 設定 する	df.fillna(df.median())
データ フレーム カラム 名前 付け 直す	df.rename(columns={column: name})
ライトスチールブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightsteelblue')
オプション グラフ 色 スレート ブルー 設定 する	color = 'slateblue'
ファイル 文字 列 示す エン コーディング オープン する	open(filepath, encoding=s)
ベクトル 間 各 要素 最小公倍数	np.lcm(aArray, aArray2)
オプション ビスク グラフ 色 設定 する	color = 'bisque'
データ フレーム 行 目 ドロップ し 更新 する	df.drop(n, axis=0, inplace=True)
散布 図 大 バツ マーカー 描く	plt.plot(xdata, ydata, marker='X')
二 次元 リスト フラット 化 する	sum(aList)
整数 階 乗	math.factorial(n)
オプション ミディアムブルー 使う	color = 'mediumblue'
実数 双曲線 余弦	math.cosh(x)
データ フレーム 中 文字 列 日付 データ ある 調べる	df.isin([value, value2])
リスト リスト 境界 値 ビン 分割 する	pd.cut(aList, aList)
重 見やすく 色 差別 ない 色 配列 イテラブル 散布 図 描く	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
リスト 座標 リスト 軸 大き さ 散布 図 描く	plt.scatter(xdata, ydata, s=n)
文字 列 全体 正規 表現 複数 行 対応 マッチ さ せる	re.fullmatch(pattern, s, flags=re.MULTILINE)
ファイル 名 ファイル 調べる	filename.endswith('.tsv')
リスト 配列 破線 描画 し 色 色 差別 ない 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
データ フレーム 空文字 変換 し ドロップ する	df.replace('', np.nan).dropna()
部分 集合	aSet.issubset(aSet2)
整数 最大公約数	math.gcd(n, n2, n3)
ミスティローズ 色 ヒストグラム 描画 する	plt.hist(データ列, color='mistyrose')
オプション グラフ 色 ミディアムスレートブルー 設定 する	color = 'mediumslateblue'
線 グラフ 色 シャルトリューズ 設定 する	plt.plot(データ列, データ列2, color='chartreuse')
データ フレーム 行 目 取り除く	df.drop(n, axis=0)
折れ線 グラフ 描画 し その 色 チョコレート 設定 する	plt.plot(データ列, データ列2, color='chocolate')
データ フレーム カラム 位 四捨五入 する	df[col].round(-3)
部分 文字 列 調べる	sub in s
黄色い 菱形 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
区間 ヒストグラム 描く	plt.hist(データ列, range=(start, end))
散布 図 赤色 左 三 角 マーカー 用いる	plt.plot(xdata, ydata, marker='<', c='r')
形式 バイト 列 辞書 変換 する	json.loads(b.decode('unicode-escape'))
最大 長 両端 キュー 作る	collections.deque(maxlen=n)
ビン 数 ヒストグラム 描画 する	plt.hist(データ列, bins=n)
ヒストグラム 色 ライト グレー する	plt.hist(データ列, color='lightgrey')
読み込み できる よう ファイル パス 開く	open(filepath, mode='r')
インデント 幅 辞書 形式 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, indent=n)
色 差別 ない グラフ 配列 数列 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
折れ線 グラフ 描画 し その 色 ライトスチールブルー 設定 する	plt.plot(データ列, データ列2, color='lightsteelblue')
文字 列 片仮名 平仮名 する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
文字 列 右側 空白 除去 する	s.rstrip(' ')
配列 ヒストグラム する	plt.hist(aArray)
パステル 調 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
文字 列 ケース する	s.casefold()
データ フレーム インデックス 名前 まとめ 付け 直す	df.rename(index={name: name2})
ライト ブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightblue')
破線 グラフ 色 明るい セット する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
数値 時刻 文字 列 日付 データ 変換 する	pd.to_datetime(s, unit='s', utc=True)
グラフ 座標 キャプション 設定 する	plt.xlabel(untitled)
リスト 配列 パステル 調 グラフ プロット し その 色 青色 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
数 乗 求める	x ** n
ファイル オープン し 書き込み ストリーム 使う	open(filepath, mode='w')
正規 表現 大文字 小文字 無視 し コンパイル する	re.compile(pattern, flag=re.IGNORECASE)
折れ線 グラフ 描画 し その 色 アクアマリン 指定 する	plt.plot(データ列, データ列2, color='aquamarine')
データ フレーム リスト 列 どの 程度 分散 し いる 確認 する	df[aList].var()
行列 一 次元 化 する	aArray.flatten()
グレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='gray')
配列 分散	np.var(aArray)
ヒストグラム 描画 し その 色 インディゴ 変更 する	plt.hist(データ列, color='indigo')
リスト リスト 散布 図 描画 し その 大き さ 設定 する	plt.scatter(xdata, ydata, s=n)
文字 列 右側 タブ 取り除く	s.rstrip('\t')
折れ線 グラフ 描画 し その 色 ピンク 設定 する	plt.plot(データ列, データ列2, color='pink')
ヒストグラム 描画 し その 色 貝殻 指定 する	plt.hist(データ列, color='seashell')
線 グラフ 色 ロージーブラウン 設定 する	plt.plot(データ列, データ列2, color='rosybrown')
ファイル バイナリ モード オープン し する	f = open(filepath, mode='rb')
データ フレーム 関数 値 まとめ た グループ 使う	df.groupby(関数)
ヒストグラム 色 ダーク オレンジ 設定 する	plt.hist(データ列, color='darkorange')
要素 セット 含ま れ ない 調べる	element not in aSet
オプション オールド レース 使う	color = 'oldlace'
線 グラフ 描画 し その 色 フォレストグリーン 設定 する	plt.plot(データ列, データ列2, color='forestgreen')
オプション 青 緑 色 設定 する	color = 'teal'
茶色 ヒストグラム 色 設定 する	plt.hist(データ列, color='brown')
折れ線 グラフ 描画 し その 色 チョコレート 指定 する	plt.plot(データ列, データ列2, color='chocolate')
データ 列 使用 する	import pandas as pd
オプション サドル ブラウン 使用 する	color = 'saddlebrown'
分数 用いる	import fractions
ヒストグラム 描画 し その 色 ディープスカイブルー 設定 する	plt.hist(データ列, color='deepskyblue')
オプション 読み込む シート 名前 変更 する	sheet_name = names
配列 データ 列 散布 図 黒い 菱形 マーカー 描画 する	plt.plot(xdata, ydata, marker='D', c='k')
フォーマット データ 列 日付 データ 変換 する	pd.to_datetime(ds, format=fmt)
文字 列 中 パターン 新しい 文字 列 置換 する	re.sub(pattern, newsub, s)
オプション 欠損 値 先頭 来る よう する	na_position = 'first'
折れ線 グラフ 描画 し その 色 暗い 赤 設定 する	plt.plot(データ列, データ列2, color='darkred')
複数 列 表 小さい 順 ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
数 浮動 小数点 数 加える	x + y
オプション ライム グリーン 色 使う	color = 'limegreen'
オプション ポイント マーカー 描画 する	marker = '.'
緑色 実行 結果 表示 する	print(f'\033[32m{value}\033[0m')
折れ線 グラフ 菱形 印 緑色 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
データ 列 中 いくつ ある 数える	ds.isna().sum()
リスト イテラブル 散布 図 色 差別 ない 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
真 なる 列 要素 消す	itertools.dropwhile(predicateFunc, iterable)
ファイル ファイル 名 どう 調べる	filename.endswith('.csv')
文字 列 全体 正規 表現 大文字 小文字 無視 し マッチ する 見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
カラー コード マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='v', c=rgb)
つ 変数 同じ 値 する	x = y = n
グラフ 描画 濃い カラー パレット 使う	sns.set(pallete='deep')
ユニーク な 値 要素 する 配列	np.unique(aArray)
ファイル パス 書き込み 用 オープン する	open(filepath, mode='w', encoding='utf-8')
線 グラフ 描画 し その 色 ディープスカイブルー 変更 する	plt.plot(データ列, データ列2, color='deepskyblue')
データ フレーム 欠損 値 直後 値 埋める	df.fillna(method='bfill')
データ フレーム 表示 する とき 表示 可能 な 最大 行 数 設定 する	pd.set_option('display.max_rows', n)
文字 列 中 ひとつ 非 空白 含ま れる	any(not c.isspace() for c in s)
線 幅 ポイント マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
ヒストグラム 色 ライト サーモン 指定 する	plt.hist(データ列, color='lightsalmon')
データ 列 要約 統計 量	ds.describe()
線 グラフ 色 コーンフラワーブルー セット する	plt.plot(データ列, データ列2, color='cornflowerblue')
データ 列 丸め 整数 型 する	ds.round().astype(int)
行列 列 ごと 平均 値	np.mean(aArray, axis=0)
フォーマット データ 列 日付 データ 変換 する	pd.to_datetime(ds, format='%Y-%m-%d')
辞書 クリア する	aDict.clear()
データ フレーム 列 記述 統計 量	df[col].describe()
ヒストグラム 描画 し その 色 ペルー 指定 する	plt.hist(データ列, color='peru')
データ フレーム 正規 分布 どの 程度 尖っ いる 調べる	df.skew()
二つ 数値 プリント する	print(value, value2)
セット 空 集合 調べる	len(aSet) == 0
線 グラフ 描画 し 色 ダークゴールデンロッド 設定 する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線 グラフ 黄色い 丸 マーカー 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
グラフ 中 位置 凡例 入れる	plt.legend(loc=(x, y))
ヒストグラム 描画 し 色 ミディアムアクアマリン 設定 する	plt.hist(データ列, color='mediumaquamarine')
散布 図 赤い 下 三角 マーカー 用いる	plt.plot(xdata, ydata, marker='v', c='r')
データ フレーム グループ 化 し 各 列 合計 計算 する	df.groupby(column)[column2].sum()
事前 大文字 小文字 無視 し 正規 表現 コンパイル する	re.compile(pattern, flag=re.IGNORECASE)
ヒストグラム 描画 し 色 レモン シフォン 変更 する	plt.hist(データ列, color='lemonchiffon')
明るい 折れ線 描い その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
ヒストグラム 色 ハニーデュー 設定 する	plt.hist(データ列, color='honeydew')
文字 列 中 正規 表現 複数 行 対応 マッチ する 文字 列 探す	re.search(pattern, s, flags=re.MULTILINE)
データ フレーム リスト カラム 文字 列 欠損 値 変換 する	df[aList].replace(s, np.nan)
文字 列 走査 し パターン マッチ する 確認 する	re.search(pattern, s)
データ フレーム 重複 する 行 数 マスク 見る	df.duplicated()
折れ線 グラフ 描画 し その 色 アリスブルー 変更 する	plt.plot(データ列, データ列2, color='aliceblue')
辞書 キー 値	aDict.get(key)
カラム 欠損 値 平均 値 埋める	ds.fillna(ds.mean())
データ 列 リスト 折れ線 グラフ プロット する	plt.plot(xdata, ydata)
リスト リスト パステル 調 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
自然 数 個 個 取り出し た とき 順列 総数 計算 する	math.perm(n, k)
配列	np.arange(N)
オプション 文字 列 示す エン コーディング 使用 する	encoding = s
データ フレーム 中 列 列 重複 削除 する	df.drop_duplicates(subset=[column, column2])
データ フレーム カラム タイム ゾーン 東京 指定 する	df[col].tz_convert('Asia/Tokyo')
ヒストグラム 描画 し 色 スカイ ブルー 指定 する	plt.hist(データ列, color='skyblue')
データ 列 リスト 散布 図 黒い 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c='k')
ヒストグラム 描画 し 色 青 緑 設定 する	plt.hist(データ列, color='teal')
折れ線 グラフ 黒い 下 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線 グラフ 色 ペルー 設定 する	plt.plot(データ列, データ列2, color='peru')
折れ線 グラフ 描画 し その 色 アクアマリン 変更 する	plt.plot(データ列, データ列2, color='aquamarine')
リスト 文字 列 除く	aList.remove(element)
部分 集合 どう 調べる	aSet.issubset(aSet2)
オプション オレンジ 色 指定 する	color = 'orange'
数列 リスト 散布 図 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X')
データ フレーム リスト 列 中 合計 カウント する	df[aList].isna().sum()
辞書 コピー する	aDict.copy()
辞書 ソート し フォーマット 文字 列 する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
オプション スチール ブルー グラフ 色 設定 する	color = 'steelblue'
データ フレーム 欠損 値 直前 値 埋める	df.fillna(method='ffill')
カラー コード ダイアモンドマーカー 散布 図 描く	plt.plot(xdata, ydata, marker='D', c=rgb)
リスト データ 列 散布 図 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o')
列 文字 列 変換 し 部分 文字 列 連結 する	sub.join(map(str, iterable))
タプル ナンバリング する	enumerate(aTuple, start=n)
ペルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='peru')
ベクトル データ 型	aArray.dtype()
データ フレーム 中 文字 列 存在 する	df.isin([value])
タブ 区切り ファイル ファイル 読む	pd.read_csv(filename, encoding='shift_jis')
全て 十 六 進 数字	string.hexdigits
実数 実数 加える	x + y
折れ線 グラフ 描画 し その 色 ライトグリーン セット する	plt.plot(データ列, データ列2, color='lightseagreen')
オプション グラフ 色 パールゴールデンロッド 変更 する	color = 'palegoldenrod'
破線 付ける	plt.axhline(y=0, linestyle='dashed')
濃い 色 黒色 設定 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
オプション オールド レース 用いる	color = 'oldlace'
データ フレーム リスト 列 未 入力 値 最大 値 置換 する	df[aList].fillna(df[aList].max())
散布 図 黒い 大 バツ マーカー プロット する	plt.plot(xdata, ydata, marker='X', c='k')
暗い リスト ヒストグラム 描画 する	plt.hist(xdata, color='dark')
ビスク 色 ヒストグラム 描画 する	plt.hist(データ列, color='bisque')
事前 複数 行 対応 正規 表現 コンパイル する	re.compile(pattern, flag=re.MULTILINE)
文字 列 リスト 含ま れる	element in aList
ファイル 開い バイナリ 書き込み ストリーム 使う	open(filepath, mode='wb')
イテラブル コンビネーション	itertools.combinations(iterable, n)
実数	math.cos(x)
ヒストグラム 描画 し その 色 ライト サーモン 設定 する	plt.hist(データ列, color='lightsalmon')
オプション ダーク グレー 色 使う	color = 'darkgray'
データ フレーム カラム 中 文字 列 文字 列 いくつ ある 数える	df[col].isin([value, value2]).sum()
オプション エクセルファイル シート 名 設定 する	sheet_name = names
グラフ 一 点 鎖線 付ける	plt.axvline(x=0, linestyle='dashbot')
折れ線 グラフ 描画 し 色 ライトグリーン 指定 する	plt.plot(データ列, データ列2, color='lightgreen')
線 グラフ 描画 し その 色 ミディアムパープル 指定 する	plt.plot(データ列, データ列2, color='mediumpurple')
行列 同じ 大き さ 空 行列 作る	np.empty_like(aArray)
リスト リスト 散布 図 描画 し マーカー 大 バツ 設定 する	plt.plot(xdata, ydata, marker='X')
小数点 以下 桁 プリント する	print(':.3f'.format(x))
データ フレーム カラム 何時 見る	df[col].dt.hour
両端 キュー 順序 個 分 右 ロー テンション する	deq.rotate(n)
散布 図 黒い 下 三角 マーカー 用いる	plt.plot(xdata, ydata, marker='v', c='k')
文字 列 コロン 区切っ 表示 する	print(value, value2, sep=':')
リスト リスト 散布 図 ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.')
配列 数列 散布 図 カラー コード ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.', c=rgb)
ヒストグラム 描画 し 色 アンティーク ホワイト 指定 する	plt.hist(データ列, color='antiquewhite')
横 棒グラフ 描画 し グラフ 幅 変更 する	plt.barh(ラベル列, データ列, width=x)
リスト リスト 折れ線 グラフ 描画 し その 線 幅 セット する	plt.plot(xdata, ydata, linewidth=n)
非 空白 文字 列 中 含ま れる 調べる	any(not c.isspace() for c in s)
イテラブル セット する	set(iterable)
文字 列 中 非 文字 ある	any(not c.isascii() for c in s)
異なる 列 キー 二つ データ フレーム 右 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
タプル 末尾 要素 取り除く	aTuple[:-n]
文字 列 走査 し 正規 表現 複数 行 対応 マッチ する 確認 する	re.search(pattern, s, flags=re.MULTILINE)
浮動 小数点 数 整数 部	math.modf(x)[1]
データ 列 中 含ま れる	ds.isin([value])
オプション 真紅 色 使う	color = 'crimson'
暗い 色 ヒストグラム イテラブル 描画 する	plt.hist(xdata, color='dark')
線 グラフ 描画 し その 色 ハニーデュー 変更 する	plt.plot(データ列, データ列2, color='honeydew')
配列 リスト 折れ線 描画 し その 線 幅 する	plt.plot(xdata, ydata, linewidth=n)
データ フレーム カラム 各 値 何 回 出現 する 見る	df[col].value_counts()
行列 次元 列 変形 する	aArray.reshape(-1, 1)
標準 入力 文字 読む	sys.stdin.read(1)
実数 浮動 小数点 数 除算 し 切り捨てる	x // y
カラム 中 文字 列 いくつ ある 数える	ds.isin([value, value2]).sum()
オプション グラフ 色 インディアン レッド する	color = 'indianred'
文字 列 中 ひとつ 非 小文字 含ま れる	any(not c.islower() for c in s)
ドジャーブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='dodgerblue')
整数 二 進 文字 列 変換 する	bin(n)[2:]
明るい 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
列 ユニーク な 要素 抽出 し リスト 化 する	ds.unique().tolist()
集合 集合	aSet.difference(aSet2)
オブジェクト 文字 列 クラス 調べる	isinstance(obj, str)
実数 仮数 求める	math.frexp(x)[0]
データ フレーム 指定 さ れ た 列 名 一覧 列 抽出 する	df[columns]
ライトゴールドロディイエロー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightgoldenrodyellow')
三つ 文字 列 順に 出力 する	print(value, value2, value3)
配列 個 分割 し ラベル つける	pd.cut(aArray, n, labels=names)
データ フレーム ランダム 行 取り出す	df.sample(n)
線 グラフ 描画 し その 色 ターコイズ セット する	plt.plot(データ列, データ列2, color='turquoise')
配列 初期 化 する	np.arange(N)
オプション ミディアムブルー 色 使う	color = 'mediumblue'
データ フレーム リスト カラム まとめ 置き換える	df[aList].replace(ValueMap)
折れ線 グラフ 描画 し その 色 オリーブ 設定 する	plt.plot(データ列, データ列2, color='olive')
オプション グラフ 色 紺碧 指定 する	color = 'azure'
列 と列 キー 二つ データ フレーム 外部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
文字 列 全て 印字 できる 調べる	s.isprintable()
データ 列 ラベル 指定 し 縦 棒 描画 する	plt.bar(ラベル列, データ列)
リスト リスト 散布 図 描画 し 文字 列 凡例 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
次元 リスト 作る	[[0] * n for _ in range(n2)]
リスト リスト 折れ線 グラフ 描画 し ラベル付け する	plt.plot(xdata, ydata, label=untitled)
本日 何 日 知る	datetime.datetime.today().day
オプション グラフ 色 ナバホホワイト 設定 する	color = 'navajowhite'
文字 列 全体 パターン 大文字 小文字 無視 し マッチ する 見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
黒い 丸 マーカー イテラブル リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c='k')
散布 図 バツ マーカー 使用 する	plt.plot(xdata, ydata, marker='x')
数列 データ 列 散布 図 赤い 下 三角 マーカー プロット する	plt.plot(xdata, ydata, marker='v', c='r')
文字 列 中 複数 行 対応 正規 表現 マッチ し た 全て 文字 列 リスト 変換 する	re.findall(pattern, s, flags=re.MULTILINE)
ヒストグラム 横 並べ プロット する	plt.hist([データ列, データ列2], color=['b', 'r'])
オプション カーキ 使う	color = 'khaki'
オプション ミスティローズ 色 設定 する	color = 'mistyrose'
データ フレーム リスト 列 母 標準 偏差	df[aList].std(ddof=0)
データ フレーム 列 値 大きく 小さい 行 取り出す	df[(x < df[column]) & (df[column] < x2)]
日付 時刻 データ 日 分 加算 する	aDatetime + datetime.timedelta(days=n)
データ フレーム リスト カラム 欠損 値 中央 値 埋める	df[aList].fillna(df[aList].median())
今日 タプル する	datetime.datetime.today().timetuple()
パス 一覧	sys.path
ビン 数 リスト ビン 分割 し ラベル つける	pd.cut(aList, n, labels=names)
タプル 中 最小 値	min(aTuple)
プロット 色 全般 的 濃く する	sns.set(pallete='deep')
配列 ユニーク な 要素 ごと 頻度	np.unique(aArray, return_counts=True)
オプション スカイ ブルー グラフ 色 設定 する	color = 'skyblue'
散布 図 黒い 上 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c='k')
文字 列 全て 空白 なる どう 調べる	s.isspace()
文字 列 部分 文字 列 終わる どう 調べる	s.endswith(sub)
グラフ 使う	from sympy import N
折れ線 グラフ 描画 し その 色 青 緑 設定 する	plt.plot(データ列, データ列2, color='teal')
タプル 値 列挙 する	aDict.values()
データ フレーム 下 行 抽出 する	df.tail(n)
リスト リスト 色 差別 ない グラフ 描い その 色 黒 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
データ フレーム カテゴリ データ 列 名 一覧	df.select_dtypes('object').columns
タイムスタンプデータ 週間 加える	aDatetime + datetime.timedelta(weeks=n)
本日 土曜日	datetime.datetime.today().weekday() == 5
オプション 列 名前 設定 する	names = names
オプション グラフ 色 紺碧 設定 する	color = 'azure'
データ 列 欠損 値 最大 値 設定 する	ds.fillna(ds.max())
浮動 小数点 数 負	x < 0
アルファベット 大文字 全部 使う	string.ascii_uppercase
奇数	n % 2 == 1
データ フレーム リスト 指定 さ れ た 列 ヒートマップ グラフ 化 する	sns.heatmap(df[aList].corr())
文字 列 走査 し パターン ケース 無視 し マッチ する 調べる	re.search(pattern, s, flags=re.IGNORECASE)
リスト リスト 黒い 暗い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
列 等間隔 個 ビニング する	pd.cut(ds, n)
ファイル エクセルファイルファイル データ フレーム 書き込む	df.to_excel(filename)
データ フレーム カラム 十 位 丸め 整数 型 する	df[col].round(-1).astype(int)
散布 図 黒い 大 バツ マーカー 用いる	plt.plot(xdata, ydata, marker='X', c='k')
値 集合 含ま れる 調べる	element in aSet
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 最大 値 算出 する	df.groupby([column, column2], as_index=False).max()
グラフ 中 枠 なし 凡例 入れる	plt.legend(frameon=False)
白い ヒストグラム 描画 する	plt.hist(データ列, color='w')
文字 列 セパレータ 区切り 列挙 する	s.split(sep)
折れ線 グラフ 描画 し その 色 カデット ブルー 設定 する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線 グラフ 描画 し 色 カーキ 設定 する	plt.plot(データ列, データ列2, color='khaki')
ファイル 読み込み できる よう 開く	open(filepath, mode='r')
折れ線 グラフ 色 コーラル 設定 する	plt.plot(データ列, データ列2, color='coral')
ピンク ヒストグラム 色 変更 する	plt.hist(データ列, color='deeppink')
オプション ミディアムパープル 使う	color = 'mediumpurple'
十 六 進 文字 列 バイト バイト 列 変換 する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
折れ線 グラフ 色 ライト イエロー 設定 する	plt.plot(データ列, データ列2, color='lightyellow')
リスト イテラブル 折れ線 グラフ アルファ 描画 する	plt.plot(xdata, ydata, alpha=alpha)
配列 配列 散布 図 描画 し マーカー 色 淡い 設定 する	plt.plot(xdata, ydata, c='muted')
データ 列 使う	import pandas as pd
整数 配列 どれ 調べる	n in aArray
淡い ピンク色 ヒストグラム 色 設定 する	plt.hist(データ列, color='lightpink')
データ フレーム 列 値 まとめ た グループ 使う	df.groupby('A')
グラフ テーマ 設定 する	sns.set(pallete=palleteName)
小数点 数 正接 逆数	math.atan(x)
オブジェクト 関数 調べる	callable(obj)
折れ線 グラフ マーカー 使う	plt.plot(データ列, データ列2, marker='^')
データ フレーム カラム 値 正規 表現 まとめ 置換 する	df[col].replace(pattern, repl, regex=True)
十 六 進 表記 文字 列 浮動 小数点 数 変換 する	float.fromhex(十六進表記の文字列)
濃い 色 散布 図 描く	plt.plot(xdata, ydata, c='deep')
データ 列 ラベル 列 指定 し 横 棒グラフ 描画 する	plt.barh(ラベル列, データ列)
カラム 中 ある 文字 列 合計 数える	ds.isin([value, value2]).sum()
折れ線 グラフ 色 ライト サーモン 設定 する	plt.plot(データ列, データ列2, color='lightsalmon')
文字 列 平仮名 片仮名 する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
データ 列 十 位 丸め 整数 する	ds.round(-1).astype(int)
ファイル データ 変換 する	json.load(fin)
ライトスレイグレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightslategray')
データ フレーム カラム 欠損 値 埋める	df[col].fillna(x)
データ フレーム 列 大きい 行 抽出 する	df[df[column] > x]
データ フレーム リスト カラム 正規 分布 左右 対称 性	df[aList].kurt()
数列 配列 折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
ピアソン データ フレーム リスト 指定 さ れ た 列 相関 行列	df[aList].corr(method='pearson')
耐火 レンガ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='firebrick')
線 グラフ 描画 し 色 ベージュ セット する	plt.plot(データ列, データ列2, color='beige')
データ 列 データ 列 散布 図 描き 色 暗い セット する	plt.plot(xdata, ydata, c='dark')
二 次元 タプル フラット 化 する	sum(aTuple)
明るい 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
オプション 三角 マーカー 描画 する	marker = '^'
文字 列 開始 位置 終了 位置 間 部分 文字 列 含ま れる 調べる	s.find(sub, start, end) != -1
両端 キュー 番目 値 途中 追加 する	deq.insert(n, element)
データ フレーム 行 目 抽出 する	df.loc[n]
データ フレーム 重複 し た 行 落とす	df.drop_duplicates()
データ 列 リスト 折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
データ 列 第 三 四 分 位 数	ds.quantile(0.75)
リスト 組 する	tuple(aList)
カウンタ マッピング 減らす	aCounter.subtract(aDict)
データ フレーム 末尾	df.tail()
モジュール 用いる	import math
折れ線 グラフ 色 アイボリー 変更 する	plt.plot(データ列, データ列2, color='ivory')
データ フレーム 各 列 毎 グループ 化 し 列 平均 値 算出 する	df.groupby(column)[column2].mean()
データ 列 曜日 何 日 目 見る	ds.dt.dayofweek
データ 列 ビン 数 ビン 分割 し ラベル つける	pd.cut(ds, n, labels=names)
配列 リスト 散布 図 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o')
双方向 キュー 末尾 要素 取り出す	deq.pop()
日付 時刻 データ 分 分 加える	aDatetime + datetime.timedelta(minutes=n)
折れ線 グラフ 描画 し 色 サンディーブラウン 設定 する	plt.plot(データ列, データ列2, color='sandybrown')
オプション 色 アクアマリン セット する	color = 'aquamarine'
プロット 描画 暗い カラー パレット 使う	sns.set(pallete='dark')
グレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='grey')
リスト リスト 折れ線 グラフ 文字 列 色 描画 する	plt.plot(xdata, ydata, color=s)
カラム 欠損 値 直前 値 設定 する	ds.fillna(method='ffill')
折れ線 グラフ 色 ライトスチールブルー 設定 する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線 グラフ 色 アクアマリン 設定 する	plt.plot(データ列, データ列2, color='aquamarine')
ファイル 全部 読み込む	f.read()
ヒストグラム 描画 し その 色 シアン 設定 する	plt.hist(データ列, color='cyan')
ヒストグラム 描画 し 色 ペールグリーン 変更 する	plt.hist(データ列, color='palegreen')
浮動 小数点 数 乗	x ** n
文字 列 コロン 区切っ 文字 列 リスト する	s.split(':')
オプション どの 行 カラム 名前 設定 し ない	header = None
折れ線 グラフ ポイント マーカー 緑色 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
まとめ カラム 値 置き換える	ds.replace(ValueMap)
データ フレーム グループ 化 し それぞれ 列 分散 求める	df.groupby(column)[column2].var()
オプション シエナ 色 用いる	color = 'sienna'
リスト 要素 昇順 ソート する	sorted(aList, reverse=True)
組 番目	aTuple[n]
イテラブル イテラブル ペア リスト する	itertools.zip_longest(iterable, iterable2)
オプション 値 置き換える	inplace = True
値 セット 取り除く	aSet.remove(element)
異なる 列 キー つ データ フレーム 内部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
最大 値 データ フレーム カラム 欠損 値 埋める	df[col].fillna(df[col].max())
カウンタ 要素 列挙 する	aCounter.keys()
オプション 色 ダークオーキッド 設定 する	color = 'darkorchid'
列 分割 数 ビン 分割 し ラベル つける	pd.cut(ds, n, labels=names)
タブ 区切り ファイル ヘッダ 指定 せ ず 読み込む	pd.read_csv(filename, header=None)
データ フレーム 列 文字 列 含ま れる 行 抽出 する	df[df[column].str.contains(s)]
ふたつ 辞書 マージ する	aDict | aDict2
オブジェクト 浮動 小数点 数 型 調べる	isinstance(obj, float)
部分 文字 列	sub in s
データ フレーム 列 名 リスト 用い 並べ 直し 更新 する	df.sort_values(by=column, inplace=True)
イテラブル 配列 色 差別 ない グラフ 描画 し 色 黒色 変更 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
名前 カラー マップ 使う	"plt.get_cmap(""カラーマップ名"")"
右 個 分 双方向 キュー 順序 ロー テンション する	deq.rotate(n)
ヒストグラム 描画 し 色 パープル 設定 する	plt.hist(データ列, color='purple')
一 桁 正 整数 調べる	0 <= x <= 9
データ フレーム カラム 中 ある 文字 列 文字 列 合計 数える	df[col].isin([value, value2]).sum()
リスト 内 要素 少なくとも 一つ 真 どう 調べる	any(aList)
ヒストグラム 色 ディムグレー 設定 する	plt.hist(データ列, color='dimgray')
折れ線 グラフ 色 ダークスラテグレー 変更 する	plt.plot(データ列, データ列2, color='darkslategray')
データ 列 横 軸 折れ線 グラフ 描画 する	plt.plot(range(len(xdata)), xdata)
日付 データ 文字 列 フォーマット する	"aDate.strftime(""%d/%m/%y"")"
データ フレーム 各 列 毎 グループ 化 し 文字 列 名前 グループ 使う	df.groupby(column).get_group(s)
年 日付 時刻 変換 する	datetime.datetime(year=year, month=1, day=1)
黄色 色 ヒストグラム 描画 する	plt.hist(データ列, color='yellow')
プロット スライド 用 変更 する	sns.set(context='talk')
ベクトル 差 計算 する	aArray - aArray2
オプション スラグレー 使う	color = 'slategrey'
オプション 色 ラベンダー 変更 する	color = 'lavender'
色 差別 ない グラフ 色 黒 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
データ フレーム 複数 列 グループ 化 する	df.groupby(columns)
フォレストグリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='forestgreen')
文字 列 先頭 正規 表現 限定 マッチ する 見る	re.match(pattern, s, flags=re.ASCI)
折れ線 グラフ 色 アンティーク ホワイト 変更 する	plt.plot(データ列, データ列2, color='antiquewhite')
データ フレーム 列 値 かつ 列 で ある 行 抽出 する	df[(df[column] == x) & (df[column2] == x2)]
リスト ビン 数 使っ ビンニング する	pd.cut(aList, n)
データ フレーム 行 降順 ソート する	df.sort_index(ascending=False)
自然 数	math.gcd(n, n2)
リスト データ 列 散布 図 赤色 丸 マーカー プロット する	plt.plot(xdata, ydata, marker='o', c='r')
オプション モカシン 使用 する	color = 'moccasin'
数値 簡単 化 行う	sympy.sympify(e)
折れ線 グラフ 線 幅 ダイアモンド 印 描画 する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
黄色い 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='y')
文字 列 中 部分 文字 列 出現 カウント する	s.count(sub)
ヒストグラム 描画 し その 色 ダーク オレンジ 指定 する	plt.hist(データ列, color='darkorange')
大文字 小文字 無視 し パターン コンパイル する	re.compile(pattern, flag=re.IGNORECASE)
線 グラフ 描画 し その 色 ダーク グレー 指定 する	plt.plot(データ列, データ列2, color='darkgray')
スタック 左 要素 追加 する	deq.appendleft(element)
リスト イテラブル 散布 図 淡い 色 重 見やすく プロット する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
両端 キュー 番目 値 差し込む	deq.insert(n, element)
それぞれ 代入 する	x, y, z = n, n2, n3
スピアマン 相関 係数 用い データ フレーム 相関 行列 求める	df.corr(method='spearman')
タプル コンビネーション	itertools.combinations(iterable, n)
文字 列 最後 部分 文字 列 二分 する	s.rpartition(sub)
文字 列 内 ひとつ 空白 含ま れる どう 調べる	any(c.isspace() for c in s)
折れ線 グラフ 色 インディゴ 設定 する	plt.plot(データ列, データ列2, color='indigo')
列 と列 キー 二つ データ フレーム 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
ファイル パス 絶対 ファイル パス 見る	os.path.abspath(filepath)
線 グラフ 描画 し その 色 パウダー ブルー 設定 する	plt.plot(データ列, データ列2, color='powderblue')
ヒストグラム 色 スプリング グリーン 設定 する	plt.hist(データ列, color='springgreen')
文字 列 正規 表現 分割 する	re.split(pattern, s)
リスト リスト 散布 図 黒色 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='k')
データ フレーム 列 文字 列 含ま れる データ 抽出 する	df[df[column].str.contains(s)]
データ フレーム カラム 曜日 名	df[col].dt.weekday_name
データ フレーム カテゴリ データ 列 取り出す	df.select_dtypes('object')
引く	n - n2
ブール 型 全 要素 初期 化 さ れ た 行列	np.zeros(行数, 列数, dtype=np.int32)
黒い 左 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c='k')
データ フレーム 小数点 以下 桁 丸める	df.round(n)
データ 列 リスト 濃い 描画 し その 色 黒く する	plt.plot(xdata, ydata, linestyle='deep', color='k')
浮動 小数点 数 数 整数 除算 する	x // y
ヒストグラム 描画 し 色 ダークシアグリーン 変更 する	plt.hist(データ列, color='darkseagreen')
データ フレーム 列 正規 表現 文字 列 マッチ し ない データ 抽出 する	df[not df[column].str.match(s)]
ファイル バイナリ ストリーム 開き する	f = open(filepath, mode='rb')
タプル リバース する	reversed(aTuple)
文字 列 カンマ 分割 し 文字 列 リスト する	s.split(',')
文字 列 限定 正規 表現 分割 する	re.split(pattern, s, flags=re.ASCI)
オプション パレットトルコイズ 使う	color = 'paleturquoise'
ヒストグラム 色 ライト イエロー セット する	plt.hist(データ列, color='lightyellow')
文字 列 限定 正規 表現 分ける	re.split(pattern, s, flags=re.ASCI)
文字 列 最初 部分 文字 列 分け た とき 最初 文字 列	s.partition(sub)[0]
折れ線 グラフ 描画 し その 色 パープル 設定 する	plt.plot(データ列, データ列2, color='purple')
全て シート ファイル 読む	pd.read_excel(filename, sheet_name=None)
折れ線 グラフ 描画 し その 色 サドル ブラウン 設定 する	plt.plot(データ列, データ列2, color='saddlebrown')
データ フレーム カラム 文字 列 する	df[col].replace(s, np.nan)
線 グラフ 描画 し 色 ライトスレイグレー 指定 する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線 グラフ 青い 丸 マーカー 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
ベクトル 合計	np.sum(aArray)
データ フレーム 設定 する	df.fillna(x)
始まる 無限 数列	itertools.count()
オプション 標準 エラー 出力 する	file = sys.stderr
オプション グラフ 色 白 設定 する	color = 'white'
オプション 四角 マーカー 使う	marker = 's'
データ フレーム 列 二つ 選択 する	df[[column, column2]]
明るい 色 折れ線 描画 し 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
オプション ラベンダー 色 用いる	color = 'lavender'
ダーク グレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkgray')
リスト リスト 続け た 列	itertools.chain(iterable, iterable2)
黒色 左 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c='k')
データ 列 等量 ビン 数 ビン 分割 する	pd.qcut(ds, n)
折れ線 グラフ 描画 し その 色 ホワイトスモーク 設定 する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線 グラフ 描画 し その 色 貝殻 指定 する	plt.plot(データ列, データ列2, color='seashell')
ベクトル 行列 積	np.matmul(aArray, aArray2)
文字 列 下線 付き プリント できる 文字 列 する	f'\033[4m{value}\033[0m'
オプション 黄色 色 設定 する	color = 'yellow'
データ フレーム 列 用い 降順 ソート する	df.sort_values(by='A', ascending=False)
オプション リネン 色 用いる	color = 'linen'
データ 列 データ 列 濃い グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
オプション 分割 記号 タブ する	sep = '\t'
オプション ライム 色 設定 する	color = 'lime'
暗い 色 折れ線 描い 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
折れ線 グラフ 描画 し 色 ハニーデュー 変更 する	plt.plot(データ列, データ列2, color='honeydew')
本日 水曜日 調べる	datetime.datetime.today().weekday() == 2
ファイル 文字 列 変換 し 書き込む	f.write(str(x))
オプション ダークスラテグレー 色 使う	color = 'darkslategray'
セット 別 集合 共通 要素 全て 除去 する	aSet.symmetric_difference_update(aSet2)
データ フレーム カラム 何 日 見る	df[col].dt.day
辞書 キー 一覧	list(aDict)
ヒストグラム 描画 し その 色 ダークターコイズ 設定 する	plt.hist(データ列, color='darkturquoise')
折れ線 グラフ マーカー 左 三 角 する	plt.plot(データ列, データ列2, marker='<')
リスト リスト 散布 図 描画 し バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='x', c=rgb)
以上 以下 確認 する	-9 <= x <= 9
オプション 黄色 色 使う	color = 'yellow'
グラフ 見栄え いい 感じ する	sns.set()
データ フレーム 列 名前 まとめ 文字 列 文字 列 置換 する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データ フレーム 表示 する とき カラム 最大 幅 する	pd.set_option('max_colwidth', n)
線 グラフ 色 ゴールデン ロッド 設定 する	plt.plot(データ列, データ列2, color='goldenrod')
タイムスタンプデータ 時間 前 する	aDatetime - datetime.timedelta(hours=n)
リスト リスト 散布 図 淡い 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
カラム 第 一 四 分 位 数	ds.quantile(0.25)
カラー コード 星 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='*', c=rgb)
データ フレーム 列 値 データ 抽出 する	df[df[column] == x]
両端 キュー 最初 要素 取り除く	deq.remove(element)
文字 列 最後 部分 文字 列 二分 し 左側 文字 列 求める	s.rpartition(sub)[0]
最大 値 最小 値 範囲 一様 な 乱数 求める	random.uniform(最小値, 最大値)
リスト 配列 散布 図 描画 し マーカー クロス 設定 する	plt.plot(xdata, ydata, marker='x')
オプション ライトゴールドロディイエロー グラフ 色 設定 する	color = 'lightgoldenrodyellow'
点線 付ける	plt.axhline(y=0, linestyle='dotted')
データ フレーム 型 リスト 指定 さ れ た データ 型 列 抽出 する	df.select_dtypes(include=typeList)
オブジェクト 整数 型 調べる	isinstance(obj, int)
割り切れる	n % 2 == 0
データ フレーム リスト 列 最大 値 設定 する	df[aList].fillna(df[aList].max())
データ フレーム カラム 歪 度 計算 する	df[col].kurt()
オプション バッファ サイズ 変更 する	buffering = 4096
ファイル パス バイナリ 用 オープン する	open(filepath, mode='rb')
パステル 調 色 折れ線 グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
プラットホーム 調べる	sys.platform.startswith('linux')
データ フレーム 列 集約 し それぞれ グループ ごと 分散 求める	df.groupby(column).var()
単位 正方 行列	np.identity(N)
線 グラフ 描画 し その 色 青 変更 する	plt.plot(データ列, データ列2, color='blue')
数値 黄色 プリント できる 文字 列 変換 する	f'\033[33m{value}\033[0m'
棒 描画 し 中央 寄せ する	plt.bar(ラベル列, データ列, align='center')
折れ線 グラフ 描画 し その 色 カデット ブルー 設定 する	plt.plot(データ列, データ列2, color='cadetblue')
二 進 文字 列	bin(n)[2:]
ヒストグラム 描画 し 色 ミディアムブルー 変更 する	plt.hist(データ列, color='mediumblue')
データ フレーム リスト 列 中 いくつ 欠損 値 ある 求める	df[aList].isna().sum()
オブジェクト 数値 確認 する	isinstance(obj, (int,float))
ヒストグラム 色 オールド レース 設定 する	plt.hist(データ列, color='oldlace')
データ 列 中 ある 文字 列 数 数える	ds.isin([value, value2]).sum()
トマト 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='tomato')
カウンタ マッピング 更新 する	aCounter.update(aDict)
オプション バッファリング サイズ 指定 する	buffering = 4096
もしくは 調べる	n == 1 or n == 2
ファイル 全体 リスト 読み込む	f.readlines()
文字 列 最初 タブ 除去 する	s.lstrip('\t')
小麦色 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='wheat')
リスト 中 最初 文字 列 探す	aList.index(element)
要素 セット メンバー で ない どう 調べる	element not in aSet
データ フレーム 分散	df.var()
オプション ゴールデン ロッド 色 設定 する	color = 'goldenrod'
データ フレーム 列 空文字 欠損 値 変換 し ドロップ する	df[col].replace('', np.nan).dropna()
イテラブル 関数 フィルタ する	filter(func, iterable)
エクセルデータ データ フレーム 読む	pd.read_excel(filename)
文字 列 コロン 区切り 列挙 する	s.split(':')
組 先頭 取り除く	aTuple[1:]
点線 折れ線 グラフ スタイル 設定 する	plt.plot(データ列, データ列2, linestyle='dotted')
カウンタ 項目 その カウント 列挙 する	aCounter.elements()
インデント 幅 マッピング 形式 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, indent=n)
既存 ベクトル 元 全 要素 配列 作る	np.zeros_like(aArray)
リスト リスト パステル 調 グラフ 描画 し その 色 黒く する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
折れ線 グラフ 色 アクア 設定 する	plt.plot(データ列, データ列2, color='aqua')
折れ線 グラフ 描画 し その 色 ゲインズボロ 変更 する	plt.plot(データ列, データ列2, color='gainsboro')
リスト パステル 調 色 柱状 図 描画 する	plt.hist(xdata, color='pastel')
ヒストグラム 描画 し 色 オレンジ レッド 設定 する	plt.hist(データ列, color='orangered')
オプション カラム 名前 設定 する	names = names
文字 列 中 ひとつ 非 アスキー 文字 含ま れる	any(not c.isascii() for c in s)
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t')
有理数 分母	q.denominator
ミディアムバイオレットレッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mediumvioletred')
ヒストグラム 線 スタイル 一 点 鎖線 設定 する	plt.hist(データ列, linestyle='dashbot')
タプル オブジェクト 最初 見つかる 場所	aTuple.index(element)
線 グラフ 色 ダークスレートブルー 設定 する	plt.plot(データ列, データ列2, color='darkslateblue')
疑似 乱数 正規 分布 計算 する	random.normalvariate(mu=0.5, sigma=0.2)
オプション パウダー ブルー 色 設定 する	color = 'powderblue'
ベクトル	np.arange(N)
折れ線 グラフ 色 ライトスレイグレー 設定 する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線 グラフ 線 幅 下 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
マッピング キー 一覧	list(aDict)
リスト リスト 散布 図 描画 し 下 三角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='v', c=rgb)
データ フレーム インデックス 名前 まとめ 変更 する	df.rename(index={name: name2})
データ フレーム リスト 列 値 まとめ 変更 する	df[aList].replace(ValueMap)
赤い 右 三 角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='>', c='r')
データ フレーム リスト カラム 欠損 値 埋める	df[aList].fillna(x)
リスト リスト カラー コード 暗い グラフ プロット する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
数値 符号 同じ する	math.copysign(x, x2)
折れ線 グラフ 描画 し その 色 ダーク グリーン 設定 する	plt.plot(データ列, データ列2, color='darkgreen')
オプション インディアン レッド 色 使用 する	color = 'indianred'
辞書 キー 要素 設定 する	aDict[key] = element
ヒストグラム 色 バリーウッド 変更 する	plt.hist(データ列, color='burlywood')
データ フレーム 型 列 抽出 する	df.select_dtypes(ty)
データ フレーム リスト カラム 要約 統計 量	df[aList].describe()
データ 列 ヒストグラム 可視 化 する	plt.hist(ds)
インディゴ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='indigo')
データ 列 中 文字 列 存在 する	ds.isin([value, value2])
ヒストグラム 描画 し その 色 ミスティローズ 設定 する	plt.hist(データ列, color='mistyrose')
それぞれ 変更 する	x, y, z = n, n2, n3
無限 数列	itertools.repeat(n)
折れ線 グラフ 描画 し 色 ライトスレイグレー 設定 する	plt.plot(データ列, データ列2, color='lightslategray')
空 階層 化 辞書	collections.ChainMap()
ダーク グレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkgrey')
アヤメ データセット ロード する	sns.load_dataset('iris')
データ フレーム 列 並べ 上位 件 取り出す	df.sort_values(columns).head(n)
データ フレーム カラム 四捨五入 し 整数 する	df[col].round().astype(int)
線 グラフ 描画 し その 色 コーラル 設定 する	plt.plot(データ列, データ列2, color='coral')
データ フレーム 列 大きい 順 破壊 的 並べ 直す	df.sort_values(by='A', ascending=False, inplace=True)
改行 なし 二つ リスト プリント する	print(value, value2, end='')
要素 辞書 値 含ま れ い ない 調べる	element not in aDict.values()
ヒストグラム 色 白く する	plt.hist(データ列, color='w')
リスト リスト 散布 図 描画 し マーカー 上 三 角 設定 する	plt.plot(xdata, ydata, marker='^')
オプション 降順 する	ascending = False
変数 赤色 表示 できる 文字 列 する	f'\033[31m{value}\033[0m'
リスト リスト 散布 図 描画 し 丸 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='o', c=rgb)
データ フレーム 列 文字 列 含ま れ ない データ 取り出す	df[not df[column].str.contains(s)]
グラフ 凡例 文字 列 文字 列 入れる	plt.legend([s, s2])
要素 辞書 値 含ま れ いる 調べる	element in aDict.values()
グラフ データ ラベル 位置 指定 する	plt.legend(loc=(x, y))
文字 列 全て 英数字 どう 調べる	s.isalnum()
折れ線 グラフ 描画 し その 色 ダーク バイオレット 指定 する	plt.plot(データ列, データ列2, color='darkviolet')
ヒストグラム 描画 し その 色 ミディアムバイオレットレッド する	plt.hist(データ列, color='mediumvioletred')
疑似 乱数 得る	random.random()
リスト 濃い 色 ヒストグラム 描画 する	plt.hist(xdata, color='deep')
折れ線 グラフ 描画 し 色 サドル ブラウン 設定 する	plt.plot(データ列, データ列2, color='saddlebrown')
データ フレーム 列 値 かつ 列 で ある データ 抽出 する	df[(df[column] == x) & (df[column2] == x2)]
オプション バツ マーカー 用いる	marker = 'x'
符号 付き 長 さ バイト 列 変換 する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
線 グラフ 色 ダークゴールデンロッド 設定 する	plt.plot(データ列, データ列2, color='darkgoldenrod')
暗い 色 折れ線 グラフ 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
異なる カラム キー 表 外部 ジョイン する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
リスト リスト 黒い 色 差別 ない グラフ 描く	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
配列 累積 和	np.cumsum(aArray)
進 文字 列 バイト 列 変換 する	int(s, n).to_bytes(length=bytesize, byteorder='big')
データ フレーム リスト カラム 最小 値 設定 する	df[aList].fillna(df[aList].min())
オプション バイナリ モード 使う	mode = 'rb'
二つ カウンタ 共通 する 要素	aCounter & aCounter2
データ フレーム 二つ 列 値 グループ 分け する	df.groupby(['A', 'B'])
オプション 色 ピンク 設定 する	color = 'pink'
ヒストグラム 描画 し その 色 スプリング グリーン 指定 する	plt.hist(データ列, color='springgreen')
データ 列 リスト 散布 図 色 差別 ない 色 使っ 重 見やすく プロット する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
オプション グラフ 色 ダーク ブルー セット する	color = 'darkblue'
黒色 星 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='*', c='k')
日付 時刻 データ 日付 時刻 データ 前 調べる	aDatetime < aDatetime2
マップ コピー	dict(aDict)
赤い 右 三 角 マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='>', c='r')
折れ線 グラフ 描画 し その 色 ライト シアン 設定 する	plt.plot(データ列, データ列2, color='lightcyan')
データ 列 折れ線 グラフ 描画 し マーカー 四角 印 する	plt.plot(データ列, データ列2, marker='s')
リスト データ 列 散布 図 明るい 色 描画 する	plt.plot(xdata, ydata, c='bright')
オプション マゼンタ 色 使う	color = 'magenta'
データ 列 欠損 値 平均 変更 する	ds.fillna(ds.mean())
数列 リスト 濃い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
大きい	n > n2
ファイル 書き込み ストリーム オープン し する	f = open(filepath, mode='w')
イテラブル 配列 色 差別 ない 描画 し 色 黒 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
折れ線 グラフ 描画 し その 色 ライトスカイブルー 指定 する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線 グラフ 色 ダークシアグリーン 設定 する	plt.plot(データ列, データ列2, color='darkseagreen')
大き さ 数列 リスト 散布 図 描画 する	plt.scatter(xdata, ydata, s=n)
日付 データ 形式 文字 列 変換 する	aDate.isoformat()
データ フレーム 中 合計 数える	df.isna().sum()
分割 数 リスト 等しい 量 なる よう ビン 分割 する	pd.qcut(aList, n)
ヒストグラム 描画 し 色 ゴールド 指定 する	plt.hist(データ列, color='gold')
リスト すべて 要素 クリア する	aList.clear()
配列 行 ごと 平均 値	np.mean(aArray, axis=1)
データ 列 欠損 値 後 行 値 変更 する	ds.fillna(method='bfill')
淡い 色 散布 図 プロット する	plt.plot(xdata, ydata, c='muted')
入力 ストリーム 全体 行 単位 分割 し 読み込む	f.readlines()
折れ線 グラフ 描画 し その 色 ピーチ パフ 設定 する	plt.plot(データ列, データ列2, color='peachpuff')
スタック タプル 変換 する	tuple(deq)
リスト 総和	sum(aList)
線 グラフ 色 ダークターコイズ 指定 する	plt.plot(データ列, データ列2, color='darkturquoise')
ファイル ない	not os.path.exists(filepath)
オールド レース 色 ヒストグラム 描画 する	plt.hist(データ列, color='oldlace')
実線 グラフ 描画 する	plt.plot(データ列, データ列2, linestyle='solid')
ヒストグラム 色 ライト サーモン セット する	plt.hist(データ列, color='lightsalmon')
整数 符号 付き バイト 列 変換 する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
タプル 内 要素 少なくとも ひとつ 真 調べる	any(aTuple)
文字 列 中 ひとつ 非 数字 含ま れる どう 調べる	any(not c.isdigit() for c in s)
大きく かつ 未満 テスト する	n < n2 and n2 < n3
データ フレーム カラム 上位	df[col].quantile(0.25)
改行 なし 二つ 文字 列 プリント する	print(value, value2, end='')
積み上げ 棒 描画 する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
ヒストグラム 描画 し その 色 青 変更 する	plt.hist(データ列, color='blue')
文字 列 フォーマット 日付 データ 変換 する	pd.to_datetime(s, format='%Y-%m-%d')
文字 列 複数 行 対応 正規 表現 分ける	re.split(pattern, s, flags=re.MULTILINE)
リスト 末尾 番目 以前 部分 取り出す	aList[:-n]
リスト リスト 黒い 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
昇順 複数 列 データ フレーム ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
文字 列 組 要素	element in aTuple
文字 列 左側 空白 取り除く	s.lstrip(' ')
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 標準 偏差 求める	df.groupby([column, column2], as_index=False).std()
整数 リスト 得る	list(range(n, n2+1))
四角 マーカー 用い 散布 図 プロット する	plt.plot(xdata, ydata, marker='s')
日付 時刻 データ 形式 文字 列 変換 する	aDatetime.isoformat()
既存 ファイル 文字 列 示す 文字 コード 用い 追加 できる よう オープン する	open(filepath, mode='a', encoding=s)
複数 行 対応 正規 表現 文字 列 全体 マッチ さ せる	re.fullmatch(pattern, s, flags=re.MULTILINE)
列 欠損 値 最大 値 埋める	ds.fillna(ds.max())
色 差別 ない 折れ線 リスト リスト 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
ネイビー ヒストグラム 色 指定 する	plt.hist(データ列, color='navy')
入れる	import numpy as np
データ フレーム 列 グループ 分け し それぞれ グループ 毎 件数 知る	df.groupby(column).size()
行列 ユニーク な 要素 その 位置 求める	u, indices = np.unique(aArray, return_index=True)
個 リスト ビン 分割 し ラベル つける	pd.cut(aList, n, labels=names)
折れ線 グラフ 丸 マーカー 黒く する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
線 幅 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, linewidth=n)
日付 時刻 データ 日付 時刻 データ 後ろ	aDatetime > aDatetime2
小数点 以下 桁 文字 列 する	':.2f'.format(x)
データ フレーム 列 ソート する	df.sort_values(by='A')
折れ線 グラフ 描画 し 色 シルバー 変更 する	plt.plot(データ列, データ列2, color='silver')
オプション インディゴ 色 使う	color = 'indigo'
リスト イテラブル 散布 図 黒い 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c='k')
ヒストグラム 色 ペールグリーン 設定 する	plt.hist(データ列, color='palegreen')
折れ線 グラフ 色 青 紫 セット する	plt.plot(データ列, データ列2, color='violet')
配列 同じ 大き さ 空 配列 作る	np.empty_like(aArray)
ファイル エクセルファイル 読む	pd.read_excel(filename)
オプション ラベンダー 使う	color = 'lavender'
ヒストグラム 色 アクアマリン 設定 する	plt.hist(データ列, color='aquamarine')
リスト 配列 散布 図 描画 し マーカー 色 暗い 設定 する	plt.plot(xdata, ydata, c='dark')
データ フレーム インデックス 名前 まとめ 付け 直す	df.rename(index={name: name2})
点線 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, linestyle='dotted')
データ フレーム 各 列 毎 集計 し 列 最小 値 求める	df.groupby(column)[column2].min()
リスト 末尾 要素 ポップ する	aList.pop()
文字 列 変数 化 し パラメータ する	z = sympy.Symbol(s)
文字 列 部分 文字 列 分け た とき 後半 文字 列	s.partition(sub)[-1]
以下 それ 以上 調べる	n <= n2 or n >= n3
小数点 数 有限	math.isfinite(x)
文字 列 中 ひとつ 非 数字 含ま れる	any(not c.isdigit() for c in s)
整数 列	list(range(n+1))
配列 データ 列 折れ線 グラフ 描画 し ラベル付け する	plt.plot(xdata, ydata, label=untitled)
辞書 複製 する	dict(aDict)
ローン グリーン ヒストグラム 色 指定 する	plt.hist(データ列, color='lawngreen')
オプション 色 ダークオーキッド セット する	color = 'darkorchid'
ヒストグラム 描画 し その 色 ダークマゼンタ 設定 する	plt.hist(データ列, color='darkmagenta')
オプション グラフ 色 ライトスチールブルー 設定 する	color = 'lightsteelblue'
文字 列 最後 空白 区切る	s.rsplit()
日付 時刻 データ 分数	aDatetime.minute
折れ線 グラフ 色 ライム グリーン する	plt.plot(データ列, データ列2, color='limegreen')
データ フレーム 列 列 重複 削除 する	df.drop_duplicates(subset=column)
色 差別 ない 折れ線 グラフ 色 赤 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
リスト 文字 列 追加 する	aList.append(element)
折れ線 グラフ 色 淡い ピンク色 設定 する	plt.plot(データ列, データ列2, color='lightpink')
列 イテラブル ペア リスト 変換 する	itertools.zip_longest(iterable, iterable2)
データ フレーム 中 いくつ 欠損 値 ある カウント する	df.isna().sum()
データ フレーム エポック 秒 日付 型 変換 する	pd.to_datetime(df[col], unit='s', utc=True)
実数 小数点 以下 四捨五入 する	round(x)
黒色 ポイント マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c='k')
リスト 四 分 位 数 ごと ビン 分割 する	pd.qcut(aList, 4)
オプション ライトスレイグレー 使う	color = 'lightslategray'
リスト 配列 散布 図 赤色 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c='r')
パターン 文字 列 日付 時刻 する	datetime.datetime.strptime(日付の書かれた文字列, format)
オプション 色 ライト グレー 設定 する	color = 'lightgray'
濃い 色 柱状 図 リスト 描画 する	plt.hist(xdata, color='deep')
リスト 配列 暗い グラフ プロット し 色 青 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
文字 列 中 パターン 大文字 小文字 無視 し マッチ する 文字 列 探す	re.search(pattern, s, flags=re.IGNORECASE)
オプション グラフ 色 スラグレー 指定 する	color = 'slategray'
第 一 引数 指定 さ れ た ファイル 名前	sys.argv[1]
散布 図 赤い 四角 マーカー 使う	plt.plot(xdata, ydata, marker='s', c='r')
ランダム 重複 認め 行 データ フレーム サンプリング する	df.sample(n, replace=True)
最初 値 両端 キュー 取り除く	deq.remove(element)
平均 データ フレーム カラム 欠損 値 補う	df[col].fillna(df[col].mean())
ヒストグラム 描画 し その 色 ミディアムオーキッド 指定 する	plt.hist(データ列, color='mediumorchid')
両端 キュー 大き さ	len(deq)
グラフ 色 パステル 調 する	sns.set(pallete='pastel')
データ 列 まとめ 置換 する	ds.replace(ValueMap)
折れ線 グラフ バツ マーカー 線 幅 変更 する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
オプション ミント クリーム グラフ 色 変更 する	color = 'mintcream'
列 位 丸める	ds.round(-2)
日付 データ 月数	aDate.month
年 月 日 日付 時刻	datetime.datetime(year=year, month=month, day=day)
ベクトル 和	aArray + aArray2
データ フレーム 表示 する とき カラム 最大 幅 減らす	pd.set_option('max_colwidth', n)
ヒストグラム 描画 し その 色 トマト 設定 する	plt.hist(データ列, color='tomato')
セット イミュータブル な セット 変換 する	frozenset(aSet)
オプション アクアマリン 色 設定 する	color = 'aquamarine'
倍数	n % n2 == 0
オプション グラフ 色 ダークシアグリーン 設定 する	color = 'darkseagreen'
散布 図 黒い マーカー 用いる	plt.plot(xdata, ydata, marker='^', c='k')
オブジェクト 名前 付き タプル インスタンス 調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
マッピング 項目 名 指定 し た 値 ポップ する	aDict.pop(key)
リスト 各 要素 関数 適用 し た 結果 並べ 直す	sorted(aList, key=func)
折れ線 グラフ 描画 し その 色 シャルトリューズ 変更 する	plt.plot(データ列, データ列2, color='chartreuse')
リスト リスト パステル 調 グラフ 描い 色 黒 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
上位 集合 どう 調べる	aSet.issuperset(aSet2)
データ フレーム リスト カラム 中 いくつ 文字 列 ある 数える	df[aList].isin([value]).sum()
ヒストグラム 描画 し その 色 スプリング グリーン 設定 する	plt.hist(データ列, color='springgreen')
色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkslategrey')
散布 図 カラー コード ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.', c=rgb)
折れ線 グラフ 色 ディムグレー 設定 する	plt.plot(データ列, データ列2, color='dimgray')
グラフ 利用 可能 な 色 名 一覧 知る	matplotlib.colors.cnames
ヒストグラム 描画 し その 色 ビスク 指定 する	plt.hist(データ列, color='bisque')
マッピング 値 数	len(aDict)
三 数 最小 値	min(x, y, z)
リスト リスト 散布 図 赤い バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
整数 百 位 丸める	round(x, -2)
データ 列 十 位 四捨五入 し 整数 する	ds.round(-1).astype(int)
片仮名 ひ ら なに 変換 する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
オプション 色 グリーン イエロー 変更 する	color = 'greenyellow'
リスト イテラブル 散布 図 描画 し ダイアモンドマーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='D', c=rgb)
日付 時刻 データ 文字 列 フォーマット する	"aDatetime.strftime(""%d/%m/%y"")"
が 名前 付き タプル 調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
ラベンダー ヒストグラム 色 設定 する	plt.hist(データ列, color='lavender')
オプション ライトグリーン 色 使う	color = 'lightgreen'
高 頻出 方 カウンタ リスト し 得る	aCounter.most_common()
折れ線 グラフ 描画 し その 色 ディムグレー 変更 する	plt.plot(データ列, データ列2, color='dimgrey')
真 なら ない イテラブル 要素	itertools.dropwhile(predicateFunc, iterable)
ヒストグラム 描画 し 色 ペールグリーン 設定 する	plt.hist(データ列, color='palegreen')
オプション グラフ 色 ブルー バイオレット 設定 する	color = 'blueviolet'
散布 図 黒い 左 三 角 マーカー プロット する	plt.plot(xdata, ydata, marker='<', c='k')
マゼンタ 色 ヒストグラム 描画 する	plt.hist(データ列, color='magenta')
数式 変数 数式 置き換える	e.subs(z, e2)
折れ線 グラフ マーカー 緑色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
オプション ライトグリーン 用いる	color = 'lightseagreen'
ヒストグラム 描画 し その 色 ロージーブラウン 設定 する	plt.hist(データ列, color='rosybrown')
イエロー グリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='yellowgreen')
列 組み合わせ 得る	itertools.combinations(iterable, n)
文字 列 エポック 秒 日付 データ する	pd.to_datetime(s, unit='s', utc=True)
データ フレーム 中 文字 列 日付 データ 存在 する	df.isin([value, value2])
日付 時刻 データ 時間 分 減らす	aDatetime - datetime.timedelta(hours=n)
データ フレーム 中 列 四 分 位 数 ごと ビン 分割 する	pd.qcut(df[col], 4)
ふたつ 集合 差	aSet.difference(aSet2)
ヒストグラム 色 ダークスラテグレー 設定 する	plt.hist(データ列, color='darkslategray')
データ フレーム 列 中 いくつ 欠損 値 存在 する 数える	df[col].isna().sum()
折れ線 グラフ 大き さ 下 三角 印 描画 する	plt.plot(データ列, データ列2, marker='v', markersize=n)
実行 環境 確認 する	sys.platform.startswith('win32')
数列 リスト 濃い 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
折れ線 グラフ 色 白 変更 する	plt.plot(データ列, データ列2, color='white')
折れ線 グラフ 左 三 角 印 大き さ 指定 する	plt.plot(データ列, データ列2, marker='<', markersize=n)
配列 分散 計算 する	np.var(aArray)
サドル ブラウン ヒストグラム 色 設定 する	plt.hist(データ列, color='saddlebrown')
タプル チェーン する	collections.ChainMap(aDict, aDict2)
データ フレーム リスト 列 中 日付 データ いくつ ある 数える	df[aList].isin([value, value2]).sum()
ヒストグラム 描画 し その 色 ローン グリーン 変更 する	plt.hist(データ列, color='lawngreen')
文字 列 隔離 する	sys.intern(s)
ヒストグラム 描画 し その 色 ロージーブラウン 設定 する	plt.hist(データ列, color='rosybrown')
ふたつ 集合 共通 する 要素 なる 集合 求める	aSet.intersection(aSet2)
行列 式	np.linalg.det(aArray)
積み上げ 横 棒グラフ 描画 する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
文字 列 中 大文字 小文字 変換 する	s.lower()
実数 実数	x // y
紺色 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkblue')
ファイル パス 書き込み できる よう オープン する	open(filepath, mode='w', encoding='utf-8')
スラグレー ヒストグラム 色 設定 する	plt.hist(データ列, color='slategray')
データ 列 ビン 数 ビン 分割 する	pd.cut(ds, n)
線 グラフ 色 ナバホホワイト する	plt.plot(データ列, データ列2, color='navajowhite')
方程式 数式 変数 解 求める	sympy.solve(e, z)
イテラブル イミュータブル な 集合	frozenset(iterable)
複数 列 データ フレーム ソート し 先頭 来る よう する	df.sort_values(by=column, na_position='first')
ヒストグラム 色 ダーク バイオレット する	plt.hist(データ列, color='darkviolet')
値 下線 付き プリント する	print(f'\033[4m{value}\033[0m')
イテラブル 文字 列 リスト 変換 し カンマ 結合 する	','.join(map(str, iterable))
綺麗 な グラフ 使う	import seaborn as sns
辞書 コピー	dict(aDict)
エクセルファイルファイル 番目 シート データ フレーム 読む	pd.read_excel(filename, sheet_name=n)
データ フレーム カラム 位 四捨五入 し 整数 型 する	df[col].round(-2).astype(int)
データ フレーム 破壊 的 列 用い 並べ 直す	df.sort_values(by=column, inplace=True)
浮動 小数点 数 実数 加算 する	x + y
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
文字 列 最後 部分 文字 列 分け た とき 前半 文字 列 使う	s.rpartition(sub)[0]
ヒストグラム 色 ディムグレー 設定 する	plt.hist(データ列, color='dimgrey')
データ 列 何 曜日 見る	ds.dt.weekday_name
文字 列 全て 空白 文字 なる	s.isspace()
データ フレーム 各 カラム 列 組み合わせ 毎 グループ 化 し 分散 求める	df.groupby([column, column2], as_index=False).var()
文字 列 内 ひとつ 大文字 含ま れる どう 調べる	any(c.isupper() for c in s)
折れ線 グラフ 色 ライト コーラル 設定 する	plt.plot(データ列, データ列2, color='lightcoral')
イテラブル リスト 散布 図 描画 し マーカー クロス 設定 する	plt.plot(xdata, ydata, marker='x')
ヒストグラム 描画 し 色 ビスク 設定 する	plt.hist(データ列, color='bisque')
ヒストグラム 線 スタイル 点線 設定 する	plt.hist(データ列, linestyle='dotted')
データ フレーム 最小 値 変更 する	df.fillna(df.min())
カウンタ 共通 する 要素	aCounter & aCounter2
配列 標準 偏差	np.std(aArray)
二つ 文字 列 順に 表示 する	print(value, value2)
値 引い する	n -= n2
日付 時刻 データ 水曜日 調べる	aDatetime.weekday() == 2
割っ た 余り する	n %= n2
平均 値 データ フレーム 列 欠損 値 置き換える	df[col].fillna(df[col].mean())
データ フレーム 列 値 グループ 分け し 列挙 する	[(name, group) for name, group in df.groupby(column)]
進 文字 列 使う	oct(n)[2:]
オプション ライト グレー 用いる	color = 'lightgray'
双方向 キュー 順序 左 個 分 ロー テンション する	deq.rotate(-n)
リスト 展開 し プリント する	print(*aList)
ヒストグラム 描画 し 色 ダーク カーキ 設定 する	plt.hist(データ列, color='darkkhaki')
リスト 数列 散布 図 凡例 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='^')
折れ線 グラフ 右 三 角 マーカー 用いる	plt.plot(データ列, データ列2, marker='>')
データ 列 リスト 散布 図 プロット し 丸 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='o', c=rgb)
ヒストグラム 色 コーンフラワーブルー 設定 する	plt.hist(データ列, color='cornflowerblue')
線 グラフ 描画 し 色 ダーク グレー 変更 する	plt.plot(データ列, データ列2, color='darkgray')
折れ線 グラフ 下 三角 マーカー サイズ 設定 する	plt.plot(データ列, データ列2, marker='v', markersize=n)
イテラブル 軸 指定 し 配列 変遷 プロット する	plt.plot(range(len(xdata)), xdata)
実数 三 乗 計算 する	x ** 3
データ 列 データ 列 散布 図 描画 し 四角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='s', c=rgb)
実数 ルート	math.sqrt(x)
ファイル パス ファイル 名 取り出す	os.path.basename(filepath)
折れ線 グラフ 色 ライム グリーン 設定 する	plt.plot(データ列, データ列2, color='limegreen')
ヒストグラム 描画 し その 色 タン 設定 する	plt.hist(データ列, color='tan')
複数 行 対応 パターン 文字 列 分割 する	re.split(pattern, s, flags=re.MULTILINE)
双方向 キュー 左側 要素 つけ加える	deq.appendleft(element)
データ フレーム それぞれ グループ ごと 分散	df.groupby(column).var()
ダイアモンドマーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D')
リスト リスト パステル 調 グラフ 描い 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
横 棒グラフ 描画 する	plt.barh(ラベル列, データ列)
部分 文字 列 文字 列 終了 位置 以前 含ま れる	s.find(sub, 0, end) != -1
データ フレーム 列 型 変換 する	df[col] = df[col].astype(ty)
数列 数列 散布 図 描い マーカー ポイント 設定 する	plt.plot(xdata, ydata, marker='.')
折れ線 グラフ 四角 マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='s', markersize=n)
分割 数 配列 ビン 分割 する	pd.cut(aArray, n)
シーケンス カウンタ 変換 する	collections.Counter(iterable)
データ フレーム 中 文字 列 ある	df.isin([value])
オプション 色 ライト グレー 設定 する	color = 'lightgrey'
配列 ヒストグラム 可視 化 する	plt.hist(aArray)
文字 列 大文字 小文字 入れ替える	s.swapcase()
文字 列 右端 改行 取り除く	s.rstrip('\n')
ヒストグラム 描画 し その 色 ダークオーキッド 設定 する	plt.hist(データ列, color='darkorchid')
わる 求める	n / n2
折れ線 グラフ 青い 菱形 マーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
等しい 確認 する	n == n2
リスト 暗い 色 柱状 図 描画 する	plt.hist(xdata, color='dark')
リスト リスト 濃い グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
データ フレーム カラム 四捨五入 する	df[col].round()
リスト 配列 散布 図 カラー コード 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c=rgb)
文字 列 エポック 秒 日付 データ 変換 する	pd.to_datetime(s, unit='s', utc=True)
文字 列 漢字 ある	re.search('[\u4E00-\u9FD0]', s)
データ フレーム 表示 する とき 表示 可能 な 最大 列 数 増やす	pd.set_option('display.max_columns', n)
イテラブル データ 列 散布 図 カラー コード クロス マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c=rgb)
リスト イテラブル カラー コード 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
分割 数 データ 列 等量 ビンニング する	pd.qcut(ds, n)
データ 列 欠損 値 直前 値 埋める	ds.fillna(method='ffill')
文字 列 中 パターン ケース 無視 し マッチ する 文字 列 探す	re.search(pattern, s, flags=re.IGNORECASE)
データ フレーム データ 型 一覧 見る	df.dtypes
ヒストグラム 色 ライトゴールドロディイエロー 設定 する	plt.hist(データ列, color='lightgoldenrodyellow')
オプション マーカー 左 三 角 変更 する	marker = '<'
配列 配列 暗い グラフ 描画 し その 色 青く する	plt.plot(xdata, ydata, linestyle='dark', color='b')
行列 ユニーク な 要素 求める	np.unique(aArray)
データ フレーム 列 値 集計 し 列挙 する	[(name, group) for name, group in df.groupby('A')]
セット 空 集合 で ない	len(aSet) != 0
ファイル 小数点 以下 桁 データ フレーム 保存 する	df.to_csv(filename, float_format='%.3f')
折れ線 グラフ 描画 し 色 シアン 設定 する	plt.plot(データ列, データ列2, color='cyan')
散布 図 色 差別 ない 色 マーカー 描画 する	plt.plot(xdata, ydata, c='colorblind')
アリス ブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='aliceblue')
データ 列 欠損 値 最大 値 変更 する	ds.fillna(ds.max())
オブジェクト リスト 要素 で ない 調べる	element not in aList
折れ線 グラフ 赤い バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
データ フレーム 二つ 列 小さい 順 ソート する	df.sort_values(by=['A', 'B'], ascending=True)
ヒストグラム 描画 し その 色 ピーチ パフ 設定 する	plt.hist(データ列, color='peachpuff')
ヒストグラム 色 スラグレー 指定 する	plt.hist(データ列, color='slategrey')
折れ線 グラフ 描画 し 色 青く する	plt.plot(データ列, データ列2, color='b')
実数 正接	math.tan(x)
データ フレーム カラム 何 分 確認 する	df[col].dt.minute
二つ リスト 辞書	dict(zip(aList, aList2))
ヒストグラム つ 並べて 描画 する	plt.hist([データ列, データ列2], color=['b', 'r'])
散布 図 黒い 三角 マーカー 使用 する	plt.plot(xdata, ydata, marker='^', c='k')
配列 数列 パステル 調 グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
ヒストグラム 色 設定 する	plt.hist(データ列, color='darkslategrey')
グラフ グリッド 線 付ける	plt.grid(True)
ヒストグラム 描画 し その 色 ペルー する	plt.hist(データ列, color='peru')
線 グラフ 描画 し その 色 デピンク 設定 する	plt.plot(データ列, データ列2, color='deeppink')
オプション マーカー ポイント 変更 する	marker = '.'
ブラック 色 ヒストグラム 描画 する	plt.hist(データ列, color='black')
折れ線 グラフ 左 三 角 マーカー 加える	plt.plot(データ列, データ列2, marker='<')
オプション マーカー 丸 変更 する	marker = 'o'
赤い バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
文字 列 シンボル し 変数 する	z = sympy.Symbol(s)
折れ線 グラフ 黄色い 星 マーカー 描画 する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
ヒストグラム 色 サンディーブラウン 指定 する	plt.hist(データ列, color='sandybrown')
プラットホーム 調べる	sys.platform.startswith('darwin')
データ フレーム カラム 正規 分布 どの 程度 歪ん いる 見る	df[col].kurt()
データ フレーム 列 グループ 化 し グループ ごと 標準 偏差 求める	df.groupby(column).std()
イテラブル 自身 回 あわせ た デカルト 積	itertools.product(iterable, repeat=2)
折れ線 グラフ 緑色 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
破線 色 淡い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
文字 列 最後 部分 文字 列 二 分割 する	s.rpartition(sub)
列 列 続け た イテラブル	itertools.chain(iterable, iterable2)
カラー パレット パステル 調 する	sns.set(pallete='pastel')
小数点 以下 桁 プリント する	print(':.5f'.format(x))
疑似 乱数 平均 標準 偏差 生成 する	random.normalvariate(mu=0.5, sigma=0.2)
列 列 重複 取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
文字 列 パターン 日付 時刻 変換 する	datetime.datetime.strptime(日付の書かれた文字列, format)
紺 ヒストグラム 色 設定 する	plt.hist(データ列, color='darkblue')
文字 列 積極 的 小文字 変換 する	s.casefold()
暗い グラフ 色 黒 する	plt.plot(xdata, ydata, linestyle='dark', color='k')
横 棒グラフ 描い グラフ 幅 設定 する	plt.barh(ラベル列, データ列, width=x)
グラフ 論文 用 設定 する	sns.set(context='paper')
データ フレーム 千 位 丸める	df.round(-3)
コーンフラワーブルー ヒストグラム 色 指定 する	plt.hist(データ列, color='cornflowerblue')
列 各 要素 真 で あれ その 要素 出力 する	itertools.takewhile(predicateFunc, iterable)
データ フレーム 各 列 毎 グループ 化 し 列 平均 値 算出 する	df.groupby(column)[column2].mean()
オプション ビスク 色 使う	color = 'bisque'
データ フレーム カラム 母 標準 偏差	df[col].std(ddof=0)
ヒストグラム 描画 し その 色 ビスク 設定 する	plt.hist(データ列, color='bisque')
リスト リスト 色 差別 ない グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
	np.linalg.eig(aArray)
データ 列 各 データ 何 回 出現 する 見る	ds.value_counts()
カラー コード 三角 マーカー リスト 配列 散布 図 描く	plt.plot(xdata, ydata, marker='^', c=rgb)
線 グラフ 色 コーラル 設定 する	plt.plot(データ列, データ列2, color='coral')
一 桁 数 調べる	0 <= n <= 9
散布 図 黒い 菱形 マーカー 使う	plt.plot(xdata, ydata, marker='D', c='k')
負 数 調べる	n < 0
折れ線 グラフ 大き さ バツ 印 描画 する	plt.plot(データ列, データ列2, marker='x', markersize=n)
つ データ 列 並べ 柱状 図 する	plt.hist([データ列, データ列2], color=['b', 'r'])
データ フレーム リスト カラム 中 文字 列 文字 列 含ま れる	df[aList].isin([value, value2])
範囲 指定 し 部分 文字 列 文字 列 右側 探す	s.find(sub, start, end)
グラフ 全般 的 濃く する	sns.set(pallete='deep')
グラフ 描く	from sympy import N
ヒストグラム 描画 し 色 ダークスレートブルー 指定 する	plt.hist(データ列, color='darkslateblue')
日付 時刻 データ 月曜日	aDatetime.weekday() == 0
オプション ダークシアグリーン 色 使う	color = 'darkseagreen'
オプション エクセルファイル シート 名前 設定 する	sheet_name = names
折れ線 グラフ 描画 し その 色 パウダー ブルー 設定 する	plt.plot(データ列, データ列2, color='powderblue')
ベージュ ヒストグラム 色 設定 する	plt.hist(データ列, color='beige')
折れ線 グラフ 緑色 左 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
オプション グラフ 色 ゲインズボロ 指定 する	color = 'gainsboro'
オプション どの 行 ヘッダ し ない	header = None
線 グラフ 色 サーモン 変更 する	plt.plot(データ列, データ列2, color='salmon')
データ フレーム 列 グループ 分け し 各 グループ ごと 個数 求める	df.groupby(column).count()
文字 列 走査 し 正規 表現 限定 マッチ する 見る	re.search(pattern, s, flags=re.ASCI)
散布 図 黒い マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='k')
縦 つ データ フレーム 一つ する	pd.concat([df, df2, df3], axis=0)
データ フレーム 列 降順 破壊 的 ソート する	df.sort_values(by=column, ascending=False, inplace=True)
カラム 第 一 四 分 位 数 求める	ds.quantile(0.25)
アルファベット 文字 列 内 ある 調べる	any(c.isalpha() for c in s)
リスト リスト 散布 図 カラー コード 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<', c=rgb)
割る 切り上げ	(n + n2 - 1) // n2
リスト データ 列 濃い 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
文字 列 末尾 部分 文字 列 除去 する	s.rstrip(sub)
値 シアン する	f'\033[36m{value}\033[0m'
フクシア ヒストグラム 色 設定 する	plt.hist(データ列, color='fuchsia')
線 グラフ 描画 し 色 ナバホホワイト 設定 する	plt.plot(データ列, データ列2, color='navajowhite')
整数 八 進 文字 列 変換 する	oct(n)[2:]
データ フレーム 重複 し た 行 ドロップ し インプレイス する	df.drop_duplicates(inplace=True)
ヒストグラム 描画 し その 色 ダークゴールデンロッド 設定 する	plt.hist(データ列, color='darkgoldenrod')
データ 列 分割 数 ビンニング する	pd.cut(ds, n)
日付 データ 時間 分 加える	aDate + datetime.timedelta(hours=n)
リスト 数列 破線 グラフ 描い その 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
ファイル バイナリ 書き込み モード オープン し する	f = open(filepath, mode='wb')
オプション 先頭 行 ヘッダ 指定 する	header = 0
コーンズシルク 色 ヒストグラム 描画 する	plt.hist(データ列, color='cornsilk')
リスト 等量 ビン 数 ビン 分割 する	pd.qcut(aList, n)
ゼロ 埋め し た ビット 整数 型 配列	np.zeros(要素数, dtype=np.int8)
マップ 項目 名 ない とき 要素 追加 する	aDict.setdefault(key, element)
明るい 色 折れ線 グラフ 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
ヒストグラム 描画 し その 色 ディムグレー 指定 する	plt.hist(データ列, color='dimgray')
オプション ライト ブルー 色 使う	color = 'lightblue'
データ フレーム カラム 欠損 値 前 行 値 設定 する	df[col].fillna(method='ffill')
オプション グラフ 種類 一 点 鎖線 変更 する	linestyle = 'dashbot'
散布 図 赤い 四角 マーカー 描く	plt.plot(xdata, ydata, marker='s', c='r')
リスト 順に プリント する	print(*aList)
オプション ライトスレイグレー グラフ 色 設定 する	color = 'lightslategray'
変数 太字 表示 できる 文字 列 する	f'\033[1m{value}\033[0m'
文字 列 中 複数 行 対応 正規 表現 全て マッチ 見る	re.findall(pattern, s, flags=re.MULTILINE)
列 キー し 二つ データ フレーム ジョイン する	pd.merge(df, df2, on=column)
オプション 線 種 一 点 鎖線 する	linestyle = 'dashbot'
辞書 全 項目 クリア する	aDict.clear()
折れ線 グラフ 色 スプリング グリーン 設定 する	plt.plot(データ列, データ列2, color='springgreen')
全 要素 初期 化 さ れ た 符号 なし ビット 整数 型 行列 作る	np.zeros(行数, 列数, dtype=np.uint8)
データ フレーム 各 カラム 毎 グループ 化 し 列 合計 求める	df.groupby(column)[column2].sum()
数値 赤色 する	f'\033[31m{value}\033[0m'
データ フレーム 各 列 毎 グループ 化 し 列 最小 値 求める	df.groupby(column)[column2].min()
今日 火曜日 調べる	datetime.datetime.today().weekday() == 1
データ フレーム 二つ 列 昇順 並べる	df.sort_values(by=['A', 'B'], ascending=True)
等しい 識別子	None
暗い ヒストグラム 描画 する	plt.hist(xdata, color='dark')
明日 日付 使う	datetime.date.today() + datetime.timedelta(days=1)
グラフ 大き さ 指定 する	plt.figure(figsize=(width, height))
文字 列 中 部分 文字 列 含ま れる どう	sub in s
列 文字 列 変換 し 連結 する	''.join(map(str, iterable))
暗い 色 データ 列 ヒストグラム 描画 する	plt.hist(xdata, color='dark')
オブジェクト 辞書 クラス 調べる	isinstance(obj, dict)
データ フレーム 重複 確認 する	df.duplicated()
真 確認 する	bool(x)
リスト イミュータブル する	tuple(aList)
リスト 配列 散布 図 描画 し 色 淡い 指定 する	plt.plot(xdata, ydata, c='muted')
明るい グラフ 色 青色 指定 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
折れ線 グラフ 四角 マーカー 加える	plt.plot(データ列, データ列2, marker='s')
リスト 番目 要素 消す	del aList[n]
データ フレーム グループ 化 し それぞれ 列 最大 値 計算 する	df.groupby(column)[column2].max()
リスト リスト 散布 図 描画 し マーカー 三角 設定 する	plt.plot(xdata, ydata, marker='^')
実数 双曲線 正接 逆数 求める	math.atanh(x)
文字 列 開始 位置 終了 位置 範囲 部分 文字 列 登場	s.count(sub, start, end)
データ フレーム 丸め 整数 する	df.round().astype(int)
リスト リスト 散布 図 描画 し マーカー ポイント 設定 する	plt.plot(xdata, ydata, marker='.')
ヒストグラム 色 クリムゾン 設定 する	plt.hist(データ列, color='crimson')
アルファベット 大文字 列	string.ascii_uppercase
漢字 文字 列 含ま れる 調べる	re.search('[\u4E00-\u9FD0]', s)
データ フレーム 最初 行	df.head(n)
真 部分 集合 どう	aSet < aSet2
実数 十 位 四捨五入 する	round(x, -1)
黒色 色 差別 ない 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
折れ線 グラフ 破線 描画 する	plt.plot(データ列, データ列2, linestyle='dashed')
データ フレーム 列 小さい 順 ソート する	df.sort_values(by=column, ascending=True)
小数点 数 以上 最小 整数 求める	math.ceil(x)
データ フレーム リスト カラム 未 入力 値 中央 値 設定 する	df[aList].fillna(df[aList].median())
横 棒グラフ 描画 し グラフ 幅 設定 する	plt.barh(ラベル列, データ列, width=x)
ヒストグラム 描画 し 色 ブラック 設定 する	plt.hist(データ列, color='black')
ベクトル 重複 除い た 行列 作る	np.unique(aArray)
文字 列 マゼンタ 化 する	f'\033[35m{value}\033[0m'
ファイル データ フレーム 書き込む	df.to_csv(filename, sep='\t')
データ フレーム 各 列 列 組み合わせ 毎 グループ 分け し 合計 求める	df.groupby([column, column2], as_index=False).sum()
ヒストグラム 色 インディアン レッド 設定 する	plt.hist(データ列, color='indianred')
線 グラフ 描画 し その 色 ディムグレー 設定 する	plt.plot(データ列, データ列2, color='dimgray')
現在 火曜日	datetime.datetime.today().weekday() == 1
文字 列 開始 位置 終了 位置 間 部分 文字 列 含ま れる 調べる	s.find(sub, start, end) != -1
データ フレーム カラム 中 日付 データ 存在 する 調べる	df[col].isin([value])
オプション グラフ 色 プラム する	color = 'plum'
オプション タブ セパレータ 使用 する	sep = '\t'
ヒストグラム 描画 し その 色 マゼンタ 指定 する	plt.hist(データ列, color='magenta')
ヒストグラム 描画 し その 色 インディアン レッド 設定 する	plt.hist(データ列, color='indianred')
平均 値 標準 偏差 疑似 乱数 算出 する	random.normalvariate(mu=0.5, sigma=0.2)
折れ線 グラフ 描画 し 色 ダーク グリーン 設定 する	plt.plot(データ列, データ列2, color='darkgreen')
オプション グラフ 色 ピーチ パフ 設定 する	color = 'peachpuff'
文字 列 キーワード	keyword.iskeyword(s)
相関 可視 化 する	plt.scatter(xdata, ydata)
マスク さ れ た イテラブル 要素 取り出す	itertools.compress(iterable, selectors=iterable2)
折れ線 グラフ ポイント マーカー 青く する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
オプション コーンフラワーブルー 使う	color = 'cornflowerblue'
データ フレーム 列 値 ごと 集約 し 各 グループ 毎 標準 偏差 求める	df.groupby(column).std()
赤い 下 三角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='v', c='r')
データ フレーム 列 列 ヒートマップ 描画 する	sns.heatmap(df[[column, column2]].corr())
濃い 色 重 見やすく イテラブル 数列 散布 図 描画 する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
文字 列 中 正規 表現 新しい 文字 列 置き換える	re.sub(pattern, newsub, s)
折れ線 グラフ 黄色い バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
数列 リスト 色 差別 ない グラフ 描い 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
データ フレーム 確認 する	df.head()
ファイル パス オープン する	open(filepath, encoding='shift_jis')
散布 図 下 三角 マーカー 使用 する	plt.plot(xdata, ydata, marker='v')
データ フレーム リスト 列 値 一 度 置き換える	df[aList].replace(ValueMap)
折れ線 グラフ 描画 し その 色 ダークオーキッド 設定 する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線 グラフ 色 ミディアムバイオレットレッド 変更 する	plt.plot(データ列, データ列2, color='mediumvioletred')
ファイル パス ストリーム 読み込ん する	file = open(filepath)
値 足し 代入 する	n += n2
実行 時 標準 出力 出力 先 ターミナル 調べる	sys.stdout.isatty()
オプション ライト サーモン グラフ 色 セット する	color = 'lightsalmon'
リスト 数列 散布 図 ダイアモンドマーカー プロット する	plt.plot(xdata, ydata, marker='D')
カラー コード 丸 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='o', c=rgb)
実数 実数 掛ける	x * y
ヒストグラム 描画 し その 色 ディムグレー 設定 する	plt.hist(データ列, color='dimgrey')
オプション マゼンタ 使う	color = 'magenta'
スピアマン 相関 係数 データ フレーム 列 列 相関 行列	df[[column, column2]].corr(method='spearman')
データ フレーム 指定 さ れ た 列 名前 一覧 列 抽出 する	df[columns]
ヒストグラム 色 ミディアムバイオレットレッド 設定 する	plt.hist(データ列, color='mediumvioletred')
データ フレーム 複数 列 降順 破壊 的 ソート する	df.sort_values(by=column, ascending=False, inplace=True)
デフォルト 見栄え 適用 する	sns.set()
タプル 値 昇順 並べる	sorted(aTuple, reverse=True)
オプション ダーク グレー グラフ 色 設定 する	color = 'darkgrey'
文字 列 いつ 繰り返す イテラブル 得る	itertools.repeat(element)
二つ リスト コロン 区切っ プリント する	print(value, value2, sep=':')
既存 ベクトル ベース 全 要素 配列	np.ones_like(aArray)
データ フレーム 列 名 リスト 整列 し 先頭 来る よう する	df.sort_values(by=column, na_position='first')
データ フレーム 中 欠損 値 削除 する	df.dropna()
回 文字 列 繰り返す イテラブル	itertools.repeat(element, n)
既存 ファイル 文字 列 示す エン コーディング 追加 できる よう オープン する	open(filepath, mode='a', encoding=s)
タプル 要素 小さい 順 ソート する	sorted(aTuple, reverse=False)
ミディアムパープル 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mediumpurple')
赤い バツ マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
データ 列 ラベル 列 指定 し 積み上げ 棒 描画 する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
折れ線 グラフ 星 マーカー 線 幅 変更 する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
ヒストグラム 色 フォレストグリーン する	plt.hist(データ列, color='forestgreen')
折れ線 グラフ 線 幅 丸 印 描画 する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
シーケンス 文字 列 変換 し カンマ 連結 する	','.join(map(str, iterable))
折れ線 グラフ 描画 し その 色 シーグリーン 変更 する	plt.plot(データ列, データ列2, color='seagreen')
ヒストグラム 描画 し その 色 クリムゾン 設定 する	plt.hist(データ列, color='crimson')
整数 個 個 取り出し た とき 順列 総数 計算 する	math.perm(n, k)
データ 列 文字 列 未 入力 値 する	ds.replace(s, np.nan)
ヒストグラム 描画 し その 色 茶色 する	plt.hist(データ列, color='brown')
赤い 右 三 角 マーカー データ 列 データ 列 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c='r')
折れ線 グラフ ダイアモンドマーカー 赤く する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
散布 図 暗い 色 マーカー 使う	plt.plot(xdata, ydata, c='dark')
タプル 逆さ する	reversed(aTuple)
割り切れる	n % 2 == 0
折れ線 グラフ 描画 し その 色 グレー 設定 する	plt.plot(データ列, データ列2, color='gray')
データ 列 配列 散布 図 上 三 角 マーカー プロット する	plt.plot(xdata, ydata, marker='^')
割り切れ ない どう 調べる	n % n2 != 0
ダーク グレー 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkgray')
配列 配列 散布 図 カラー コード 菱形 マーカー 描く	plt.plot(xdata, ydata, marker='D', c=rgb)
データ フレーム 標準 偏差	df.std()
リスト リスト 散布 図 描画 し マーカー ダイアモンド 設定 する	plt.plot(xdata, ydata, marker='D')
折れ線 グラフ 描画 し 色 プラム 指定 する	plt.plot(データ列, データ列2, color='plum')
日付 データ 日付 データ 時間 差 何 分 知る	(aDate - aDate2).total_seconds()//60
タプル 合計 値	sum(aTuple)
折れ線 グラフ 描画 し 色 レベッカパープル する	plt.plot(データ列, データ列2, color='rebeccapurple')
別 文字 列 文字 列 全部 置き換える	s.replace(sub, newsub)
データ フレーム 複数 列 降順 破壊 的 並べる	df.sort_values(by=column, ascending=False, inplace=True)
線 グラフ 色 ミディアムバイオレットレッド セット する	plt.plot(データ列, データ列2, color='mediumvioletred')
散布 図 明るい 色 マーカー 使う	plt.plot(xdata, ydata, c='bright')
番目 カラム 行 し ファイル 読み込む	pd.read_csv(filename, index_col=n)
二 進数 文字 列 バイト バイナリ 変換 する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
日付 データ 分 分 加算 する	aDate + datetime.timedelta(minutes=n)
ヒストグラム 描画 し その 色 赤 設定 する	plt.hist(データ列, color='red')
折れ線 グラフ 描画 し その 色 青 設定 する	plt.plot(データ列, データ列2, color='blue')
オプション セパレータ 使わ ない	sep = ''
折れ線 透明 度 変更 する	plt.plot(xdata, ydata, alpha=alpha)
入力 ストリーム 文字 読み込む	f.read(1)
追加 モード ファイル オープン し する	f = open(filepath, mode='a')
データ 列 位 丸め 整数 する	ds.round(-2).astype(int)
リスト ヒストグラム 色 差別 ない 用い 描画 する	plt.hist(xdata, color='colorblind')
配列 イテラブル 散布 図 描画 し 色 暗い 設定 する	plt.plot(xdata, ydata, c='dark')
折れ線 グラフ 大 バツ 印 黒色 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
データ フレーム 欠損 値 直後 値 置き換える	df.fillna(method='bfill')
赤い ダイアモンドマーカー 数列 イテラブル 散布 図 描画 する	plt.plot(xdata, ydata, marker='D', c='r')
リスト 長 さ 制限 する	collections.deque(iterable, maxlen=n)
ヒストグラム 描画 し その 色 ライム グリーン 設定 する	plt.hist(データ列, color='limegreen')
データ 列 ラベル 指定 し 縦 棒グラフ 描く	plt.bar(ラベル列, データ列)
データ 列 折れ線 グラフ 描画 し マーカー 上 三 角 印 する	plt.plot(データ列, データ列2, marker='^')
数列 リスト 散布 図 描画 し マーカー 星 設定 する	plt.plot(xdata, ydata, marker='*')
折れ線 グラフ 描画 し 色 グレー 設定 する	plt.plot(データ列, データ列2, color='grey')
オプション 改行 し ない	end = ''
線 幅 下 三角 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
データ フレーム ファイル 読む	pd.read_csv(filename, sep=',')
データ フレーム 一 度 整数 四捨五入 する	df.round()
正規 表現 一 度 データ フレーム リスト カラム 値 置き換える	df[aList].replace(pattern, repl, regex=True)
淡い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='muted')
オプション 深紅 色 使う	color = 'crimson'
データ フレーム 関数 まとめ た 表 使う	df.groupby(関数)
濃い イテラブル ヒストグラム 描く	plt.hist(xdata, color='deep')
時間 文字 列 タイム スタンプ 変換 する	pd.to_datetime(s, unit='s', utc=True)
オプション グラフ 色 ダーク カーキ 設定 する	color = 'darkkhaki'
オプション グラフ 色 アイボリー 設定 する	color = 'ivory'
折れ線 グラフ 描画 し 色 ピーチ パフ 設定 する	plt.plot(データ列, データ列2, color='peachpuff')
棒 描画 し 幅 設定 する	plt.bar(ラベル列, データ列, width=x)
折れ線 グラフ 描画 し その 色 ライトスレイグレー 設定 する	plt.plot(データ列, データ列2, color='lightslategrey')
データ フレーム それぞれ グループ 標準 偏差	df.groupby(column).std()
文字 列 中 大文字 小文字 無視 し パターン マッチ 使う	re.findall(pattern, s, flags=re.IGNORECASE)
オブジェクト リスト 要素	element in aList
二つ 関係 スーパー セット もしくは 等しい 調べる	aSet > aSet2
列 第 三 四 分 位 数	ds.quantile(0.75)
折れ線 グラフ 三角 印 加える	plt.plot(データ列, データ列2, marker='^')
データ フレーム リスト カラム 分 位 数 求める	df[aList].quantile(percent/100)
散布 図 クロス マーカー 描画 する	plt.plot(xdata, ydata, marker='x')
パレットトルコイズ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='paleturquoise')
データ フレーム 列 列 値 グループ 化 する	df.groupby(['A', 'B'])
赤色 暗い 描画 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
オプション 左 三 角 マーカー 使う	marker = '<'
データ フレーム 列 文字 列 始まら ない 行 抽出 する	df[not df[column].str.startswith(s)]
折れ線 グラフ 描画 し その 色 ダーク グレー 設定 する	plt.plot(データ列, データ列2, color='darkgrey')
両端 キュー 空 で ない どう	len(deq) != 0
新しい 文字 列 文字 列 中 正規 表現 置き換える	re.sub(pattern, newsub, s)
リスト リスト カラー コード 明るい 描く	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
ふたつ 関係 真 上位 集合 調べる	aSet > aSet2
濃い グラフ 描画 し その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
文字 列 黄色 する	f'\033[33m{value}\033[0m'
文字 列 中 ひとつ 非 空白 含ま れる 調べる	any(not c.isspace() for c in s)
ピアソン 相関 係数 データ フレーム リスト 指定 し た カラム 相関 行列	df[aList].corr(method='pearson')
データ フレーム 列 グループ 化 し それぞれ グループ ごと 分散 求める	df.groupby(column).var()
線 グラフ 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightseagreen')
ヒストグラム 描画 し その 色 リネン 設定 する	plt.hist(データ列, color='linen')
一 点 鎖線 ヒストグラム 線 スタイル 設定 する	plt.hist(データ列, linestyle='dashbot')
最小 値 データ フレーム 欠損 値 補う	df.fillna(df.min())
リスト 内 要素 全て 真 確認 する	all(aList)
進 対数 求める	math.log(x, k)
配列 合計 値	np.sum(aArray)
文字 列 全て 小文字 変換 する	s.lower()
ヒストグラム 描画 し その 色 オレンジ する	plt.hist(データ列, color='orange')
部分 文字 列 文字 列 最初 探す	s.find(sub)
配列 リスト 散布 図 描画 し マーカー 四角 設定 する	plt.plot(xdata, ydata, marker='s')
配列 全 要素 値 変更 する	aArray[:, :] = 指定の値
データ 列 各 データ 値 出現 回数 計算 する	ds.value_counts()
ヒストグラム 描画 し 色 アリスブルー 設定 する	plt.hist(データ列, color='aliceblue')
集合 要素 取り除く	aSet.remove(element)
リスト リスト 折れ線 グラフ 描画 し その 色 カラー コード 設定 する	plt.plot(xdata, ydata, color=rgb)
二つ 集合 共通 要素 持た ない どう 調べる	aSet.isdisjoint(aSet2)
線 グラフ 描画 し その 色 ミスティローズ 指定 する	plt.plot(データ列, データ列2, color='mistyrose')
辞書 カウンタ する	collections.Counter(aDict)
オプション オリベドラブ 使う	color = 'olivedrab'
グラフ ポスター 用 セット する	sns.set(context='poster')
データ フレーム 関数 まとめ た グループ	df.groupby(関数)
ファイル ファイルサイズ	os.path.get_size(filepath)
辞書 項目 名 対応 し た 値	aDict.get(key)
両端 キュー 番目 番目 要素 求める	collections.deque(itertools.islice(deq, start, end))
折れ線 グラフ 左 三 角 印 線 幅 指定 する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
カラー コード ポイント マーカー イテラブル データ 列 散布 図 描画 する	plt.plot(xdata, ydata, marker='.', c=rgb)
データ フレーム 列 集約 する	df.groupby(column)
イテラブル 文字 列 リスト 変換 し 改行 連結 する	'\n'.join(map(str, iterable))
文字 列 文字 コード 列 変換 する	[ord(ch) for ch in s]
データ 列 リスト カラー コード 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
数値 時刻 データ フレーム 日付 データ 変換 する	pd.to_datetime(df[col], unit='s', utc=True)
暗い 折れ線 グラフ 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
マップ 一覧	aDict.values()
形式 文字 列 日付 時刻 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
部分 文字 列 部分 文字 列 始まる 調べる	s.startswith(sub)
折れ線 グラフ 描画 し その 色 フクシア セット する	plt.plot(データ列, データ列2, color='fuchsia')
オプション ダーク オリーブ グリーン 色 使う	color = 'darkolivegreen'
エン コーディング 文字 列 バイト 列 変換 する	s.encode(encoding=encoding)
両端 キュー 中 要素 数 カウント する	deq.count(element)
アルファ 折れ線 グラフ 描く	plt.plot(xdata, ydata, alpha=alpha)
データ 列 欠損 値 最大 値 補う	ds.fillna(ds.max())
整数 ビット 長	n.bit_length()
文字 列 ケース 無視 し 正規 表現 分割 する	re.split(pattern, s, flags=re.IGNORECASE)
折れ線 グラフ 印 大き さ 指定 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
リスト 平均	sum(aList)/len(aList)
折れ線 グラフ 描画 し 色 スカイ ブルー 設定 する	plt.plot(データ列, データ列2, color='skyblue')
データ フレーム 列 名前 文字 列 文字 列 置換 する	df.columns = [str(x).replace(s, s2) for x in df.columns]
オプション 色 ピーチ パフ 変更 する	color = 'peachpuff'
オプション グラフ 色 グレー 設定 する	color = 'gray'
オプション グラフ 色 ブランチドアーモンド 設定 する	color = 'blanchedalmond'
折れ線 グラフ 色 スチール ブルー 指定 する	plt.plot(データ列, データ列2, color='steelblue')
ヒストグラム 描画 し その 色 バリーウッド 設定 する	plt.hist(データ列, color='burlywood')
ヒストグラム 描画 し 色 コーンフラワーブルー 指定 する	plt.hist(データ列, color='cornflowerblue')
ヒストグラム 描画 し その 色 ゲインズボロ 指定 する	plt.hist(データ列, color='gainsboro')
黒い ダイアモンドマーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D', c='k')
辞書 キー 指定 さ れ た 項目 ポップ する	aDict.pop(key)
列 配列 作る	np.array(iterable)
データ フレーム 未 入力 値 最 頻 値 セット する	df.fillna(df.mode().iloc[0])
青い パステル 調 グラフ プロット する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
データ フレーム 中 文字 列 いくつ ある 数える	df.isin([value, value2]).sum()
折れ線 グラフ 描画 し その 色 マルーン 変更 する	plt.plot(データ列, データ列2, color='maroon')
データ フレーム 列 列 各 列 間 相関 係数 求める	df[[column, column2]].corr()
辞書 キーワード 引数 追加 する	aDict.update(**kwargs)
データ フレーム カラム 未 入力 値 最 頻 値 埋める	df[col].fillna(df[col].mode().iloc[0])
淡い 色 ヒストグラム プロット する	plt.hist(xdata, color='muted')
折れ線 グラフ 描画 し 色 イエロー グリーン 設定 する	plt.plot(データ列, データ列2, color='yellowgreen')
データ フレーム リスト カラム パーセンタイル	df[aList].quantile(percent/100)
データ フレーム 各 グループ ごと 個数 計算 する	df.groupby(column).count()
データ フレーム 行 目 削除 する	df.drop(n, axis=0)
小数点 以下 桁 プリント する	print(':.4f'.format(x))
文字 列 全て 十 進 数字	s.isdecimal()
オプション ダーク グリーン 色 使う	color = 'darkgreen'
棒 色 設定 する	plt.bar(ラベル列, データ列, color=rgb)
オプション イエロー グリーン グラフ 色 設定 する	color = 'yellowgreen'
ユーザ 入力 さ れる	input()
折れ線 グラフ 大き さ ポイント 印 描画 する	plt.plot(データ列, データ列2, marker='.', markersize=n)
データ フレーム 欠損 値 直前 値 設定 する	df.fillna(method='ffill')
無限 カウントダウン する	itertools.count(start=n, step=-1)
線 幅 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
オブジェクト 数値	isinstance(obj, (int,float))
散布 図 黒い 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X', c='k')
データ フレーム 欠損 値 最 頻 値 指定 する	df.fillna(df.mode().iloc[0])
ヒストグラム 描画 し その 色 ミスティローズ 指定 する	plt.hist(データ列, color='mistyrose')
列 リスト 境界 値 分割 する	pd.cut(ds, aList)
グラフ 目的 画面 設定 する	sns.set(context='notebook')
リスト リスト パステル 調 の 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
オプション ブラウン 色 使用 する	color = 'brown'
重複 し い ない 行 取り出す	df[not df.duplicated(keep=False)]
データ フレーム カラム まとめ 置き換える	df[col].replace(ValueMap)
ゼロ 埋め さ れ た ビット 整数 型 ベクトル	np.zeros(要素数, dtype=np.int16)
線 グラフ 描画 し その 色 シスル 設定 する	plt.plot(データ列, データ列2, color='thistle')
カラー コード 下 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v', c=rgb)
組み合わせ 求める	math.comb(n, k)
表 データ 列 破壊 的 並べる	df.sort_values(by='A', inplace=True)
ヒストグラム 描画 し 色 サンディーブラウン セット する	plt.hist(データ列, color='sandybrown')
データ 列 配列 散布 図 描い 文字 列 凡例 用 ラベル 付ける	plt.scatter(xdata, xdata, label=s)
リスト 空か どうか 調べる	len(aList) == 0
カラー コード 丸 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c=rgb)
カウンタ 集合 変換 する	set(aCounter)
文字 列 中 限定 正規 表現 マッチ し た 全て 文字 列 リスト 変換 する	re.findall(pattern, s, flags=re.ASCI)
オプション グラフ 色 青 緑 変更 する	color = 'teal'
集合 別 セット 共通 要素 全て 除く	aSet.symmetric_difference_update(aSet2)
キー 辞書 ない 時 要素 追加 する	aDict.setdefault(key, element)
ヒストグラム 色 レベッカパープル 指定 する	plt.hist(データ列, color='rebeccapurple')
データ フレーム 中 カラム 個 ビン 分割 する	pd.cut(df[col], n)
小数点 以下 桁 表示 可能 な よう する	pd.set_option('precision', n)
文字 列 中 複数 行 対応 正規 表現 マッチ し た 全て 文字 列 リスト する	re.findall(pattern, s, flags=re.MULTILINE)
データ フレーム リスト カラム 百 位 丸め 整数 型 する	df[aList].round(-2).astype(int)
散布 図 ダイアモンドマーカー 使用 する	plt.plot(xdata, ydata, marker='D')
オプション グラフ 色 ライト コーラル 指定 する	color = 'lightcoral'
数列 リスト 濃い 描画 し 色 青色 変更 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
線 グラフ 色 ダークオーキッド セット する	plt.plot(データ列, データ列2, color='darkorchid')
現在 タイム スタンプ	datetime.datetime.now()
グラフ 凡例 位置 設定 する	plt.legend(loc=(x, y))
リスト 倍する	aList * n
タプル 各 値 関数 適用 し た 結果 並べ 変える	sorted(aTuple, key=func)
ひとつ 飛ばし 整数 列	list(range(n, n2+1, 2))
ファイル フォルダ 名	os.path.dirname(filepath)
リスト 要素 加える	aList.append(element)
オプション グラフ 色 ライト グレー 設定 する	color = 'lightgray'
個 整数 列 作る	list(range(n))
折れ線 グラフ 色 ダークマゼンタ 設定 する	plt.plot(データ列, データ列2, color='darkmagenta')
オプション 色 オレンジ レッド 設定 する	color = 'orangered'
	math.nan
データ フレーム 値 正規 表現 まとめ 変更 する	df.replace(pattern, repl, regex=True)
データ フレーム 列 文字 列 終わる 行 取り出す	df[df[column].str.endswith(s)]
オプション コロン セパレータ 使う	sep = ':'
データ フレーム リスト カラム 中 文字 列 ある 調べる	df[aList].isin([value])
タプル 回 接続 する	aTuple * n
折れ線 グラフ 色 グリーン イエロー 設定 する	plt.plot(データ列, データ列2, color='greenyellow')
書式 マッピング 文字 列 整形 する	formatText.format_map(aDict)
イテラブル データ 列 散布 図 赤い 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c='r')
データ 列 正規 分布 どの 程度 尖っ いる 確認 する	ds.skew()
文字 列 キーワード どう 調べる	keyword.iskeyword(s)
ヒストグラム 色 ライム 設定 する	plt.hist(データ列, color='lime')
データ フレーム 列 最 頻 値	df[col].mode()
行列 形状	aArray.shape
リスト 分割 数 ビニング し ラベル つける	pd.cut(aList, n, labels=names)
箱 ひ げ 図 データ 列 可視 化 する	plt.boxplot(データ列)
ヒストグラム 描画 し 色 ダーク グレー 設定 する	plt.hist(データ列, color='darkgrey')
列 値 データ フレーム グループ 化 し 要約 統計 量 求める	df.groupby('A').describe()
データ フレーム 正規 分布 どの 程度 歪ん いる 見る	df.kurt()
データ フレーム 各 列 毎 集計 し 列 最大 値 求める	df.groupby(column)[column2].max()
イテラブル 無限 繰り返す	itertools.cycle(iterable)
折れ線 グラフ 描画 し その 色 パパイヤウィップ 設定 する	plt.plot(データ列, データ列2, color='papayawhip')
オプション グラフ 色 ミディアムバイオレットレッド 変更 する	color = 'mediumvioletred'
折れ線 グラフ 描画 し 色 チョコレート 設定 する	plt.plot(データ列, データ列2, color='chocolate')
データ 列 折れ線 グラフ 描画 し マーカー 丸 印 する	plt.plot(データ列, データ列2, marker='o')
双方向 キュー 中 データ 数 数える	deq.count(element)
コーンズシルク ヒストグラム 色 設定 する	plt.hist(データ列, color='cornsilk')
ー	n - n2
小数点 以下 桁 出力 する	print(':.5f'.format(x))
ファイル 書き込み 用 オープン する	open(filepath, mode='w', encoding='utf-8')
赤い 三角 マーカー イテラブル 数列 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='r')
データ フレーム リスト 列 未 入力 値 後 行 値 置換 する	df[aList].fillna(method='bfill')
配列 等量 個 ビン 分割 する	pd.qcut(aArray, n)
文字 列 全て 空白 文字 なる 調べる	s.isspace()
淡い グラフ 線 幅 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
横 棒 描い グラフ 幅 変更 する	plt.barh(ラベル列, データ列, width=x)
ヒストグラム 描画 し 色 スカイ ブルー 設定 する	plt.hist(データ列, color='skyblue')
ヒストグラム 線 スタイル 実線 変更 する	plt.hist(データ列, linestyle='solid')
折れ線 グラフ 赤い 丸 マーカー 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
オプション 色 フローラルホワイト 変更 する	color = 'floralwhite'
コマンド 実行 する	os.system(text)
オプション グラフ 色 ダーク オレンジ 変更 する	color = 'darkorange'
エクセルデータファイル 番目 シート データ フレーム 読む	pd.read_excel(filename, sheet_name=n)
データ 列 欠損 値 前 値 埋める	ds.fillna(method='ffill')
マッピング カウンタ 作る	collections.Counter(aDict)
小数点 数 逆 双曲線 正弦	math.asinh(x)
文字 列 全て 英字	s.isalpha()
データ フレーム 中 列 重複 確認 する	df.duplicated(subset=column)
オプション 色 インディアン レッド 変更 する	color = 'indianred'
ヒストグラム 色 ピンク 設定 する	plt.hist(データ列, color='pink')
プロット 使う 横 軸 ラベル つける	plt.xlabel(untitled)
オブジェクト 型	type(obj)
バリー ウッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='burlywood')
平均 標準 偏差 疑似 乱数 生成 する	random.normalvariate(mu=0.5, sigma=0.2)
データ フレーム 列 小さい 順 並べる	df.sort_values(by=column, ascending=True)
文字 列 リスト 区切り し ひとつ 文字 列 する	sep.join(aStringList)
日本語 文字 列 含ま れる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
エクセルファイルファイル データ フレーム 読み込む	pd.read_excel(filename)
以下	n <= n2
二つ 変数 改行 区切っ プリント する	print(value, value2, sep='\n')
オプション 色 ハニーデュー する	color = 'honeydew'
枠 なし 凡例 入れる	plt.legend(frameon=False)
辞書 最後 項目 ポップ する	aDict.popitem()
数値 微分 求める	sympy.diff(e)
オプション ダーク レッド 色 用いる	color = 'darkred'
赤い 星 マーカー イテラブル イテラブル 散布 図 プロット する	plt.plot(xdata, ydata, marker='*', c='r')
ファイル パス オープン し 読み込み ストリーム 使う	open(filepath, mode='r')
散布 図 赤色 丸 マーカー 用いる	plt.plot(xdata, ydata, marker='o', c='r')
値 青色 表示 する	print(f'\033[34m{value}\033[0m')
オプション グラフ 色 ライトスレイグレー 設定 する	color = 'lightslategrey'
データ 列 タイム スタンプ 型 変換 し インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
ヒストグラム 描画 し その 色 スノー 設定 する	plt.hist(データ列, color='snow')
ブルー バイオレット 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='blueviolet')
整数 二 進 表現 変換 する	bin(n)
双方向 キュー 要素 インプレース 反転 する	deq.reverse()
整数 八 進数 表現 使う	oct(n)
線 グラフ 描画 し 色 小麦色 設定 する	plt.plot(データ列, データ列2, color='wheat')
文字 列 漢字 使わ れ いる 調べる	re.search('[\u4E00-\u9FD0]', s)
文字 列 中 ひとつ 非 小文字 含ま れる 調べる	any(not c.islower() for c in s)
折れ線 グラフ 青い 星 マーカー 描画 する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
リスト リスト 散布 図 描画 し 丸 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='o', c=rgb)
文字 列 カタカナ 平仮名 する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
文字 列 紫色 出力 する	print(f'\033[35m{value}\033[0m')
折れ線 グラフ 描画 し その 色 ゲインズボロ 設定 する	plt.plot(データ列, データ列2, color='gainsboro')
線 グラフ 描画 し その 色 アイボリー 指定 する	plt.plot(データ列, データ列2, color='ivory')
行列 演算 する	import numpy as np
プラム ヒストグラム 色 設定 する	plt.hist(データ列, color='plum')
青 紫色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='violet')
エン コーディング 知る	sys.getdefaultencoding()
ポスター 用 グラフ 変更 する	sns.set(context='poster')
折れ線 ラベル する	plt.plot(xdata, ydata, label=untitled)
配列 データ 列 散布 図 描画 し マーカー ポイント 変更 する	plt.plot(xdata, ydata, marker='.')
ヒストグラム 色 タン 設定 する	plt.hist(データ列, color='tan')
列 文字 列 欠損 値 変換 する	ds.replace(s, np.nan)
配列 リスト 散布 図 描画 し マーカー 四角 する	plt.plot(xdata, ydata, marker='s')
色 差別 ない 折れ線 グラフ リスト リスト 使っ プロット し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
オプション グラフ 色 ホット ピンク 設定 する	color = 'hotpink'
イテラブル 累加 し た イテラブル	itertools.accumulate(iterable)
ヒストグラム 色 やわらかい 青 設定 する	plt.hist(データ列, color='cornflowerblue')
ヒストグラム 色 耐火 レンガ 設定 する	plt.hist(データ列, color='firebrick')
線 グラフ 色 シルバー セット する	plt.plot(データ列, データ列2, color='silver')
奇数 調べる	n % 2 == 1
列 イテラブル 直積	itertools.product(iterable, iterable2)
線 グラフ 描画 し その 色 淡い ピンク色 設定 する	plt.plot(データ列, データ列2, color='lightpink')
オプション ダークオーキッド グラフ 色 設定 する	color = 'darkorchid'
文字 列 先頭	s[0]
オプション グラフ 色 ライム 設定 する	color = 'lime'
列 値 データ フレーム まとめ た グループ	df.groupby(column)
未 定値	None
データ フレーム カラム 文字 列 文字 列 含ま れ ない 行 抽出 する	df[not df[column].str.contains(s)]
濃い グラフ 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
カラム 正規 分布 どの 程度 歪ん いる 確認 する	ds.kurt()
二つ データ フレーム 列 キー 右 結合 する	pd.merge(df, df2, on=column, how='right')
集合 全 要素 除去 する	aSet.clear()
単位 行列 作成 する	np.eye(行数, 列数)
データ フレーム 中 列 中央 値 ビン 分割 する	pd.qcut(df[col], 2)
黒い 下 三角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='v', c='k')
リスト カラム 抽出 する	df[column].values.tolist()
データ フレーム 列 値 欠損 値	df[col].isna()
ファイル パス 書き込み ストリーム 開い する	f = open(filepath, mode='w')
折れ線 グラフ 描画 し 色 フクシア 設定 する	plt.plot(データ列, データ列2, color='fuchsia')
カラー コード 棒 色 設定 する	plt.bar(ラベル列, データ列, color=rgb)
データ フレーム 複数 列 昇順 破壊 的 並べ 直す	df.sort_values(by=column, ascending=True, inplace=True)
線 グラフ 描画 し その 色 白 指定 する	plt.plot(データ列, データ列2, color='white')
エクセルファイルファイル 番目 シート データ フレーム 読み込む	pd.read_excel(filename, sheet_name=n)
線 グラフ 描画 し その 色 ドジャーブルー 設定 する	plt.plot(データ列, データ列2, color='dodgerblue')
ファイル バイナリ モード 開い する	f = open(filepath, mode='rb')
データ フレーム 列 名 リスト まとめ た 表 求める	df.groupby(columns)
データ フレーム 列 グループ 化 し 要約 統計 量 算出 する	df.groupby(column).describe()
折れ線 グラフ 描画 し 色 オレンジ レッド 設定 する	plt.plot(データ列, データ列2, color='orangered')
ファイル インデックス 付け ず データ フレーム 保存 する	df.to_csv(filename, index=None)
折れ線 グラフ マーカー 右 三 角 する	plt.plot(データ列, データ列2, marker='>')
ヒストグラム 描画 し その 色 ダークマゼンタ 変更 する	plt.hist(データ列, color='darkmagenta')
リスト データ 列 折れ線 グラフ 描く	plt.plot(xdata, ydata)
黒い 右 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='>', c='k')
グラフ 描画 暗い カラー パレット 使用 する	sns.set(pallete='dark')
列 双方向 キュー 作る	collections.deque(iterable)
範囲 ヒストグラム 描画 する	plt.hist(データ列, range=(start, end))
オプション 真紅 グラフ 色 セット する	color = 'crimson'
タイムスタンプデータ 木曜日 どう 調べる	aDatetime.weekday() == 3
成る ペア	(n, n2)
進 文字 列 整数 変換 する	int(s, 2)
オプション ライトスカイブルー グラフ 色 設定 する	color = 'lightskyblue'
日付 データ 日付 データ 前	aDate < aDate2
セット 値 追加 する	aSet.add(element)
文字 列 シンボル し パラメータ する	z = sympy.Symbol(s)
データ フレーム 列 値 集約 する	df.groupby(column)
数値 双方向 キュー 中 含ま れ てる	element in deq
パープル ヒストグラム 色 設定 する	plt.hist(データ列, color='purple')
リスト リスト 黒い 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
双方向 キュー 左側 リスト 各 要素 追加 する	deq.extendleft(iterable)
フォレストグリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='forestgreen')
カラム 未 入力 値 最 頻 値 置き換える	ds.fillna(ds.mode().iloc[0])
データ フレーム ファイル インデックス 付け ず 書き込む	df.to_csv(filename, index=None)
ヒストグラム 描画 し 透明 度 設定 する	plt.hist(データ列, alpha=x)
データ フレーム 列 まとめ た 表	df.groupby(['A', 'B'])
データ 列 リスト 破線 グラフ 描画 し 色 明るい 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リスト カウンタ 更新 する	aCounter.update(iterable)
散布 図 マーカー 描画 する	plt.plot(xdata, ydata, marker='v')
折れ線 グラフ 下 三角 マーカー 使う	plt.plot(データ列, データ列2, marker='v')
大文字 小文字 無視 し 正規 表現 文字 列 全体 マッチ さ せる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字 列 中 ひとつ 非 数字 ある	any(not c.isdigit() for c in s)
ヒストグラム 描画 し その 色 ライトゴールドロディイエロー 指定 する	plt.hist(データ列, color='lightgoldenrodyellow')
リスト 等量 個 ビン 分割 する	pd.qcut(aList, n)
線 グラフ 色 ロージーブラウン 変更 する	plt.plot(データ列, データ列2, color='rosybrown')
データ フレーム 列 中 文字 列 文字 列 いくつ 存在 する 数える	df[col].isin([value, value2]).sum()
データ フレーム 表示 する とき 表示 可能 な 列 数 最大 値 設定 する	pd.set_option('display.max_columns', n)
データ 列 中 文字 列 いくつ 含ま れる 数える	ds.isin([value, value2]).sum()
赤い 丸 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='o', c='r')
折れ線 グラフ 描画 し その 色 淡い 茶色 設定 する	plt.plot(データ列, データ列2, color='tan')
オプション グラフ 色 フローラルホワイト 設定 する	color = 'floralwhite'
整数 八 進 表現 変換 する	oct(n)
データ フレーム 指定 さ れ た 列 リスト 抽出 する	df[column].values.tolist()
カラム 未 入力 値 最 頻 値 埋める	ds.fillna(ds.mode().iloc[0])
オプション 文字 列 改行 する 代わり 用いる	end = s
オプション ファイル 用いる	file = sys.open(filename, 'w')
列 と列 キー 二つ データ フレーム 内部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
リスト リスト パステル 調 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
折れ線 グラフ 色 ディープスカイブルー 設定 する	plt.plot(データ列, データ列2, color='deepskyblue')
ヒストグラム 描画 し 色 カデット ブルー 設定 する	plt.hist(データ列, color='cadetblue')
プロット 描画 明るい カラー パレット 使う	sns.set(pallete='bright')
文字 列 コロン 分割 し 文字 列 リスト 変換 する	s.split(':')
ファイル 名 ファイル どう 調べる	filename.endswith('.json')
データ フレーム 最 頻 値	df.mode()
データ フレーム 列 列 相関 行列 スピアマン 順位 相関 係数	df[[column, column2]].corr(method='spearman')
ダイアモンドマーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='D')
日付 時刻 データ 日付 時刻 データ 同時 調べる	aDatetime == aDatetime2
データ フレーム リスト カラム 分散	df[aList].var()
ファイル パス セパレータ 記号	os.sep
データ フレーム 欠損 値 直前 値 置換 する	df.fillna(method='ffill')
データ フレーム リスト カラム 小数点 以下 桁 四捨五入 する	df[aList].round(n)
データ 列 ヒストグラム する	plt.hist(ds)
濃い 折れ線 グラフ リスト リスト 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
黒い ポイント マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='.', c='k')
データ フレーム 重複 し た 行 残さ ず 取り除く	df.drop_duplicates(keep=False)
オプション 小麦色 色 使う	color = 'wheat'
明るい 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='bright')
配列 リスト 淡い グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
カウンタ 演算 する	aCounter & aCounter2
線 グラフ 描画 し その 色 ライト イエロー 設定 する	plt.plot(データ列, データ列2, color='lightyellow')
要素 辞書 値 含ま れ いる どう 判定 する	element in aDict.values()
折れ線 グラフ 緑色 四角 印 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
ヒストグラム 色 フローラルホワイト セット する	plt.hist(データ列, color='floralwhite')
ヒストグラム 色 耐火 レンガ 指定 する	plt.hist(データ列, color='firebrick')
オプション 先頭 行 ヘッダ 設定 する	header = 0
ヒストグラム 描画 し その 色 指定 する	plt.hist(データ列, color='darkslategrey')
浮動 小数点 数 浮動 小数点 数 割る	x / y
黒い 下 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v', c='k')
データ フレーム 指定 さ れ た 列 名 リスト 列 抽出 する	df[columns]
二 乗	n ** 2
データ フレーム 表示 する とき 行 数 設定 する	pd.set_option('display.max_rows', n)
変数 無限 大 近づく とき 数式 極限 値 求める	sympy.limit(e, z, oo)
濃い 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
オプション グラフ 色 耐火 レンガ 指定 する	color = 'firebrick'
オプション 出力 先 標準 出力 する	file = sys.stdout
配列 数列 青色 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 最大 値 計算 する	df.groupby([column, column2], as_index=False).max()
リスト 文字 列 最初 見つかる インデックス 見る	aList.index(element)
リスト 配列 散布 図 カラー コード 上 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c=rgb)
黄色い 四角 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
リスト リスト 黒色 色 差別 ない グラフ 描く	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
マッピング 辞書 値 追加 する	aDict.update(aDict2)
型 変換 する	pd.to_datetime(dateString)
オプション 読み込ま ない フッタ 設定 する	skipfooter = n
前 値 データ フレーム リスト 列 埋める	df[aList].fillna(method='ffill')
整数 進数 文字 列	hex(n)[2:]
オブジェクト 参照 カウント	sys.getrefcount(obj)
データ フレーム 二つ 列 昇順 ソート し 更新 する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
黒い ポイント マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
データ フレーム ファイル 形式 保存 する	df.to_csv(filename, sep='\t')
ヒストグラム 描画 し その 色 ライト コーラル 設定 する	plt.hist(データ列, color='lightcoral')
ヒストグラム 描画 し その 色 ライム 指定 する	plt.hist(データ列, color='lime')
オプション ダークマゼンタ 色 使う	color = 'darkmagenta'
データ フレーム 中央 値 求める	df.median()
オプション 色 フクシア する	color = 'fuchsia'
カウンタ 項目 カウント	aCounter[element]
データ フレーム 各 列 カラム 組み合わせ 毎 グループ 化 し 最小 値 求める	df.groupby([column, column2], as_index=False).min()
黒い 星 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='*', c='k')
シーケンス と列 ペア リスト する	itertools.zip_longest(iterable, iterable2)
ヒストグラム 色 ホワイトスモーク 設定 する	plt.hist(データ列, color='whitesmoke')
ヒストグラム 描画 し その 色 マルーン 変更 する	plt.hist(データ列, color='maroon')
データ フレーム カラム 何 日 見る	df[col].dt.day
赤い 星 マーカー 用い 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c='r')
実数 二乗 する	x ** 2
追加 できる よう 既存 ファイル オープン する	open(filepath, mode='a', encoding='euc_jp')
実数 仮数	math.frexp(x)[0]
データ フレーム カラム 欠損 値 中央 値 指定 する	df[col].fillna(df[col].median())
オリーブ ヒストグラム 色 する	plt.hist(データ列, color='olive')
最大 長 両端 キュー イテラブル 作る	collections.deque(iterable, maxlen=n)
ファイル 用い データ フレーム ファイル 保存 する	df.to_csv(filename, sep='\t')
文字 列 中 正規 表現 大文字 小文字 無視 し マッチ する 文字 列 探す	re.search(pattern, s, flags=re.IGNORECASE)
配列 配列 散布 図 カラー コード 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c=rgb)
複数 列 小さい 順 データ フレーム 並べ 直す	df.sort_values(by=column, ascending=True)
排他 的 論理 和	n ^ n2
データ 列 イテラブル 散布 図 赤い ポイント マーカー 描く	plt.plot(xdata, ydata, marker='.', c='r')
折れ線 グラフ 四角 マーカー 黒く する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
データ フレーム 列 列 相関 行列 ヒートマップ 描画 する	sns.heatmap(df[[column, column2]].corr())
線 グラフ 色 ペルー 指定 する	plt.plot(データ列, データ列2, color='peru')
配列 リスト 散布 図 描画 し 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, c='colorblind')
データ フレーム カラム 名 一覧 見る	df.columns
数列 配列 カラー コード 淡い グラフ プロット する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
オプション グラフ 色 パールバイオレットレッド 変更 する	color = 'palevioletred'
ゼロ 埋め さ れ た 三 二 ビット 整数 型 行列	np.zeros(要素数, dtype=np.int16)
文字 列 部分 文字 列 二分 し 後半 文字 列 使う	s.partition(sub)[-1]
二 進 文字 列 整数 する	int(s, 2)
折れ線 グラフ 黄色い 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
配列 次元 数	aArray.ndim
ヒストグラム 描画 し その 色 ダークゴールデンロッド 設定 する	plt.hist(データ列, color='darkgoldenrod')
オプション ロイヤル ブルー 色 使う	color = 'royalblue'
リスト リスト 散布 図 濃い 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
ヒストグラム 描画 し 色 ゴースト ホワイト 設定 する	plt.hist(データ列, color='ghostwhite')
文字 列 文字 列 リスト 含ま れる どう 調べる	s in aStringList
行 標準 入力 読み込ん 改行 取り除く	sys.stdin.readline().rstrip()
文字 列 末尾 部分 文字 列 取り除く	s.removesuffix(sub)
オプション ターコイズ グラフ 色 指定 する	color = 'turquoise'
オプション グラフ 色 シエナ 指定 する	color = 'sienna'
カウンタ 項目 列挙 する	aCounter.keys()
最後 文字 列 空白 区切る	s.rsplit()
データ フレーム 重複 する 行 残さ ず 取り除く	df.drop_duplicates(keep=False)
重 見やすく 散布 図 パステル 調 色 マーカー プロット する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
上位 集合 調べる	aSet.issuperset(aSet2)
キュー 部分 要素 見る	collections.deque(itertools.islice(deq, start, end))
線 グラフ 描画 し その 色 ペルー 設定 する	plt.plot(データ列, データ列2, color='peru')
ダーク グレー ヒストグラム 色 設定 する	plt.hist(データ列, color='darkgray')
ヒストグラム 描画 し その 色 シスル 設定 する	plt.hist(データ列, color='thistle')
両端 キュー 先頭 要素 取り除く	deq.popleft()
ファイル 書き込み モード オープン する	open(filepath, mode='w')
ヒストグラム 描画 し その 色 スノー 変更 する	plt.hist(データ列, color='snow')
三つ データ フレーム 横 連結 する	pd.concat([df, df2, df3], axis=1)
要素 両端 キュー エン キュー する	deq.appendleft(element)
データ 列 欠損 値 平均 値 設定 する	ds.fillna(ds.mean())
列 一覧	df.info()
文字 列 シアン プリント できる 文字 列 する	f'\033[36m{value}\033[0m'
エクセルファイルファイル データ フレーム 読む	pd.read_excel(filename)
オプション 右 三 角 マーカー 使用 する	marker = '>'
個 数値 イテラブル 求める	range(n)
黄色い 大 バツ マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
マッピング ソート し 形式 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
線 グラフ 描画 し その 色 マルーン 設定 する	plt.plot(データ列, データ列2, color='maroon')
オプション パウダー ブルー 使う	color = 'powderblue'
データ フレーム リスト カラム 位 丸める	df[aList].round(-1)
データ 列 折れ線 グラフ 描画 し マーカー 印 する	plt.plot(データ列, データ列2, marker='^')
オブジェクト 論理 値 どう 調べる	isinstance(obj, bool)
カラー コード 下 三角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v', c=rgb)
線 グラフ 色 ミディアムアクアマリン 設定 する	plt.plot(データ列, データ列2, color='mediumaquamarine')
数式 部分 分数 展開 する	sympy.apart(e)
オプション グラフ 種類 点線 設定 する	linestyle = 'dotted'
ヒストグラム 描画 し その 色 サドル ブラウン 指定 する	plt.hist(データ列, color='saddlebrown')
データ 列 未 入力 値 メディアン 埋める	ds.fillna(ds.median())
線 グラフ 描画 し その 色 オレンジ 指定 する	plt.plot(データ列, データ列2, color='orange')
データ フレーム 列 インデックス 変更 する	df.set_index(column)
データ フレーム 列 値 集計 し グループ 合計 求める	df.groupby(column).sum()
リスト イミュータブル な 集合 変換 する	frozenset(iterable)
線 グラフ 描画 し 色 ベージュ 設定 する	plt.plot(データ列, データ列2, color='beige')
オプション グラフ 色 オーキッド 設定 する	color = 'orchid'
ライト シアン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightcyan')
全 要素 初期 化 さ れ た ビット 整数 型 行列 初期 化 する	np.zeros(行数, 列数, dtype=np.int8)
グラフ 鉛直 方向 一 点 鎖線 付ける	plt.axvline(x=0, linestyle='dashbot')
ヒストグラム 描画 し 色 オーキッド セット する	plt.hist(データ列, color='orchid')
列 個 等間隔 分割 し ラベル つける	pd.cut(ds, n, labels=names)
文字 列 開始 位置 以降 部分 文字 列 含ま れ ない	s.find(sub, start) == -1
オプション ミント クリーム グラフ 色 設定 する	color = 'mintcream'
オプション 色 フローラルホワイト 指定 する	color = 'floralwhite'
両端 キュー 先頭 要素 見る	deq[0]
イテラブル 配列 パステル 調 の 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リスト リスト 散布 図 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^')
ファイル ファイル 入力 読み込ん する	data = json.load(fin)
データ 列 分 位 数	ds.quantile(percent/100)
データ 列 最 頻 値	ds.mode()
折れ線 グラフ 描画 し その 色 深紅 変更 する	plt.plot(データ列, データ列2, color='crimson')
ヒストグラム 色 グリーン イエロー 設定 する	plt.hist(データ列, color='greenyellow')
小数点 数 無限 大 どう 調べる	math.isinf(x)
文字 列 先頭 空白 取り除く	s.lstrip(' ')
異なる 列 キー 二つ データ フレーム 左 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
全 要素 初期 化 し た ビット 整数 型 行列	np.zeros(行数, 列数, dtype=np.int8)
列 データ フレーム ソート し 更新 する	df.sort_values(by='A', inplace=True)
箱 髭 図 二つ 並べ 描画 する	plt.boxplot([データ列, データ列2])
キー 辞書 上 未定義 調べる	key not in aDict
データ フレーム 指定 さ れ た 列 取り出す	df[[column, column2, column3, column4]]
ディープスカイブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='deepskyblue')
浮動 小数点 数 十 六 進 表記 文字 列 変換 する	x.hex()
折れ線 グラフ 描画 し 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightgreen')
オプション 白 色 指定 する	color = 'white'
ファイル 読み込み できる よう オープン する	open(filepath, mode='r')
リスト 配列 散布 図 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o')
オプション ラベンダー ブラッシュ 色 使う	color = 'lavenderblush'
黒い 淡い プロット する	plt.plot(xdata, ydata, linestyle='muted', color='k')
オプション カラム 名 設定 する	names = names
実行 時 標準 出力 パイプ 調べる	not sys.stdout.isatty()
タプル 展開 し 表示 する	print(*aTuple)
論理 積	n & n2
小数点 以下 桁 プリント する	print(':.2f'.format(x))
データ フレーム 列 並べて 行 振り 直す	df.sort_values(columns).reset_index(drop=True)
配列 間 要素 ごと 最大公約数	np.gcd(aArray, aArray2)
データ フレーム 中 列 と列 重複 ある 調べる	df.duplicated(subset=[column, column2])
データ 列 何時 確認 する	ds.dt.hour
折れ線 グラフ 色 レベッカパープル 指定 する	plt.plot(データ列, データ列2, color='rebeccapurple')
データ フレーム 列 昇順 破壊 的 整列 する	df.sort_values(by=column, ascending=True, inplace=True)
ヒストグラム 色 パールバイオレットレッド 変更 する	plt.hist(データ列, color='palevioletred')
ヒストグラム 色 ダーク バイオレット 設定 する	plt.hist(データ列, color='darkviolet')
論理 積 求める	n & n2
ヒストグラム 色 珊瑚 変更 する	plt.hist(データ列, color='coral')
ヒストグラム 色 オリーブ 変更 する	plt.hist(データ列, color='olive')
オプション 濃い シアン グラフ 色 設定 する	color = 'darkcyan'
リスト リスト パステル 調 の 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
項目 名 辞書 ない とき 要素 追加 する	aDict.setdefault(key, element)
黒い 四角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='s', c='k')
線 グラフ 描画 し その 色 深紅 指定 する	plt.plot(データ列, データ列2, color='crimson')
折れ線 グラフ スタイル 実線 する	plt.plot(データ列, データ列2, linestyle='solid')
オプション コーンフラワーブルー 色 使う	color = 'cornflowerblue'
カラー コード ダイアモンドマーカー 数列 リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='D', c=rgb)
数式 部分 分数 化 行う	sympy.apart(e)
データ フレーム カラム 名前 一覧 使う	df.columns
ベクトル 行 ごと 合計 値	np.sum(aArray, axis=1)
ルート チェーン マップ	collections.ChainMap()
折れ線 グラフ 上 三 角 マーカー 黄色く する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
イテラブル 文字 列 変換 し タブ 一つ する	'\t'.join(map(str, iterable))
折れ線 グラフ 描画 し その 色 ライト シアン 設定 する	plt.plot(データ列, データ列2, color='lightcyan')
日付 データ 火曜日	aDate.weekday() == 1
ヒストグラム 色 ブルー バイオレット 設定 する	plt.hist(データ列, color='blueviolet')
線 グラフ 色 ダークターコイズ セット する	plt.plot(データ列, データ列2, color='darkturquoise')
ヒストグラム 描画 し その 色 ネイビー 設定 する	plt.hist(データ列, color='navy')
列 データ フレーム グループ 化 し 分散 求める	df.groupby(column).var()
折れ線 グラフ 描画 し その 色 ライト サーモン 設定 する	plt.plot(データ列, データ列2, color='lightsalmon')
データ フレーム 欠損 値 第 二 四 分 位 数 設定 する	df.fillna(df.median())
二つ 表 データ 横 方向 マージ する	pd.merge(df, df2)
文字 列 タイム スタンプ 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
折れ線 グラフ 描画 し 色 ライト コーラル 設定 する	plt.plot(データ列, データ列2, color='lightcoral')
リスト リスト 折れ線 グラフ 描画 する	plt.plot(xdata, ydata)
文字 列 カンマ 区切っ 列挙 する	s.split(',')
始まる 無限 な 数列 得る	itertools.count()
空 リスト	[]
折れ線 グラフ 描画 し 色 スプリング グリーン 設定 する	plt.plot(データ列, データ列2, color='springgreen')
数列 イテラブル 濃い 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
データ フレーム 中 文字 列 存在 する	df.isin([value])
折れ線 グラフ サイズ 四角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='s', markersize=n)
コーンフラワーブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='cornflowerblue')
左 両端 キュー 順序 個 分 ロー テンション する	deq.rotate(-n)
リスト 数列 色 差別 ない 描き その 色 青 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リスト データ 列 淡い 色 折れ線 描画 し 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n, color='muted')
全 要素 初期 化 さ れ た 行列 作成 する	np.ones(要素数, dtype=np.int)
折れ線 グラフ 描画 し 色 ハニーデュー 指定 する	plt.plot(データ列, データ列2, color='honeydew')
スピアマン 用い データ フレーム 相関 行列	df.corr(method='spearman')
日付 データ 分 減らす	aDate - datetime.timedelta(minutes=n)
データ 列 ヒストグラム 描画 する	plt.hist(ds)
リスト リスト 散布 図 描い バツ マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='x', c=rgb)
ライト コーラル ヒストグラム 色 変更 する	plt.hist(データ列, color='lightcoral')
オプション 追加 モード 使う	mode = 'a'
既存 行列 ベース 全 要素 初期 値 配列 作る	np.full_like(aArray, 初期値)
オプション グラフ 色 小麦色 指定 する	color = 'wheat'
度数 分布 図 プロット する	plt.hist(データ列)
ヒストグラム 色 マゼンタ 変更 する	plt.hist(データ列, color='magenta')
文字 列 走査 し パターン 限定 マッチ する 見る	re.search(pattern, s, flags=re.ASCI)
データ 列 何時 見る	ds.dt.hour
リスト リスト 明るい グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', color='r')
範囲 度数 分布 図 描画 する	plt.hist(データ列, range=(start, end))
散布 図 赤い 右 三 角 マーカー 使用 する	plt.plot(xdata, ydata, marker='>', c='r')
線 グラフ 描画 し その 色 暗い 赤 設定 する	plt.plot(データ列, データ列2, color='darkred')
折れ線 グラフ 描画 し 色 ペルー 設定 する	plt.plot(データ列, データ列2, color='peru')
数式 微分 求める	sympy.diff(e)
データ フレーム 列 キー し ソート する	df.sort_values(by=column)
オプション 白色 使用 する	color = 'white'
カラー コード 横 棒グラフ 色 設定 する	plt.barh(ラベル列, データ列, color=rgb)
破線 グラフ 色 濃い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
濃い グラフ 色 青 する	plt.plot(xdata, ydata, linestyle='deep', color='b')
データ フレーム 行 抽出 する	df[start:end]
折れ線 グラフ サイズ 星 マーカー 描画 する	plt.plot(データ列, データ列2, marker='*', markersize=n)
データ フレーム 列 値 ごと 集約 し 列挙 する	[(name, group) for name, group in df.groupby(column)]
文字 列 全体 正規 表現 マッチ さ せる	re.fullmatch(pattern, s)
数式 数値 計算 する	float(e)
パターン 前もって コンパイル する	re.compile(pattern)
データ フレーム 中 日付 データ 日付 データ いくつ ある 数える	df.isin([value, value2]).sum()
折れ線 グラフ 描画 し その 色 ゴースト ホワイト 変更 する	plt.plot(データ列, データ列2, color='ghostwhite')
淡い ピンク色 色 ヒストグラム 描画 する	plt.hist(データ列, color='lightpink')
データ フレーム カラム 値 欠損 値 調べる	df[col].isna()
マップ 最後 項目 ポップ する	aDict.popitem()
何 回 再帰 できる	sys.getrecursionlimit()
配列 累積 積	np.cumprod(aArray)
データ フレーム リスト 列 文字 列 未 入力 値 変換 する	df[aList].replace(s, np.nan)
オプション グラフ 色 ペールグリーン 設定 する	color = 'palegreen'
散布 図 黒い 丸 マーカー 使用 する	plt.plot(xdata, ydata, marker='o', c='k')
リスト 配列 リスト 応じ 散布 図 色 変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
グラフ 鉛直 方向 破線 付ける	plt.axvline(x=0, linestyle='dashed')
折れ線 グラフ 色 ゴールデン ロッド 変更 する	plt.plot(データ列, データ列2, color='goldenrod')
線 グラフ 描画 し その 色 グリーン 指定 する	plt.plot(データ列, データ列2, color='green')
散布 図 黒色 マーカー 使う	plt.plot(xdata, ydata, marker='v', c='k')
全て シート ファイル 読み込む	pd.read_excel(filename, sheet_name=None)
オプション 赤色 使う	color = 'red'
折れ線 グラフ 丸 印 使う	plt.plot(データ列, データ列2, marker='o')
リスト リスト 散布 図 赤い 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='r')
折れ線 グラフ マーカー 星 する	plt.plot(データ列, データ列2, marker='*')
配列 何 次元	aArray.ndim
高 頻出 方 カウンタ 列挙 する	aCounter.most_common()
リスト リスト 散布 図 クロス マーカー プロット する	plt.plot(xdata, ydata, marker='x')
配列 リスト 青い 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
リスト 数列 散布 図 カラー コード 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c=rgb)
辞書 浅い コピー 作る	aDict.copy()
淡い 折れ線 グラフ 色 カラー コード 変更 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
日付 データ 日付 データ 同時	aDate == aDate2
データ フレーム 直前 値 埋める	df.fillna(method='ffill')
ヒストグラム 描画 し その 色 ベージュ 設定 する	plt.hist(データ列, color='beige')
データ ラベル 場所 指定 する	plt.legend(loc=(x, y))
データ 列 柱状 図 描画 する	plt.hist(ds)
スラッシュ 区切っ 数値 プリント する	print(value, value2, sep='/')
ハッシュ 値 算出 する	hash(x)
フォーマット 文字 列 日付 データ 変換 する	pd.to_datetime(s, format=fmt)
データ フレーム 相関 行列 ケンドール 相関 係数	df.corr(method='kendall')
リスト データ 列 散布 図 プロット し マーカー 大 バツ 設定 する	plt.plot(xdata, ydata, marker='X')
トマト 色 ヒストグラム 描画 する	plt.hist(データ列, color='tomato')
配列 配列 散布 図 カラー コード 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c=rgb)
オプション ミディアムオーキッド 色 用いる	color = 'mediumorchid'
折れ線 グラフ 線 幅 ダイアモンドマーカー 描画 する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
ヒストグラム 描画 し その 色 ネイビー セット する	plt.hist(データ列, color='navy')
標準 入力 使う	sys.stdin
クラス サブ 型 どう	issubclass(サブクラス, クラス)
折れ線 グラフ 描画 し その 色 アイボリー 設定 する	plt.plot(データ列, データ列2, color='ivory')
配列 リスト 青色 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
文字 列 末尾 タブ 取り除く	s.rstrip('\t')
データ フレーム 各 カラム 列 組み合わせ 毎 グループ 化 し 個数 求める	df.groupby([column, column2], as_index=False).count()
線 グラフ 描画 し その 色 ラベンダー ブラッシュ 変更 する	plt.plot(データ列, データ列2, color='lavenderblush')
オプション ダーク レッド グラフ 色 指定 する	color = 'darkred'
データ フレーム カラム 欠損 値 後 行 値 埋める	df[col].fillna(method='bfill')
オプション 文字 コード 設定 する	encoding = 'utf-8'
パステル 調 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
折れ線 グラフ 描画 し 色 ミント クリーム 設定 する	plt.plot(データ列, データ列2, color='mintcream')
実数 実数 整数 除算 する	x // y
グラフ 実線 つける	plt.axvline(x=0, linestyle='solid')
ヒストグラム 描画 し 色 ダークスレートブルー 設定 する	plt.hist(データ列, color='darkslateblue')
オプション 青 緑色 用いる	color = 'teal'
折れ線 グラフ 星 印 赤く する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
データ 列 数列 濃い 描画 し 色 黒 する	plt.plot(xdata, ydata, linestyle='deep', color='k')
折れ線 グラフ 描画 し 色 シエナ 指定 する	plt.plot(データ列, データ列2, color='sienna')
整数 組 どれ 調べる	n in aTuple
折れ線 グラフ 描画 し 色 青 緑 設定 する	plt.plot(データ列, データ列2, color='teal')
データ フレーム カラム 欠損 値 前 行 値 補う	df[col].fillna(method='ffill')
データ フレーム 欠損 値 最 頻 値 補う	df.fillna(df.mode().iloc[0])
淡い 色 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, c='muted')
リスト 昇順 ソート する	sorted(aList, reverse=False)
オプション ミディアムターコイズ 色 使う	color = 'mediumturquoise'
実行 時 標準 出力 出力 先 ターミナル	sys.stdout.isatty()
オプション ダーク オレンジ グラフ 色 指定 する	color = 'darkorange'
横 棒 幅 設定 する	plt.barh(ラベル列, データ列, width=x)
配列 リスト 散布 図 黒い マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c='k')
ファイル 追加 できる よう オープン する	open(filepath, mode='a', encoding='utf-8')
ふたつ 集合 インター セクション 更新 する	aSet.intersection_update(aSet2)
データ 列 文字 列 欠損 値 変換 する	ds.replace(s, np.nan)
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 平均 値 求める	df.groupby([column, column2], as_index=False).mean()
全 要素 初期 化 さ れ た 行列 作る	np.zeros(行数, 列数)
折れ線 グラフ 描画 し その 色 パパイヤウィップ 指定 する	plt.plot(データ列, データ列2, color='papayawhip')
ファイル オープン する	open(filepath, encoding='shift_jis')
現在 書式 文字 列 変換 する	datetime.datetime.today().isoformat()
整数 変換 する	int(x)
青い 色 差別 ない 描く	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
ヒストグラム 描画 し その 色 パレットトルコイズ 設定 する	plt.hist(データ列, color='paleturquoise')
青い 大 バツ マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
逆順 キュー	reversed(deq)
パターン 大文字 小文字 無視 し 文字 列 先頭 マッチ さ せる	re.match(pattern, s, flags=re.IGNORECASE)
折れ線 グラフ 下 三角 マーカー 大き さ 設定 する	plt.plot(データ列, データ列2, marker='v', markersize=n)
乗 増やす	n **= n2
リスト オブジェクト 等しい 最初 要素 取り除く	aList.remove(element)
二 進 文字 列 バイト 列 変換 する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
ダークスラテグレー ヒストグラム 色 設定 する	plt.hist(データ列, color='darkslategray')
線 グラフ 色 ゴールド 指定 する	plt.plot(データ列, データ列2, color='gold')
折れ線 グラフ 描画 し その 色 カーキ 指定 する	plt.plot(データ列, データ列2, color='khaki')
データ フレーム 中 列 ビン 分割 する	pd.cut(df[col], aList)
散布 図 暗い 色 マーカー 重 見やすく 描画 する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
データ フレーム リスト 列 文字 列 未 入力 値 変換 する	df[aList].replace(s, np.nan)
オプション ダーク シアン 色 使う	color = 'darkcyan'
ダーク シアン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='darkcyan')
ヒストグラム 描画 し その 色 ゴースト ホワイト する	plt.hist(データ列, color='ghostwhite')
年 タイム スタンプ	datetime.datetime(year=year, month=1, day=1)
等差 数列 配列 変換 する	np.arange(開始値, 終端値, 等差)
ヒストグラム 描画 し その 色 スラグレー 指定 する	plt.hist(データ列, color='slategray')
加え データ フレーム 列 ダミー 変数 する	pd.get_dummies(df[column], dummy_na=True)
データ フレーム カラム 各 データ 何 回 出現 する 見る	df[col].value_counts()
数式 変数 微分 する	sympy.diff(e, z)
データ 列 中 存在 する 文字 列 文字 列 合計 カウント する	ds.isin([value, value2]).sum()
グラフ 描画 淡い カラー パレット 使う	sns.set(pallete='muted')
折れ線 グラフ 色 パパイヤウィップ 設定 する	plt.plot(データ列, データ列2, color='papayawhip')
オプション グラフ 色 ライト コーラル 変更 する	color = 'lightcoral'
本日 タプル する	datetime.datetime.today().timetuple()
範囲 指定 し データ フレーム 行 抽出 する	df[start:end]
データ 列 欠損 値 設定 する	ds.fillna(x)
両端 キュー 番目 番目 部分 要素	collections.deque(itertools.islice(deq, start, end))
無限 カウントアップ する	itertools.count(start=n)
オプション 三 ビット 整数 型 用いる	dtype = np.int16
濃い 折れ線 グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
ビスク ヒストグラム 色 設定 する	plt.hist(データ列, color='bisque')
折れ線 グラフ マーカー 使う	plt.plot(データ列, データ列2, marker='^')
リスト リスト 破線 グラフ プロット し その 色 淡い 指定 する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リスト リスト 散布 図 描画 し マーカー バツ 設定 する	plt.plot(xdata, ydata, marker='x')
文字 列 部分 文字 列 二つ 区切っ 前半 文字 列 使う	s.partition(sub)[0]
線 グラフ 色 アイボリー 設定 する	plt.plot(データ列, データ列2, color='ivory')
リスト リスト 折れ線 グラフ アルファ 描画 する	plt.plot(xdata, ydata, alpha=alpha)
データ フレーム 読む	pd.read_csv(filename, sep=',')
リスト リスト 用い 折れ線 グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n)
カンマ 区切り ファイル データ フレーム 読み込む	pd.read_csv(filename, sep=',')
折れ線 グラフ ポイント 印 青く する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
データ フレーム 各 列 毎 グループ 化 し 文字 列 グループ 大き さ 計算 する	df.groupby(column).size()[s]
新しい 多重 集合 イテラブル 生成 する	collections.Counter(iterable)
線 グラフ 色 ゲインズボロ 設定 する	plt.plot(データ列, データ列2, color='gainsboro')
色 差別 ない 色 折れ線 グラフ 描い その 線 幅 セット する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
整数 組 い づれかかどうか	n in aTuple
データ フレーム 破壊 的 列 並べる	df.sort_values(by=column, inplace=True)
スクリプト ファイル ディレクトリ パス	os.path.dirname(os.path.abspath(__file__))
データ フレーム 列 列 まとめ た グループ	df.groupby(['A', 'B'])
グラフ 横 軸 軸 ラベル 付ける	plt.xlabel(untitled)
データ フレーム 列 中 欠損 値 合計 数える	df[col].isna().sum()
オプション 淡い 茶色 色 使う	color = 'tan'
オプション グラフ 色 フクシア する	color = 'fuchsia'
つ 文字 列 プリント する	print(value, value2, value3)
列 リスト 抽出 する	df[column].values.tolist()
文字 列 中 非 アスキー 文字 含ま れる 調べる	any(not c.isascii() for c in s)
本日 水曜日 どう	datetime.datetime.today().weekday() == 2
オブジェクト 組 含ま れる 調べる	element in aTuple
辞書 要素 キー 加える	aDict[key] = element
実数 複素数	complex(x)
ヒストグラム 色 ディムグレー 指定 する	plt.hist(データ列, color='dimgrey')
行列 内積 計算 する	np.dot(aArray, aArray2)
折れ線 グラフ 描画 し 色 シスル 指定 する	plt.plot(データ列, データ列2, color='thistle')
折れ線 グラフ 左 三 角 印 使う	plt.plot(データ列, データ列2, marker='<')
折れ線 グラフ 菱形 マーカー 大き さ 変更 する	plt.plot(データ列, データ列2, marker='D', markersize=n)
複数 列 データ フレーム 小さい 順 ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
折れ線 グラフ 大 バツ マーカー 大き さ 指定 する	plt.plot(データ列, データ列2, marker='X', markersize=n)
リスト 数列 濃い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
濃い グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
配列 ユニーク な 要素 求める	np.unique(aArray)
データ フレーム リスト カラム 第 二 四 分 位 数 求める	df[aList].median()
二つ 集合 積 集合 求める	aSet.intersection(aSet2)
配列 リスト 散布 図 赤い 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c='r')
数列 イテラブル 散布 図 黒い 三角 マーカー 描く	plt.plot(xdata, ydata, marker='^', c='k')
暗い 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
以下 または 以上 調べる	n <= n2 or n >= n3
データ 列 百 位 丸める	ds.round(-2)
整数 リスト いづれ 調べる	n in aList
二つ 実行 結果 改行 区切っ プリント する	print(value, value2, sep='\n')
線 グラフ 色 淡い 茶色 設定 する	plt.plot(データ列, データ列2, color='tan')
黒い 大 バツ マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線 グラフ 青い 丸 印 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
整数 二 進 文字 列	bin(n)[2:]
ヒストグラム 色 トマト 変更 する	plt.hist(データ列, color='tomato')
変数 水色 する	f'\033[36m{value}\033[0m'
行列 各 要素 積	np.multiply(aArray, aArray2)
ヒストグラム 描画 し その 色 ダーク グレー 設定 する	plt.hist(データ列, color='darkgray')
データ フレーム 分 位 数	df.quantile(percent/100)
行列 列 ごと 標準 偏差 計算 する	np.std(aArray, axis=0)
折れ線 グラフ 色 ダークターコイズ 変更 する	plt.plot(データ列, データ列2, color='darkturquoise')
イテラブル リスト 散布 図 カラー コード ダイアモンドマーカー 描画 する	plt.plot(xdata, ydata, marker='D', c=rgb)
ヒストグラム 描画 し その 色 黄色 設定 する	plt.hist(データ列, color='yellow')
数列 イテラブル 暗い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
折れ線 グラフ 色 ゲインズボロ 設定 する	plt.plot(データ列, データ列2, color='gainsboro')
データ フレーム カラム 月 見る	df[col].dt.month
散布 図 カラー コード 下 三角 マーカー 使う	plt.plot(xdata, ydata, marker='v', c=rgb)
グラフ カラー パレット 明るく する	sns.set(pallete='bright')
線 グラフ 色 イエロー グリーン 設定 する	plt.plot(データ列, データ列2, color='yellowgreen')
リスト データ 列 色 差別 ない グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
データ フレーム 中 文字 列 文字 列 いくつ 含ま れる 数える	df.isin([value, value2]).sum()
円周 率 使用 する	math.pi
リスト 平均 値	sum(aList)/len(aList)
ブランチドアーモンド 色 ヒストグラム 描画 する	plt.hist(データ列, color='blanchedalmond')
データ フレーム 中 いくつ 欠損 値 ある 数える	df.isna().sum()
オリベドラブ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='olivedrab')
現在 時間 使う	datetime.date.today().hour
折れ線 グラフ 描画 し その 色 ブラック 設定 する	plt.plot(データ列, データ列2, color='black')
折れ線 グラフ 色 ゴールデン ロッド 設定 する	plt.plot(データ列, データ列2, color='goldenrod')
データ フレーム 列 用い グループ 分け し それぞれ グループ ごと 件数 知る	df.groupby(column).size()
ヒストグラム 色 ダークシアグリーン 指定 する	plt.hist(データ列, color='darkseagreen')
データ フレーム 各 列 毎 グループ 化 し 列 平均 値 求める	df.groupby(column)[column2].mean()
黒い 右 三 角 マーカー 散布 図 使用 する	plt.plot(xdata, ydata, marker='>', c='k')
折れ線 グラフ サイズ マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markersize=n)
ファイル パス 書き込み モード オープン する	open(filepath, mode='w')
整数 リスト どれ 調べる	n in aList
文字 列 先頭 不要 な 空白 消す	s.lstrip()
ファイル 拡張 子 なし ファイル 名 使う	os.path.splitext(os.path.basename(filepath))[0]
データ フレーム カラム 空文字 変換 し ドロップ する	df[col].replace('', np.nan).dropna()
線 グラフ 色 スラグレー セット する	plt.plot(データ列, データ列2, color='slategray')
線 グラフ 色 アンティーク ホワイト 設定 する	plt.plot(データ列, データ列2, color='antiquewhite')
ヒストグラム 色 バリーウッド 設定 する	plt.hist(データ列, color='burlywood')
線 グラフ 描画 し その 色 レモン シフォン 指定 する	plt.plot(データ列, データ列2, color='lemonchiffon')
全て 進 数字	string.octdigits
オプション 四角 マーカー 描画 する	marker = 's'
二つ 文字 列 順に プリント する	print(value, value2)
ヒストグラム 描画 し その 色 ライム 設定 する	plt.hist(データ列, color='lime')
リスト リスト 暗い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
ファイル オープン し バイナリ 書き込み ストリーム 使う	open(filepath, mode='wb')
切り捨て 分の 一 する	n //= n2
集合 値 取り除く	aSet.remove(element)
ビン 数 リスト 分割 する	pd.cut(aList, n)
リスト 番目 値	aList[n]
データ フレーム グループ 化 し それぞれ 列 標準 偏差 計算 する	df.groupby(column)[column2].std()
データ 列 イテラブル 散布 図 黒い クロス マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c='k')
オプション ダークスラテグレー グラフ 色 設定 する	color = 'darkslategray'
文字 列 走査 し 正規 表現 大文字 小文字 無視 し マッチ する 見る	re.search(pattern, s, flags=re.IGNORECASE)
データ フレーム 列 三つ 選択 する	df[[column, column2, column3]]
名前 付き タプル 使用 する	import collections
散布 図 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>')
文字 列 最後 文字	s[-1]
データ フレーム リスト カラム 欠損 値 平均 値 埋める	df[aList].fillna(df[aList].mean())
オプション エラー 無視 する よう 設定 する	errors = 'ignore'
折れ線 グラフ 描画 し 色 赤く する	plt.plot(データ列, データ列2, color='r')
折れ線 グラフ 破線 用い 描画 する	plt.plot(データ列, データ列2, linestyle='dashed')
日付 時刻 データ 日 後 進める	aDatetime + datetime.timedelta(days=n)
ヒストグラム 描画 し その 色 ダーク シアン 設定 する	plt.hist(データ列, color='darkcyan')
集合 濃度	len(aSet)
二つ 列 データ フレーム まとめ た 表 使う	df.groupby(['A', 'B'])
両端 キュー 値 スタック する	deq.append(element)
オプション グラフ 色 プラム 設定 する	color = 'plum'
二つ リスト タブ 区切っ プリント する	print(value, value2, sep='\t')
折れ線 グラフ 左 三 角 マーカー 緑色 する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
ヒストグラム 色 赤く する	plt.hist(データ列, color='r')
両端 キュー 中 値 存在 する	element in deq
データ フレーム リスト カラム 値 欠損 値 調べる	df[aList].isna()
折れ線 グラフ 色 シーグリーン 設定 する	plt.plot(データ列, データ列2, color='seagreen')
実 部 虚 部 複素数	complex(x, y)
青い 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='b')
ヒストグラム 描画 し 色 ダーク シアン 指定 する	plt.hist(データ列, color='darkcyan')
データ フレーム 数値 データ 列 抽出 する	df.select_dtypes('number')
データ フレーム 列 以上 かつ 未満 行 選択 する	df[(x <= df[column]) & (df[column] < x2)]
四角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='s')
折れ線 グラフ 色 カデット ブルー 設定 する	plt.plot(データ列, データ列2, color='cadetblue')
リスト 境界 値 列 ビン 分割 する	pd.cut(ds, aList)
綺麗 な グラフ 描画 する 準備 する	import seaborn as sns
ふたつ 集合 セット 互いに 素 調べる	aSet.isdisjoint(aSet2)
実数 千 位 丸める	round(x, -3)
文字 列 最後 部分 文字 列 二つ 区切っ 後半 文字 列 見る	s.rpartition(sub)[-1]
文字 列 内 ひとつ 数字 含ま れる 調べる	any(c.isdigit() for c in s)
折れ線 グラフ 描画 し その 色 ローン グリーン 設定 する	plt.plot(データ列, データ列2, color='lawngreen')
リスト 番目 消す	del aList[n]
日付 データ 日付 データ 時間 差 算出 する	aDate - aDate2
散布 図 黒い 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c='k')
折れ線 グラフ 印 加える	plt.plot(データ列, データ列2, marker='v')
ミディアムアクアマリン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mediumaquamarine')
オプション グラフ 色 シーグリーン 設定 する	color = 'seagreen'
文字 列 空白 区切っ 文字 列 リスト する	s.split()
緑色 大 バツ マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
ディムグレー ヒストグラム 色 設定 する	plt.hist(データ列, color='dimgray')
ヒストグラム 描画 し その 色 ライト ブルー 指定 する	plt.hist(データ列, color='lightblue')
データ フレーム リスト カラム 中 ある 調べる	df[aList].isin([value, value2])
文字 列 リスト 含ま れ ない 調べる	element not in aList
緑色 下 三角 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
リスト リスト 破線 グラフ 描画 し 色 濃い 変更 する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
オプション ビット 整数 型 使う	dtype = np.int8
データ フレーム カラム 中 文字 列 存在 する どう	df[col].isin([value])
少ない 方 カウンタ 列挙 する	aCounter.most_common()[::-1]
色 差別 ない 色 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, c='colorblind')
ヒストグラム 色 ダークマゼンタ 変更 する	plt.hist(データ列, color='darkmagenta')
データ フレーム データ 型 一覧	df.dtypes
リスト データ 列 暗い グラフ 描き その 色 青 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
折れ線 グラフ クロス 印 大き さ 設定 する	plt.plot(データ列, データ列2, marker='x', markersize=n)
オプション ミディアムターコイズ 用いる	color = 'mediumturquoise'
線 グラフ 色 ゴールド セット する	plt.plot(データ列, データ列2, color='gold')
浮動 小数点 数 小数点 丸める	round(x, n)
文字 列 片仮名 調べる	('ァ' <= ch <= 'ン')
データ フレーム リスト 列 四捨五入 し 整数 型 する	df[aList].round().astype(int)
カウンタ 文字 列 列挙 する	aCounter.keys()
要素 集合 含ま れる どう 調べる	element in aSet
ヒストグラム 描画 し その 色 サーモン 設定 する	plt.hist(データ列, color='salmon')
改行 せ ず 文字 列 プリント する	print(value, end='')
空 集合	set()
リスト 配列 黒い 淡い グラフ プロット する	plt.plot(xdata, ydata, linestyle='muted', color='k')
散布 図 カラー コード 四角 マーカー 使用 する	plt.plot(xdata, ydata, marker='s', c=rgb)
カウンタ 低 頻度 方 リスト し 得る	aCounter.most_common()[::-1]
データ フレーム 型 型 列 取り出す	df.select_dtypes(ty)
文字 列 フォーマット し 日付 データ 文字 列 変換 する	"aDate.strftime(""%d/%m/%y"")"
日付 用いる	import datetime
折れ線 グラフ 黒い 下 三角 印 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
ダークマゼンタ 色 ヒストグラム 描画 する	plt.hist(データ列, color='darkmagenta')
前もって 正規 表現 複数 行 対応 コンパイル する	re.compile(pattern, flag=re.MULTILINE)
カデット ブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='cadetblue')
両端 キュー 番目	deq[n]
折れ線 グラフ 描画 し その 色 ダークシアグリーン 指定 する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線 グラフ 描画 し その 色 ハニーデュー 設定 する	plt.plot(データ列, データ列2, color='honeydew')
データ フレーム 列 整列 し 先頭 する	df.sort_values(by='A', na_position='first')
オブジェクト リスト どう 調べる	isinstance(obj, list)
パステル 調 色 ヒストグラム プロット する	plt.hist(xdata, color='pastel')
辞書 浅く 複製 する	dict(aDict)
列 値 データ フレーム グループ 化 し それぞれ グループ ごと 件数 知る	df.groupby(column).size()
折れ線 グラフ 描画 し その 色 ミディアムパープル 指定 する	plt.plot(データ列, データ列2, color='mediumpurple')
イテラブル 両端 キュー 変換 する	collections.deque(iterable)
データ フレーム 二つ 列 昇順 ソート する	df.sort_values(by=['A', 'B'], ascending=True)
折れ線 グラフ 描画 し その 色 インディアン レッド 設定 する	plt.plot(データ列, データ列2, color='indianred')
オプション バイナリ 用 セット する	mode = 'rb'
リスト 分割 数 ビン 分割 する	pd.cut(aList, n)
両端 キュー 中 要素 数 数える	deq.count(element)
日付 データ 時間 後 進める	aDate + datetime.timedelta(hours=n)
列 データ フレーム 並べ 新しい インデックス 加える	df.sort_values(columns).reset_index()
データ 列 欠損 値 メディアン 変更 する	ds.fillna(ds.median())
オプション グラフ 色 カデット ブルー 設定 する	color = 'cadetblue'
リスト 値 昇順 並べ 直す	sorted(aList, reverse=True)
列 列 重複 ドロップ する	df.drop_duplicates(subset=[column, column2])
奇 整数 列	list(range(1, n, 2))
オプション ヘッダ 設定 する	header = names
オプション グラフ 色 ミディアムターコイズ 設定 する	color = 'mediumturquoise'
タイムスタンプデータ 木曜日	aDatetime.weekday() == 3
文字 列 リスト 要素 で ない 調べる	element not in aList
整数 十 六 進 表現 変換 する	hex(n)
折れ線 グラフ 右 三 角 マーカー 使う	plt.plot(データ列, データ列2, marker='>')
文字 列 カンマ 分割 し 列挙 する	s.split(',')
データ フレーム 列 値 グループ 化 し それぞれ グループ ごと 標準 偏差 算出 する	df.groupby(column).std()
スライス	slice(n)
データ 列 直前 値 セット する	ds.fillna(method='ffill')
折れ線 グラフ 色 ゴースト ホワイト 変更 する	plt.plot(データ列, データ列2, color='ghostwhite')
ロイヤル ブルー ヒストグラム 色 変更 する	plt.hist(データ列, color='royalblue')
データ フレーム 数値 まとめ 小数点 以下 桁 丸める	df.round(n)
文字 列 青色 プリント する	print(f'\033[34m{value}\033[0m')
折れ線 グラフ 上 三 角 印 緑色 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
タブ 区切り ファイル 読み込む	pd.read_csv(filename, encoding='shift_jis')
配列 差 求める	aArray - aArray2
小文字 見る	string.ascii_lowercase
文字 列 下線 付き する	f'\033[4m{value}\033[0m'
列 各 データ 何 回 出現 する 見る	df[col].value_counts()
リスト リスト 散布 図 黒い バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='x', c='k')
ヒストグラム 描画 し 色 ターコイズ 設定 する	plt.hist(データ列, color='turquoise')
変数 数式 微分 求める	sympy.diff(e, z)
リスト リスト 色 差別 ない グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
タプル 引数 展開 し 表示 する	print(*aTuple, sep=',')
実行 結果 下線 付き プリント できる 文字 列 変換 する	f'\033[4m{value}\033[0m'
列 と列 キー つ データ フレーム 左 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
折れ線 グラフ 描画 し 色 シスル 設定 する	plt.plot(データ列, データ列2, color='thistle')
ヒストグラム 色 パールゴールデンロッド 設定 する	plt.hist(データ列, color='palegoldenrod')
データ フレーム 指定 し た 列 名 一覧 列 取り出す	df[columns]
リスト イテラブル 散布 図 暗い 色 重 見 やすく 描く	plt.plot(xdata, ydata, c='dark', alpha=0.5)
ファイル ストリーム オープン し する	file = open(filepath)
組 逆順 する	reversed(aTuple)
ヒストグラム 色 青 緑 指定 する	plt.hist(データ列, color='teal')
イテラブル 両端 キュー 作る	collections.deque(iterable)
ヒストグラム 色 シスル セット する	plt.hist(データ列, color='thistle')
折れ線 グラフ 描画 し その 色 ピンク 指定 する	plt.plot(データ列, データ列2, color='pink')
小数点 以下 桁 表示 する	print(':.2f'.format(x))
タプル 内 要素 少なくとも ひとつ 真 どう 調べる	any(aTuple)
ヒストグラム 色 ライト シアン 設定 する	plt.hist(データ列, color='lightcyan')
折れ線 グラフ 色 オリーブ 指定 する	plt.plot(データ列, データ列2, color='olive')
データ 列 データ 列 散布 図 描画 する	plt.scatter(xdata, ydata)
黒い ポイント マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='.', c='k')
カウンタ イテラブル 更新 する	aCounter.update(iterable)
折れ線 グラフ 菱形 マーカー 黒く する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
集合 すべて 要素 別 集合 含ま れる	aSet.issubset(aSet2)
データ フレーム リスト 列 どの 程度 分散 し いる 見る	df[aList].var()
オプション グラフ 色 黄色 設定 する	color = 'yellow'
変数 黄色 する	f'\033[33m{value}\033[0m'
二つ データ フレーム 縦 方向 一つ まとめる	pd.concat([df, df2], axis=0)
線 グラフ 描画 し その 色 ダークスレートブルー 設定 する	plt.plot(データ列, データ列2, color='darkslateblue')
リスト リスト 散布 図 暗い 色 描画 する	plt.plot(xdata, ydata, c='dark')
組 内 要素 全て 真	all(aTuple)
リスト リスト 散布 図 描き マーカー 星 設定 する	plt.plot(xdata, ydata, marker='*')
ライトスチールブルー ヒストグラム 色 設定 する	plt.hist(データ列, color='lightsteelblue')
タイムスタンプデータ 文字 列 フォーマット し 文字 列 する	"aDatetime.strftime(""%d/%m/%y"")"
実 数 乗	math.exp(x)
線 グラフ 色 ベージュ 変更 する	plt.plot(データ列, データ列2, color='beige')
ヒストグラム 描画 し その 色 スラグレー 変更 する	plt.hist(データ列, color='slategrey')
イテラブル 配列 する	np.array(iterable)
実数 小数点 以下 丸める	round(x)
データ フレーム 欠損 値 最 頻 値 埋める	df.fillna(df.mode().iloc[0])
データ フレーム カラム 値 欠損 値	df[col].isna()
全 要素 初期 化 し た 配列	np.zeros(要素数)
スタック 空 で ある 調べる	len(deq) == 0
データ フレーム リスト 列 未 入力 値 最 頻 値 指定 する	df[aList].fillna(df[aList].mode().iloc[0])
リスト データ 列 散布 図 描き 右 三 角 マーカー 色 カラー コード 指定 する	plt.plot(xdata, ydata, marker='>', c=rgb)
各 桁 総和	sum(map(int, str(n)))
以上 以下 調べる	-9 <= n <= 9
データ 列 文字 列 欠損 値 する	ds.replace(s, np.nan)
オプション グラフ 色 スラグレー 設定 する	color = 'slategrey'
オプション グラフ 色 ミッドナイト ブルー する	color = 'midnightblue'
オプション グラフ 色 ライトグリーン 設定 する	color = 'lightseagreen'
グラフ 中 日本語 表示 有効 する	sns.set(font='IPAexGothic')
リスト 等間隔 個 ビニング する	pd.cut(aList, n)
集合 タプル 変換 する	tuple(aSet)
ピアソン データ フレーム リスト 列 相関 行列	df[aList].corr(method='pearson')
今日 文字 列 フォーマット し 文字 列 変換 する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
配列 同じ 大き さ 空 行列 作成 する	np.empty_like(aArray)
リスト 値 表示 する	print(*aList)
イテラブル イテラブル 続ける	itertools.chain(iterable, iterable2)
折れ線 グラフ 印 印 する	plt.plot(データ列, データ列2, marker='^')
イテラブル イテラブル 連結 する	itertools.chain(iterable, iterable2)
タプル 要素 項目 名 加える	aDict[key] = element
ヒストグラム 色 白 変更 する	plt.hist(データ列, color='white')
今日 水曜日 調べる	datetime.datetime.today().weekday() == 2
オプション ライト グレー 色 使う	color = 'lightgray'
折れ線 グラフ 描画 し 色 レモン シフォン 変更 する	plt.plot(データ列, データ列2, color='lemonchiffon')
ビン 数 用い 配列 ビンニング し ラベル つける	pd.cut(aArray, n, labels=names)
配列 リスト パステル 調 の 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
配列 列 ごと 最小 値	np.min(aArray, axis=0)
破線 色 濃い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
オプション フォレストグリーン グラフ 色 セット する	color = 'forestgreen'
ヒストグラム 色 シエナ 設定 する	plt.hist(データ列, color='sienna')
データ フレーム 列 欠損 値 平均 置換 する	df[col].fillna(df[col].mean())
折れ線 グラフ 描画 し その 色 グリーン イエロー 設定 する	plt.plot(データ列, データ列2, color='greenyellow')
オプション バイナリ モード 設定 する	mode = 'rb'
オプション グラフ 色 フクシア 指定 する	color = 'fuchsia'
ファイル 改行 取り除い 一 行 読む	f.readline()
ミスティローズ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='mistyrose')
ファイル パス 文字 コード 開く	open(filepath, encoding=text)
折れ線 グラフ 青い バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線 グラフ 大 バツ マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
スクリプト ファイル 同じ ディレクトリ ファイル パス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
オプション グラフ 色 グレー 指定 する	color = 'grey'
ファイル パス 書き込み 用 オープン する	open(filepath, mode='w', encoding='euc_jp')
二つ 文字 列 辞書 順 比較 する	s < s2
データ フレーム 中 ある 文字 列 合計 カウント する	df.isin([value]).sum()
整数 十 六 進 表記	hex(n)
折れ線 グラフ 描画 し その 色 ダークスレートブルー 設定 する	plt.plot(データ列, データ列2, color='darkslateblue')
赤色 バツ マーカー リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
グラフ 用途 ポスター 設定 する	sns.set(context='poster')
ファイル 文字 読み込む	f.read(n)
マッピング 別 マッピング 値 更新 する	aDict.update(aDict2)
ホワイトスモーク 色 ヒストグラム 描画 する	plt.hist(データ列, color='whitesmoke')
オプション グラフ 色 モカシン 設定 する	color = 'moccasin'
エラー 出力 する	sys.stderr
色 差別 ない 色 リスト ヒストグラム 描画 する	plt.hist(xdata, color='colorblind')
データ フレーム 中 列 と列 重複 あれ 削除 する	df.drop_duplicates(subset=column)
ファイル パス ない	not os.path.exists(filepath)
文字 列 ケース 入れ替える	s.swapcase()
スチール ブルー ヒストグラム 色 指定 する	plt.hist(データ列, color='steelblue')
プロット 用途 画面 変更 する	sns.set(context='notebook')
青色 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
折れ線 グラフ 描画 し 色 ダークスラテグレー 変更 する	plt.plot(データ列, データ列2, color='darkslategray')
破線 付ける	plt.axvline(x=0, linestyle='dashed')
タプル ひとつ 飛ばし 取り出す	aTuple[::2]
データ フレーム リスト カラム 正規 分布 どれ 尖っ いる 見る	df[aList].skew()
データ 列 最 頻 値 求める	ds.mode()
文字 列 キーワード	keyword.iskeyword(s)
ファイル 結合 する	os.path.join(filepath, filename)
改行 する	print()
赤い 濃い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
ヒストグラム 描画 し 色 グリーン 設定 する	plt.hist(データ列, color='green')
配列 リスト 青い 暗い グラフ 描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
色 ヒストグラム 描画 する	plt.hist(データ列, color='darkslategrey')
文字 列 順に プリント する	print(value, value2)
データ フレーム 二つ 列 破壊 的 並べ 直す	df.sort_values(by=['A', 'B'], inplace=True)
青い 淡い 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
オプション カーキ 色 用いる	color = 'khaki'
データ フレーム 列 名 リスト 降順 破壊 的 ソート する	df.sort_values(by=column, ascending=False, inplace=True)
配列 配列 淡い 色 折れ線 グラフ 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='muted')
リスト タプル する	tuple(aList)
グラフ 背景 色 暗く する	sns.set(style='darkgrid')
データ フレーム 列 文字 列 終わら ない データ 抽出 する	df[not df[column].str.endswith(s)]
データ フレーム リスト 列 小数点 以下 桁 丸める	df[aList].round(n)
散布 図 マーカー 使用 する	plt.plot(xdata, ydata, marker='^')
オプション インディゴ 色 用いる	color = 'indigo'
文字 列 中 ひとつ 非 アルファベット 含ま れる 調べる	any(not c.isalpha() for c in s)
オプション 改行 コード 動作 環境 依存 設定 する	newline = None
文字 列 開始 位置 後 部分 文字 列 ある	s.find(sub, start) != -1
実数 アーク コサイン	math.acos(x)
レモン シフォン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lemonchiffon')
文字 列 示す 文字 コード 用い ファイル 開く	open(filepath, encoding=s)
文字 列 最後 部分 文字 列 分け た 時 後半 文字 列	s.rpartition(sub)[-1]
配列 等量 ビン 数 ビン 分割 する	pd.qcut(aArray, n)
緑色 変数 表示 する	print(f'\033[32m{value}\033[0m')
二つ データ フレーム 異なる 列 キー し 内部 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
つ 文字 列 タブ 区切っ 表示 する	print(value, value2, sep='\t')
最大 値 最小 値 整数 乱数 生成 する	random.randint(最小値, 最大値)
双方向 キュー 空	len(deq) == 0
ゴースト ホワイト 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='ghostwhite')
小数点 以下 桁 プリント する	print(':.1f'.format(x))
コマンド 第 二 引数 知る	sys.argv[1]
カラー コード ダイアモンドマーカー 散布 図 使う	plt.plot(xdata, ydata, marker='D', c=rgb)
実数 自然 対数	math.log(x)
印字 できる 文字 見る	string.printable
円周 率 使う	math.pi
本日 曜日 整数 求める	datetime.datetime.today().weekday()
オプション ライム 使う	color = 'lime'
文字 列 後ろ 見る	s[-1]
ヒストグラム 描画 し その 色 ゲインズボロ 設定 する	plt.hist(データ列, color='gainsboro')
ひとつ 非 大文字 文字 列 中 ある	any(not c.isupper() for c in s)
折れ線 グラフ 星 マーカー 緑色 する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='g')
データ フレーム リスト 列 空文字 変換 し ドロップ する	df[aList].replace('', np.nan).dropna()
ヒストグラム 色 紺碧 変更 する	plt.hist(データ列, color='azure')
ヒストグラム 色 ゲインズボロ 設定 する	plt.hist(データ列, color='gainsboro')
文字 列 中 部分 文字 列 カウント する	s.count(sub)
小数点 数 進 対数	math.log2(x)
オプション ダークオーキッド 使う	color = 'darkorchid'
散布 図 マーカー 描画 する	plt.plot(xdata, ydata, marker='^')
ヒストグラム 描画 し その 色 シルバー 設定 する	plt.hist(データ列, color='silver')
リスト リスト 散布 図 カラー コード 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c=rgb)
赤色 色 差別 ない 折れ線 グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
ヒストグラム 描画 し その 色 ドジャーブルー 設定 する	plt.hist(データ列, color='dodgerblue')
折れ線 グラフ 描画 し その 色 ネイビー 設定 する	plt.plot(データ列, データ列2, color='navy')
データ 列 日付 データ 変換 し データ フレーム インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
ヒストグラム 描画 し その 色 ペールグリーン 設定 する	plt.hist(データ列, color='palegreen')
折れ線 グラフ 描画 し 色 濃い シアン 設定 する	plt.plot(データ列, データ列2, color='darkcyan')
時間 イン ポート する	import time
ヒストグラム 描画 し その 色 グリーン イエロー 変更 する	plt.hist(データ列, color='greenyellow')
実数 文字 列 変換 する	str(x)
全 要素 初期 化 し た 符号 なし ビット 整数 型 行列	np.zeros(行数, 列数, dtype=np.uint8)
イテラブル リスト 散布 図 描画 し マーカー する	plt.plot(xdata, ydata, marker='v')
リスト データ 列 濃い グラフ 描き その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
ヒストグラム 描画 し その 色 ビスク 変更 する	plt.hist(データ列, color='bisque')
テンプレート タプル フォーマット する	formatText.format_map(aDict)
オプション パパイヤウィップ 色 設定 する	color = 'papayawhip'
折れ線 グラフ 色 ダークオーキッド 設定 する	plt.plot(データ列, データ列2, color='darkorchid')
オプション フォレストグリーン 用いる	color = 'forestgreen'
文字 列 フォーマット し 日付 時刻 データ 文字 列 する	"aDatetime.strftime(""%d/%m/%y"")"
改行 せ ず 二つ 数値 プリント する	print(value, value2, end='')
縦 方向 データ フレーム つなぐ	pd.concat([df, df2])
パレットトルコイズ 色 ヒストグラム 描画 する	plt.hist(データ列, color='paleturquoise')
最初 部分 文字 列 文字 列 分割 し た とき 前半 文字 列 取り出す	s.partition(sub)[0]
分子 分母 有理数 生成 する	fractions.Fraction(分子, 分母)
折れ線 グラフ 描画 し その 色 ライトグリーン 設定 する	plt.plot(データ列, データ列2, color='lightseagreen')
配列 個 ランダム 選ぶ	random.choices(iterable, k=n)
棒グラフ 描画 し 中央 寄せ する	plt.bar(ラベル列, データ列, align='center')
オプション インデックス 自動的 な 連 番 設定 する	index_col = None
オプション グラフ 色 暗い 赤 設定 する	color = 'darkred'
データ フレーム 指定 さ れ た 列 取り出す	df[[column, column2]]
データ フレーム 重複 する データ ドロップ し インプレイス する	df.drop_duplicates(inplace=True)
折れ線 グラフ 描画 し 色 コーンズシルク 変更 する	plt.plot(データ列, データ列2, color='cornsilk')
文字 列 中央 寄せ する	s.center(文字列幅)
日付 データ 日 分 減算 する	aDate - datetime.timedelta(days=n)
散布 図 黒い 三角 マーカー 使う	plt.plot(xdata, ydata, marker='^', c='k')
ヒストグラム 描画 し 色 ダークシアグリーン 設定 する	plt.hist(データ列, color='darkseagreen')
データ フレーム 列 ユニーク な 値 抽出 し リスト 化 する	df[col].unique().tolist()
オブジェクト 整数 クラス 確認 する	isinstance(obj, int)
データ フレーム カラム 平均	df[col].mean()
リスト リスト 展開 する	aList.extend(aList2)
リスト リスト 散布 図 カラー コード 下 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='v', c=rgb)
真 なる 列 要素	itertools.takewhile(predicateFunc, iterable)
折れ線 グラフ 下 三角 マーカー 線 幅 変更 する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
変数 数式 積分 行う	sympy.integrate(e, z)
プロット 色調 淡く する	sns.set(pallete='muted')
データ 列 イン ポート する	import pandas as pd
無限 大	math.inf
イテラブル リスト 黒色 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
ファイル 付き オープン する	open(filepath, encoding='utf_8_sig')
データ フレーム リスト 列 正規 分布 どの 程度 尖っ いる 見る	df[aList].skew()
オプション ダーク オレンジ 色 使う	color = 'darkorange'
折れ線 グラフ 描画 し その 色 ローン グリーン 設定 する	plt.plot(データ列, データ列2, color='lawngreen')
シーケンス カウント し カウンタ 更新 する	aCounter.update(iterable)
行列 行列 式	np.linalg.det(aArray)
組 引数 展開 し 出力 する	print(*aTuple)
線 グラフ 色 ライム 設定 する	plt.plot(データ列, データ列2, color='lime')
リスト 中 文字 列 最初 見つかる 場所	aList.index(element)
赤い マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v', c='r')
リスト リスト 散布 図 描画 し 左 三 角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='<', c=rgb)
小数点 以下 表示 精度 桁 増やす	pd.set_option('precision', n)
標準 エラー 得る	sys.stderr
オプション ダーク グレー 使う	color = 'darkgrey'
データ フレーム 列 グループ 化 する	df.groupby('A')
オプション シアン グラフ 色 指定 する	color = 'cyan'
ヒストグラム 描画 し 色 ダーク グリーン 設定 する	plt.hist(データ列, color='darkgreen')
データ フレーム カテゴリ データ 列 抽出 する	df.select_dtypes('object')
文字 列 開始 位置 終了 位置 間 部分 文字 列 含ま れる どう 確認 する	s.find(sub, start, end) != -1
文字 列 バイト 配列 変換 する	bytearray(s)
年 月 日 日付 変換 する	datetime.date(year=year, month=month, day=day)
かけ た 値 する	n *= n2
折れ線 グラフ 下 三角 マーカー 青く する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
フローラルホワイト 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='floralwhite')
文字 列 部分 文字 列 分割 し 列挙 する	s.split(sub)
ヒストグラム 描画 し 色 インディアン レッド 設定 する	plt.hist(データ列, color='indianred')
オプション ミント クリーム 色 使う	color = 'mintcream'
データ フレーム カテゴリ データ 列 名 列挙 する	df.select_dtypes('object').columns
赤色 バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='r')
リスト 末尾 値 取り出す	aList.pop()
ヒストグラム 描画 し その 色 ライトスチールブルー セット する	plt.hist(データ列, color='lightsteelblue')
オプション パウダー ブルー 色 使う	color = 'powderblue'
文字 列 部分 文字 列 二分 し 前半 文字 列 求める	s.partition(sub)[0]
折れ線 グラフ 描画 し マーカー 左 三 角 印 する	plt.plot(データ列, データ列2, marker='<')
データ フレーム 行 目 消す	df.drop(n, axis=0)
データ 列 どの 程度 分散 し いる 確認 する	ds.var()
ファイル 文字 列 書き込む	f.write(s)
空白 文字 全て 使う	string.whitespace
データ フレーム カラム 欠損 値 増やす	df[col].fillna(x)
データ フレーム 母 標準 偏差	df.std(ddof=0)
データ フレーム 二つ 列 昇順 ソート し 更新 する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
カウンタ 多い 順 列挙 する	aCounter.most_common()
辞書 エントリ 数	len(aDict)
リスト データ 列 青色 明るい 描く	plt.plot(xdata, ydata, linestyle='bright', color='b')
オプション ペルー 用いる	color = 'peru'
折れ線 グラフ 色 ライト グレー 変更 する	plt.plot(データ列, データ列2, color='lightgray')
タイムスタンプデータ 何 分 知る	aDatetime.minute
ヒストグラム 描画 し その 色 ミディアムパープル 変更 する	plt.hist(データ列, color='mediumpurple')
第 コマンド 引数	sys.argv[1]
異なる 列 キー 二つ データ フレーム 結合 する	pd.merge(df, df2, left_on='A', right_on='B')
配列 リスト 破線 描画 し その 色 淡い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
データ 列 リスト 散布 図 描き 色 色 差別 ない 設定 する	plt.plot(xdata, ydata, c='colorblind')
リスト リスト 散布 図 赤い 丸 マーカー 描画 する	plt.plot(xdata, ydata, marker='o', c='r')
プラス 算出 する	n + n2
部分 文字 列 文字 列 終了 位置 前 含ま れる	s.find(sub, 0, end) != -1
散布 図 右 三 角 マーカー 用いる	plt.plot(xdata, ydata, marker='>')
標準 入力 行 読む	sys.stdin.readline()
タプル 最初 オブジェクト 探す	aTuple.index(element)
実数 正弦 逆数	math.asin(x)
折れ線 グラフ 描画 し 色 スチール ブルー 設定 する	plt.plot(データ列, データ列2, color='steelblue')
ヒストグラム 色 オールド レース 変更 する	plt.hist(データ列, color='oldlace')
エポック 秒 文字 列 日付 データ 変換 する	pd.to_datetime(s, unit='s', utc=True)
オプション 線 種 点線 変更 する	linestyle = 'dotted'
列 と列 キー 二つ データ フレーム 右 結合 する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
点線 ヒストグラム 線 スタイル 設定 する	plt.hist(データ列, linestyle='dotted')
データ フレーム 欠損 値 ある 箇所 色 つける	df.style.highlight_null()
折れ線 グラフ 描画 し その 色 ペールグリーン 指定 する	plt.plot(データ列, データ列2, color='palegreen')
オプション 文字 コード 付き 設定 する	encoding = 'utf_8_sig'
オプション 読み込み モード 設定 する	mode = 'r'
数列 リスト カラー コード 色 差別 ない グラフ 描く	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
実数 乗 する	x ** 2
破壊 的 列 列 データ フレーム ソート する	df.sort_values(by=['A', 'B'], inplace=True)
日付 データ 日 分 減らす	aDate - datetime.timedelta(days=n)
折れ線 グラフ 印 下 三角 する	plt.plot(データ列, データ列2, marker='v')
リスト リスト 追加 する	aList.extend(aList2)
データ フレーム 各 列 毎 グループ 分け し 列 最小 値 求める	df.groupby(column)[column2].min()
散布 図 カラー コード マーカー 用いる	plt.plot(xdata, ydata, marker='v', c=rgb)
データ フレーム 列 中 文字 列 文字 列 ある どう	df[col].isin([value, value2])
ヒストグラム 描画 し その 色 貝殻 設定 する	plt.hist(データ列, color='seashell')
二つ 辞書 ネスト 化 する	collections.ChainMap(aDict, aDict2)
オプション グラフ 色 リネン する	color = 'linen'
オプション ミディアムブルー グラフ 色 設定 する	color = 'mediumblue'
浮動 小数点 数 変換 する	float(x)
線 グラフ 描画 し その 色 スカイ ブルー 設定 する	plt.plot(データ列, データ列2, color='skyblue')
オプション シーグリーン グラフ 色 変更 する	color = 'seagreen'
折れ線 グラフ 青い 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線 グラフ 描画 し その 色 ホワイト 設定 する	plt.plot(データ列, データ列2, color='white')
ヒストグラム 描画 し 色 ミディアムスプリンググリーン 設定 する	plt.hist(データ列, color='mediumspringgreen')
オプション 読み込み モード 使用 する	mode = 'r'
リスト データ 列 色 差別 ない 折れ線 グラフ 描画 し 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
データ フレーム 中 列 重複 ある 調べる	df.duplicated(subset=column)
ライト サーモン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightsalmon')
オプション グラフ 色 ナバホホワイト する	color = 'navajowhite'
ブルー バイオレット ヒストグラム 色 設定 する	plt.hist(データ列, color='blueviolet')
ヒストグラム 色 フローラルホワイト 設定 する	plt.hist(データ列, color='floralwhite')
文字 列 平仮名	('ぁ' <= ch <= 'ん')
ヒストグラム 色 チョコレート 設定 する	plt.hist(データ列, color='chocolate')
赤色 明るい 折れ線 グラフ 描く	plt.plot(xdata, ydata, linestyle='bright', color='r')
データ フレーム 列 少ない 行 抽出 する	df[df[column] < x]
データ フレーム 列 文字 列 文字 列 始まら ない データ 抽出 する	df[not df[column].str.startswith(s)]
間隔 無限 カウントアップ する	itertools.count(start=n, step=step)
オブジェクト ハッシュ 値	hash(obj)
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
数値 浮動 小数点 数 変換 する	float(e)
オブジェクト プロパティ 値 値 設定 する	setattr(obj, プロパティ名, 値)
自然 数	math.lcm(n, n2)
行列 行 ごと 標準 偏差 計算 する	np.std(aArray, axis=1)
ヒストグラム 色 ラベンダー 指定 する	plt.hist(データ列, color='lavender')
データ フレーム 列 つ 選択 する	df[[column, column2, column3]]
ヒストグラム 描画 し その 色 フォレストグリーン 変更 する	plt.hist(データ列, color='forestgreen')
イテラブル 組み合わせ 得る	itertools.combinations(iterable, n)
リスト 文字 列 リスト 変換 し 部分 文字 列 連結 する	sub.join(map(str, iterable))
符号 付き 整数 最大 値 調べる	sys.maxsize
両端 キュー 空 する	deq.clear()
黒い マーカー 散布 図 使う	plt.plot(xdata, ydata, marker='v', c='k')
ヒストグラム 描画 し その 色 ベージュ 変更 する	plt.hist(データ列, color='beige')
線 グラフ 色 ブルー バイオレット 設定 する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線 グラフ 黒い 右 三 角 印 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
データ フレーム どの 値 頻出 見る	df.mode()
プロット 目的 画面 設定 する	sns.set(context='notebook')
ヒストグラム 描画 し 正規 化 する	plt.hist(データ列, density=True)
データ 列 リスト 折れ線 グラフ 描い 色 文字 列 設定 する	plt.plot(xdata, ydata, color=s)
年 月 日 時 分 日付 時刻 変換 する	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
文字 列 両端 空白 改行 除く	s.strip()
データ 列 中 いくつ 欠損 値 ある 数える	ds.isna().sum()
リスト リスト パステル 調 色 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
折れ線 グラフ 描画 し その 色 ライト グレー 設定 する	plt.plot(データ列, データ列2, color='lightgrey')
ホット ピンク ヒストグラム 色 変更 する	plt.hist(データ列, color='hotpink')
データ フレーム 重複 し た データ ドロップ し 更新 する	df.drop_duplicates(inplace=True)
真	True
リスト リスト 黒い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
データ フレーム どの 程度 分散 し いる 見る	df.var()
オプション 丸 印 使う	marker = 'o'
年 月 日 時 日付 時刻	datetime.datetime(year=year, month=month, day=day, hour=hour)
データ フレーム 各 列 毎 グループ 分け し 列 合計 算出 する	df.groupby(column)[column2].sum()
データ フレーム 列 文字 列 含ま れ ない 行 取り出す	df[not df[column].str.contains(s)]
配列 ビン 数 ビン 分割 する	pd.cut(aArray, n)
データ 列 文字 列 長 列 使う	ds.str.len()
イテラブル リスト 散布 図 赤色 左 三 角 マーカー 描く	plt.plot(xdata, ydata, marker='<', c='r')
符号 付き 長 さ バイト 列 変換 する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
オプション 紺 グラフ 色 セット する	color = 'darkblue'
集合 組 変換 する	tuple(aSet)
折れ線 グラフ 描画 し その 色 ミディアムバイオレットレッド 変更 する	plt.plot(データ列, データ列2, color='mediumvioletred')
文字 列 部分 文字 列 二つ 区切っ 後半 文字 列 使う	s.partition(sub)[-1]
オプション リネン 使用 する	color = 'linen'
数 十 六 進 表記 文字 列 変換 する	x.hex()
数列 配列 明るい グラフ 描画 し その 色 黒く する	plt.plot(xdata, ydata, linestyle='bright', color='k')
第 一 引数 指定 し た ファイル 名	sys.argv[1]
折れ線 グラフ 大 バツ マーカー 使う	plt.plot(データ列, データ列2, marker='X')
実行 時 標準 出力 出力 先 ターミナル	os.isatty(sys.stdin.fileno())
リスト 番目 以降 部分 取り出す	aList[n:]
オプション モカシン グラフ 色 設定 する	color = 'moccasin'
折れ線 グラフ バツ マーカー 赤く する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
二つ 文字 列 大文字 小文字 無視 し 比較 する	s.casefold() < s2.casefold()
表 データ 列 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby(column)]
モジュール 検索 する パス ディレクトリ 追加 する	sys.path.append(dir)
紺碧 色 ヒストグラム 描画 する	plt.hist(データ列, color='azure')
オプション ビスク 色 用いる	color = 'bisque'
データ 列 各 値 出現 回数	ds.value_counts()
全 進 数字	string.octdigits
ベクトル 列 ごと 平均	np.mean(aArray, axis=0)
実数 乗	pow(x, n)
三 変数 最大 値	max(x, y, z)
リスト データ 列 散布 図 カラー コード 星 マーカー 描画 する	plt.plot(xdata, ydata, marker='*', c=rgb)
ラベル付け し データ 列 配列 折れ線 グラフ プロット する	plt.plot(xdata, ydata, label=untitled)
文字 列 平仮名 どう 調べる	('ぁ' <= ch <= 'ん')
折れ線 グラフ 描画 し その 色 アイボリー する	plt.plot(データ列, データ列2, color='ivory')
データ フレーム 列 グループ 化 し 要約 統計 量 求める	df.groupby(column).describe()
配列 配列 相関 可視 化 する	plt.scatter(xdata, ydata)
タイムスタンプデータ 火曜日 調べる	aDatetime.weekday() == 1
リスト リスト 散布 図 淡い 色 用い 描画 する	plt.plot(xdata, ydata, c='muted')
文字 文字 コード 変換 する	ord(ch)
リスト データ 列 黒い 暗い グラフ 描く	plt.plot(xdata, ydata, linestyle='dark', color='k')
オプション グラフ 色 青 指定 する	color = 'blue'
列 種類	df.info()
文字 列 終了 位置 前 部分 文字 列 含ま れ ない 調べる	s.find(sub, 0, end) == -1
配列 配列 散布 図 菱形 マーカー 描く	plt.plot(xdata, ydata, marker='D')
整数 分の する	n //= n2
日付 時刻 データ 秒	aDatetime.second
データ フレーム 中 列 と列 重複 あれ ドロップ する	df.drop_duplicates(subset=column)
折れ線 グラフ 色 ミディアムスプリンググリーン 設定 する	plt.plot(データ列, データ列2, color='mediumspringgreen')
カウンタ 同士 ユニオン 演算 する	aCounter | aCounter2
線 グラフ 描画 し その 色 青 設定 する	plt.plot(データ列, データ列2, color='blue')
オプション ヘッダ 自動的 な 連 番 指定 する	header = None
八 進 文字 列 バイト バイナリ 変換 する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
ファイル 開い 書き込み ストリーム 使う	open(filepath, mode='w')
ファイル 読み込み モード オープン する	open(filepath, mode='r')
ヒストグラム 描画 し その 色 シーグリーン 設定 する	plt.hist(データ列, color='seagreen')
横 棒グラフ 描画 し 中央 寄せ する	plt.barh(ラベル列, データ列, align='center')
既存 ファイル 文字 列 示す 文字 コード 追加 できる よう オープン する	open(filepath, mode='a', encoding=s)
実行 環境 名	sys.platform
文字 列 先頭 部分 文字 列 取り除く	s.removeprefix(sub)
オブジェクト 集合 クラス どう	isinstance(obj, set)
オプション 欠損 値 無視 する	dropna = True
リスト リスト カラー コード 淡い グラフ 描画 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
行列 全 要素 指定 値 する	aArray[:, :] = 指定の値
リスト 中央 値 分割 する	pd.qcut(aList, 2)
オプション 最初 行 ヘッダ セット する	header = 0
ヒストグラム 色 シルバー セット する	plt.hist(データ列, color='silver')
折れ線 グラフ 描画 し その 色 ミディアムブルー 変更 する	plt.plot(データ列, データ列2, color='mediumblue')
オプション パープル 使う	color = 'purple'
データ フレーム 列 破壊 的 ドロップ する	df.drop(column, axis=1, inplace=True)
データ 列 中 文字 列 文字 列 いくつ ある 数える	ds.isin([value, value2]).sum()
最大 値 最小 値 範囲 一様 な 乱数 生成 する	random.uniform(最小値, 最大値)
ない	not n
空 集合 使う	set()
オプション ライト イエロー 色 使用 する	color = 'lightyellow'
データ 列 秒	ds.dt.second
折れ線 描く	plt.plot(xdata, ydata)
エクセルデータファイル 複数 シート 読み込む	pd.read_excel(filename, sheet_name=[n, n2])
集合 濃度 求める	len(aSet)
線 グラフ 描画 し その 色 ダーク シアン 設定 する	plt.plot(データ列, データ列2, color='darkcyan')
文字 列 末尾 空白 区切る	s.rsplit()
データ フレーム 欠損 値 落とす	df.dropna()
イテラブル ベクトル 作る	np.array(iterable)
ヒストグラム 描画 し 色 赤く する	plt.hist(データ列, color='r')
データ フレーム 列 欠損 値 中央 値 埋める	df[col].fillna(df[col].median())
つ 文字 列 スラッシュ 区切っ プリント する	print(value, value2, sep='/')
列 要約 統計 量	ds.describe()
折れ線 グラフ ポイント マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
安全 文字 列 接尾 辞 部分 文字 列 取り除く	s.removesuffix(sub)
データ フレーム 中 文字 列 文字 列 いくつ ある 数える	df.isin([value, value2]).sum()
数値 数値 求める	float(e)
文字 列 最初	s[0]
折れ線 グラフ 描画 し 色 ダークスラテグレー 設定 する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線 グラフ 四角 印 黄色 する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
実数 正弦 逆数 求める	math.asin(x)
データ フレーム リスト カラム 尖 度	df[aList].skew()
データ フレーム リスト カラム 正規 分布 どの 程度 歪ん いる 見る	df[aList].kurt()
ベクトル ユニーク な 要素 その 位置	u, indices = np.unique(aArray, return_index=True)
日付 データ 金曜日 調べる	aDate.weekday() == 4
双方向 キュー 部分 要素	collections.deque(itertools.islice(deq, start, end))
折れ線 グラフ 点線 描画 する	plt.plot(データ列, データ列2, linestyle='dotted')
イテラブル カウンタ 作る	collections.Counter(iterable)
オプション 小麦色 色 指定 する	color = 'wheat'
昇順 データ フレーム 二つ 列 用い 破壊 的 整列 する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
線 グラフ 色 青 紫 変更 する	plt.plot(データ列, データ列2, color='violet')
散布 図 黒い 下 三角 マーカー 使う	plt.plot(xdata, ydata, marker='v', c='k')
列 スタック 変換 する	collections.deque(iterable)
ゼロ 埋め さ れ た ブール 型 配列 作成 する	np.zeros(要素数, dtype=np.int32)
黒い ダイアモンドマーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='D', c='k')
オプション バリー ウッド 色 使う	color = 'burlywood'
タプル ワン ホット ベクトル 変換 する	pd.get_dummies(iterable)
ヒストグラム 色 ライト グレー 指定 する	plt.hist(データ列, color='lightgrey')
プロット サイズ 縦 横 変更 する	plt.figure(figsize=(width, height))
配列 データ 列 破線 グラフ 描画 し 色 濃い 変更 する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
使う	import json
オプション ミディアムバイオレットレッド グラフ 色 指定 する	color = 'mediumvioletred'
横 棒グラフ 積み上げ する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
折れ線 グラフ 色 ミディアムターコイズ 指定 する	plt.plot(データ列, データ列2, color='mediumturquoise')
スクリプト 名前 知る	sys.argv[0]
列 四 分 位 数 分割 する	pd.qcut(ds, 4)
辞書 キー 値	aDict[key]
二つ 文字 列 スラッシュ 区切っ プリント する	print(value, value2, sep='/')
濃い グラフ 線 幅 変更 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
配列 リスト 散布 図 描画 し マーカー 下 三角 設定 する	plt.plot(xdata, ydata, marker='v')
データ フレーム 文字 列 欠損 値 変換 する	df.replace(s, np.nan)
データ フレーム 列 欠損 値 直前 値 設定 する	df[col].fillna(method='ffill')
文字 列 中 部分 文字 列 含ま れ ない 調べる	sub not in s
文字 列 書式 日付 時刻 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
ふたつ 集合 互いに 素 どう	aSet.isdisjoint(aSet2)
エポック 秒 文字 列 日付 データ 変換 する	pd.to_datetime(s, unit='s', utc=True)
両端 キュー 要素 数	len(deq)
オプション 色 ダーク グリーン 設定 する	color = 'darkgreen'
イテラブル 各 値 両端 キュー 末尾 追加 する	deq.extend(iterable)
データ フレーム リスト カラム 中 ある 日付 データ 日付 データ 合計 数える	df[aList].isin([value, value2]).sum()
双方向 キュー 空か どう 確認 する	len(deq) == 0
部分 文字 列 文字 列 開始 位置 終了 位置 間 存在 する 調べる	s.find(sub, start, end) != -1
オブジェクト フィールド 存在 する	hasattr(obj, プロパティ名)
データ フレーム 数値 データ 列 取り出す	df.select_dtypes('number')
オプション 区切り 改行 する	sep = '\n'
ヒストグラム 色 ゴールデン ロッド セット する	plt.hist(データ列, color='goldenrod')
リスト ビン 数 ビニング し ラベル つける	pd.cut(aList, n, labels=names)
配列 リスト 散布 図 描き マーカー 星 設定 する	plt.plot(xdata, ydata, marker='*')
線 グラフ 描画 し その 色 白 設定 する	plt.plot(データ列, データ列2, color='white')
減少 さ せる	n -= n2
英数字 文字 列 内 ある	any(c.isalnum() for c in s)
辞書 順 文字 列 文字 列 後 調べる	s > s2
文字 列 リスト 区切り 連結 する	sep.join(aStringList)
データ フレーム カラム 名前 一 度 文字 列 文字 列 置換 する	df.columns = [str(x).replace(s, s2) for x in df.columns]
オプション ターコイズ 色 使用 する	color = 'turquoise'
文字 列 印字 できる 調べる	s.isprintable()
最大 値 最小 値 範囲 一様 な 乱数 発生 さ せる	random.uniform(最小値, 最大値)
カラー バー 水平 付ける	plt.colorbar(orientation='horizontal')
配列 リスト 散布 図 淡い 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
最大 長 指定 し 両端 キュー	collections.deque(maxlen=n)
オプション ターコイズ 色 使う	color = 'turquoise'
暗い グラフ 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
多い 順 カウンタ 列挙 する	aCounter.most_common()
配列 配列 折れ線 描い 色 文字 列 指定 する	plt.plot(xdata, ydata, color=s)
データ フレーム カラム 標本 標準 偏差	df[col].std()
両端 キュー 中 要素 インデックス	deq.index(element)
キー マッピング ある	key in aDict
折れ線 グラフ 青い マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
オプション エン コーディング 文字 列 示す エン コーディング 設定 する	encoding = s
散布 図 赤色 バツ マーカー 使う	plt.plot(xdata, ydata, marker='x', c='r')
リスト 暗い 色 ヒストグラム 描画 する	plt.hist(xdata, color='dark')
データ フレーム 中 列 重複 ある 見る	df.duplicated(subset=column)
次元 リスト 転置 行列 計算 する	[list(x) for x in list(zip(*aList))]
直後 値 データ フレーム カラム 補う	df[col].fillna(method='bfill')
ボックス チャート 並べる	plt.boxplot([データ列, データ列2])
数字 全て 見る	string.digits
ホワイトスモーク ヒストグラム 色 変更 する	plt.hist(データ列, color='whitesmoke')
現在 何 年 知る	datetime.datetime.today().year
オプション グラフ 色 バイオレット する	color = 'violet'
ビット 和	n | n2
オプション グラフ 色 アクア 変更 する	color = 'aqua'
折れ線 グラフ 緑色 星 マーカー 描画 する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='g')
青色 色 差別 ない 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
淡い 色 マーカー 散布 図 描く	plt.plot(xdata, ydata, c='muted')
ヒストグラム 描画 し 色 ドジャーブルー 設定 する	plt.hist(データ列, color='dodgerblue')
データ 列 データ 列 散布 図 カラー コード マーカー 描く	plt.plot(xdata, ydata, marker='^', c=rgb)
列 中 文字 列 文字 列 ある 調べる	ds.isin([value, value2])
データ フレーム 列 中 日付 データ 存在 する 調べる	df[col].isin([value, value2])
オー キッド 色 ヒストグラム 描画 する	plt.hist(データ列, color='orchid')
サーモン 色 ヒストグラム 描画 する	plt.hist(データ列, color='salmon')
データ フレーム リスト 列 欠損 値 直前 値 変更 する	df[aList].fillna(method='ffill')
グラフ 色 差別 なく する	sns.set(pallete='colorblind')
オプション 色 使用 する	color = 'darkslategrey'
黒色 左 三 角 マーカー 配列 リスト 散布 図 描く	plt.plot(xdata, ydata, marker='<', c='k')
全 要素 初期 化 さ れ た 複素数 型 行列	np.zeros(行数, 列数, dtype=bool)
ヒストグラム 一 点 鎖線 描画 する	plt.hist(データ列, linestyle='dashbot')
全 要素 初期 値 行列	np.full((行数, 列数), 初期値, dtype=np.int)
左 シフト する	n << n2
ファイル 読み込み ストリーム 使う	open(filepath)
日付 時刻 データ 月曜日 どう 調べる	aDatetime.weekday() == 0
文字 列 区切り 分割 し 文字 列 リスト 変換 する	s.split(sep)
オプション 色 ダーク シアン 設定 する	color = 'darkcyan'
リスト リスト パステル 調 の 描い 色 黒 する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
句読点 文字 全て 使う	string.punctuation
色 淡く する	sns.set(pallete='muted')
折れ線 グラフ サイズ バツ マーカー 描画 する	plt.plot(データ列, データ列2, marker='x', markersize=n)
青 緑色 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='turquoise')
文字 列 終了 位置 前 部分 文字 列 存在 し ない	s.find(sub, 0, end) == -1
最大 長 指定 し 双方向 キュー 作る	collections.deque(maxlen=n)
整数 万 位 丸める	round(x, -4)
双方向 キュー	collections.deque()
オー キッド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='orchid')
ふたつ 集合	aSet.intersection(aSet2)
データ フレーム リスト 列 中 文字 列 ある 調べる	df[aList].isin([value])
文字 列 中 正規 表現 限定 マッチ する 文字 列 探す	re.search(pattern, s, flags=re.ASCI)
データ フレーム 列 値 以下 行 抽出 する	df[df[column] <= x]
データ フレーム 複数 列 用い 大きい 順 破壊 的 ソート する	df.sort_values(by=column, ascending=False, inplace=True)
線 グラフ 色 ラベンダー ブラッシュ 設定 する	plt.plot(データ列, データ列2, color='lavenderblush')
データ フレーム カラム 千 位 丸め 整数 型 する	df[col].round(-3).astype(int)
配列 リスト 散布 図 右 三 角 マーカー プロット する	plt.plot(xdata, ydata, marker='>')
淡い 色 散布 図 重なり 見 やすく 描く	plt.plot(xdata, ydata, c='muted', alpha=0.5)
データ フレーム 各 列 毎 集約 し カラム 最小 値 求める	df.groupby(column)[column2].min()
整数 進 文字 列 見る	bin(n)[2:]
データ フレーム 重複 し た 行 マスク する	df.duplicated()
オプション ダーク カーキ グラフ 色 変更 する	color = 'darkkhaki'
データ フレーム 各 列 毎 集約 し 列 合計 算出 する	df.groupby(column)[column2].sum()
小数点 以下 桁 プリント する	print(':.3f'.format(x))
複数 列 データ フレーム 昇順 ソート する	df.sort_values(by=column, ascending=True)
ファイル オープン し バイナリ 書き込み ストリーム 使う	open(filepath, mode='wb')
データ フレーム カラム 丸め 整数 型 する	df[col].round().astype(int)
リスト 列 続け た 列	itertools.chain(iterable, iterable2)
	n == n2
折れ線 グラフ 色 スカイ ブルー 変更 する	plt.plot(データ列, データ列2, color='skyblue')
オプション ドジャーブルー 色 用いる	color = 'dodgerblue'
赤い 右 三 角 マーカー 散布 図 プロット する	plt.plot(xdata, ydata, marker='>', c='r')
タイムスタンプデータ 週間 前 戻す	aDatetime - datetime.timedelta(weeks=n)
データ 列 リスト 破線 グラフ 描画 し その 色 パステル 調 の 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
リスト 配列 散布 図 淡い 色 用い プロット する	plt.plot(xdata, ydata, c='muted')
クリムゾン 色 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, color='crimson')
グラフ 用途 画面 設定 する	sns.set(context='notebook')
データ フレーム 値 未 入力 値	df.isna()
折れ線 グラフ 色 パウダー ブルー 設定 する	plt.plot(データ列, データ列2, color='powderblue')
数列 配列 散布 図 描い 丸 マーカー 色 カラー コード 指定 する	plt.plot(xdata, ydata, marker='o', c=rgb)
リスト リスト 折れ線 グラフ カラー コード 描画 する	plt.plot(xdata, ydata, color=rgb)
小数点 数 以下 最大 整数 求める	math.floor(x)
組 番目 番目	aTuple[n:n2]
カラー バー 設定 する	plt.colorbar()
列 名前 一覧 見る	df.columns
グラフ 実線 設定 する	plt.axhline(y=0, linestyle='solid')
折れ線 グラフ 線 幅 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
出力 ストリーム 全部 読み込む	f.read()
黄色い ポイント マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
次元 リスト フラット 化 する	sum(aList)
リスト リスト 散布 図 描画 し 左 三 角 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='<', c=rgb)
リスト リスト 散布 図 描画 し マーカー ダイアモンド 設定 する	plt.plot(xdata, ydata, marker='D')
データ フレーム 重複 残さ ず 削除 する	df.drop_duplicates(keep=False)
折れ線 グラフ 色 ダーク バイオレット 設定 する	plt.plot(データ列, データ列2, color='darkviolet')
データ 列 日付 型 する	pd.to_datetime(ds)
ヒストグラム 描画 し その 色 シャルトリューズ 設定 する	plt.hist(データ列, color='chartreuse')
散布 図 淡い 色 マーカー 使う	plt.plot(xdata, ydata, c='muted')
日付 データ 分 分 加算 する	aDate + datetime.timedelta(minutes=n)
棒グラフ 色 カラー コード 変更 する	plt.bar(ラベル列, データ列, color=rgb)
二つ 文字 列 ケース 無視 し 同じ	s.casefold() == s2.casefold()
柱状 グラフ データ フレーム 列 可視 化 する	plt.hist(df[column])
データ フレーム リスト カラム 未 入力 値 後 行 値 補う	df[aList].fillna(method='bfill')
データ フレーム 列 値 グループ 化 し 列挙 する	[(name, group) for name, group in df.groupby('A')]
データ フレーム 各 列 列 組み合わせ 毎 グループ 化 し 個数 求める	df.groupby([column, column2], as_index=False).count()
データ フレーム 中 列 と列 重複 ある 見る	df.duplicated(subset=[column, column2])
オプション クリムゾン 色 使う	color = 'crimson'
散布 図 赤い 左 三 角 マーカー 使う	plt.plot(xdata, ydata, marker='<', c='r')
文字 列 右側 部分 文字 列 区切る	s.rsplit(sub)
今日 タプル 変換 する	datetime.datetime.today().timetuple()
線 グラフ 描画 し その 色 ミディアムブルー 設定 する	plt.plot(データ列, データ列2, color='mediumblue')
配列 リスト 散布 図 明るい 色 描く	plt.plot(xdata, ydata, c='bright')
オプション ディムグレー 使う	color = 'dimgrey'
散布 図 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='x')
集合 任意 要素 取り出す	aSet.pop()
ヒストグラム 描画 し その 色 パールバイオレットレッド 設定 する	plt.hist(データ列, color='palevioletred')
ポスター グラフ 目的 セット する	sns.set(context='poster')
ファイル 読み込み モード 開く	open(filepath, mode='r')
ヒストグラム 描画 し 色 タン する	plt.hist(データ列, color='tan')
配列 数列 淡い 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
散布 図 ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.')
文字 列 開始 位置 終了 位置 間 部分 文字 列 含ま れ ない 調べる	s.find(sub, start, end) == -1
データ フレーム 行 目 選択 する	df.loc[n]
ふたつ 集合 対称 差 集合 使う	aSet.symmetric_difference(aSet2)
カラー コード 右 三 角 マーカー 散布 図 用いる	plt.plot(xdata, ydata, marker='>', c=rgb)
データ フレーム 列 ソート し 新しい インデックス 振り 直す	df.sort_values(columns).reset_index()
折れ線 グラフ 描画 し 色 黒く する	plt.plot(データ列, データ列2, color='k')
散布 図 黒い 星 マーカー 用い 描画 する	plt.plot(xdata, ydata, marker='*', c='k')
配列 列 ごと 平均 値	np.mean(aArray, axis=0)
オプション 色 マルーン 変更 する	color = 'maroon'
ヒストグラム 範囲 描く	plt.hist(データ列, range=(start, end))
オプション 改行 なし	end = ''
プロット 背景 色 暗く する	sns.set(style='darkgrid')
データ フレーム 中 文字 列 ある 調べる	df.isin([value])
リスト 要素 数 調べる	len(aList)
散布 図 左 三 角 マーカー 使用 する	plt.plot(xdata, ydata, marker='<')
本日 何 曜日 知る	datetime.datetime.today().weekday()
文字 列 開始 位置 後 部分 文字 列 含ま れる 確認 する	s.find(sub, start) != -1
文字 列 タプル 含ま れ ない 調べる	element not in aTuple
リスト 緑色 表示 できる 文字 列 変換 する	f'\033[32m{value}\033[0m'
データ 列 中 ある 日付 データ 合計 カウント する	ds.isin([value]).sum()
データ 列 中 ある 文字 列 文字 列 数 数える	ds.isin([value, value2]).sum()
オプション 昇順 する	ascending = True
ヒストグラム 描画 し その 色 青 設定 する	plt.hist(データ列, color='blue')
折れ線 グラフ 青い 大 バツ 印 描画 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
リスト 各 値 関数 適用 し た 結果 並べ 直す	sorted(aList, key=func)
データ フレーム 列 名 指定 さ れ た 列 名前 一覧 置き換える	df.columns = columns
文字 列 パターン 日付 時刻 変換 する	datetime.datetime.strptime(日付の書かれた文字列, format)
イテラブル 自身 回 あわせ た 直積	itertools.product(iterable, repeat=2)
最 頻 値 データ フレーム リスト カラム 欠損 値 埋める	df[aList].fillna(df[aList].mode().iloc[0])
リスト リスト 散布 図 ポイント マーカー 描く	plt.plot(xdata, ydata, marker='.')
分子 分母 有理数 用意 する	fractions.Fraction(numerator=n, denominator=m)
ヒストグラム 色 サーモン 設定 する	plt.hist(データ列, color='salmon')
日付 時刻 データ タイムスタンプデータ 時間 差 秒 数 求める	(aDatetime - aDatetime2).total_seconds()
小数点 以下 表示 精度 指定 する	pd.set_option('precision', n)
オブジェクト リスト 要素 で ない	element not in aList
整数 列	list(range(1, n+1))
リスト 引数 展開 し 表示 する	print(*aList)
グラフ 中 位置 凡例 加える	plt.legend(loc=(x, y))
折れ線 グラフ 描画 し その 色 ダークマゼンタ する	plt.plot(データ列, データ列2, color='darkmagenta')
現在 作業 ディレクトリ	os.getcwd()
マップ 項目 名 要素 する	aDict[key] = element
ふたつ 集合 共通 部分 計算 する	aSet.intersection(aSet2)
データ 列 中 文字 列 いくつ ある 数える	ds.isin([value, value2]).sum()
折れ線 グラフ 色 ディープスカイブルー 変更 する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線 グラフ 色 ミディアムスレートブルー 設定 する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線 グラフ 色 ダーク オリーブ グリーン セット する	plt.plot(データ列, データ列2, color='darkolivegreen')
部分 文字 列 文字 列 接頭 辞 安全 消す	s.removeprefix(sub)
スクリプト ファイル ディレクトリ 名	os.path.dirname(os.path.abspath(__file__))
オブジェクト フィールド 値	getattr(obj, プロパティ名)
一 桁 整数 どう 判定 する	0 <= n <= 9
辞書 最後 エントリ ポップ する	aDict.popitem()
メディアン データ 列 補う	ds.fillna(ds.median())
項目 名 辞書 上 未定義 どう	key not in aDict
オプション ミディアムターコイズ グラフ 色 変更 する	color = 'mediumturquoise'
折れ線 グラフ 大 バツ マーカー 緑色 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
データ フレーム ある 行 削除 する	df.dropna()
折れ線 グラフ 描画 し その 色 小麦色 設定 する	plt.plot(データ列, データ列2, color='wheat')
マッピング 項目 名 その 値 ペア 取り出す	aDict.items()
文字 列 文字 コード エスケープ バイト 列 変換 する	s.encode(encoding='unicode_escape')
オプション 色 ディムグレー 指定 する	color = 'dimgray'
データ フレーム 列 用い ソート し 先頭 する	df.sort_values(by='A', na_position='first')
文字 列 部分 文字 列 分割 し た とき 前半 文字 列	s.partition(sub)[0]
データ フレーム 各 列 列 組み合わせ 毎 分類 し 分散 計算 する	df.groupby([column, column2], as_index=False).var()
不揃い な 長 さ の	itertools.zip_longest(iterable, iterable2)
ふたつ 集合 共通 要素 更新 する	aSet.intersection_update(aSet2)
オブジェクト 型 どう 調べる	isinstance(obj, クラス)
折れ線 グラフ 赤い 丸 印 描画 する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
グラフ 中 座標 ラベル 付ける	plt.ylabel(untitled)
リスト 長 さ 見る	len(aList)
配列 リスト 青色 暗い グラフ プロット する	plt.plot(xdata, ydata, linestyle='dark', color='b')
折れ線 グラフ 青い ポイント 印 描画 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
データ フレーム 列 名 リスト まとめ た グループ	df.groupby(columns)
データ フレーム 列 並べ 更新 する	df.sort_values(by=column, inplace=True)
直後 値 データ フレーム リスト 列 埋める	df[aList].fillna(method='bfill')
環境	sys.platform.startswith('win32')
データ 列 欠損 値 モード 補う	ds.fillna(ds.mode().iloc[0])
データ フレーム カラム 中 含ま れる 文字 列 数 数える	df[col].isin([value]).sum()
ヒストグラム 描画 し 色 ダーク オレンジ 設定 する	plt.hist(データ列, color='darkorange')
淡い ピンク色 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='lightpink')
グラフ 中 場所 データ ラベル 付ける	plt.legend(loc=(x, y))
オプション ライトスレイグレー 色 使う	color = 'lightslategrey'
配列 次元 数	aArray.ndim
バリー ウッド ヒストグラム 色 する	plt.hist(データ列, color='burlywood')
データ フレーム 値 欠損 値 どう 確認 する	df.isna()
プログラム 実行 正常 終了 する	sys.exit(0)
リスト リスト 散布 図 赤色 大 バツ マーカー 描く	plt.plot(xdata, ydata, marker='X', c='r')
データ フレーム 中 ある 日付 データ 合計 数える	df.isin([value]).sum()
カラー バー 横向き 描画 する	plt.colorbar(orientation='horizontal')
データ フレーム 表示 する とき 表示 可能 な 最大 行 数 変更 する	pd.set_option('display.max_rows', n)
数値 緑色 化 する	f'\033[32m{value}\033[0m'
リスト リスト 散布 図 暗い 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
オブジェクト タプルクラス	isinstance(obj, tuple)
平均 値 データ フレーム 欠損 値 埋める	df.fillna(df.mean())
赤色 文字 列 プリント する	print(f'\033[31m{value}\033[0m')
代数 計算 使用 する	import sympy
辞書 コピー 生成 する	aDict.copy()
グラフ 使う フォント 日本語 表示 設定 する	sns.set(font='IPAexGothic')
ファイル ある 調べる	os.path.exists(filepath)
ヒストグラム 色 ミディアムスプリンググリーン 設定 する	plt.hist(データ列, color='mediumspringgreen')
データ フレーム リスト 指定 さ れ た 列 ヒートマップ 描画 する	sns.heatmap(df[aList].corr())
散布 図 赤い ポイント マーカー 描く	plt.plot(xdata, ydata, marker='.', c='r')
折れ線 グラフ 黒い 三角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
複素数 型 ゼロ 埋め さ れ た 行列 作成 する	np.zeros(要素数, dtype=bool)
ヒストグラム 色 ダーク カーキ 設定 する	plt.hist(データ列, color='darkkhaki')
線 グラフ 色 フクシア 設定 する	plt.plot(データ列, データ列2, color='fuchsia')
タブ 区切り ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t')
追加 モード ファイル オープン し する	f = open(filepath, mode='a')
オプション グラフ 色 ディムグレー 設定 する	color = 'dimgrey'
プログラム 実行 強制 的 終了 する	sys.exit()
最小 値 データ 列 未 入力 値 埋める	ds.fillna(ds.min())
再帰 何 回 できる 調べる	sys.getrecursionlimit()
明るい グラフ リスト 配列 プロット し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
ファイル 全部 読む	f.read()
淡い グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
データ フレーム フォーマット タイム スタンプ 型 する	pd.to_datetime(df[col], format=fmt)
文字 列 中 部分 文字 列 登場 回数 カウント する	s.count(sub)
オレンジ 色 ヒストグラム 描画 する	plt.hist(データ列, color='orange')
辞書 項目 名 値 入れ替える	{v: k for k, v in aDict.items()}
年 月 日付 時刻 オブジェクト 化 する	datetime.datetime(year=year, month=month, day=1)
データ フレーム リスト カラム 中 ある 文字 列 合計 数える	df[aList].isin([value]).sum()
折れ線 グラフ 青い 右 三 角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
線 グラフ 描画 し その 色 ラベンダー セット する	plt.plot(データ列, データ列2, color='lavender')
パス セパレータ 記号	os.sep
整数 進数 文字 列 使う	hex(n)[2:]
ベクトル ユニーク な 要素 その 個数	u, counts = np.unique(aArray, return_counts=True)
行列 要素 ごと 積	np.multiply(aArray, aArray2)
オプション 色 プラム 設定 する	color = 'plum'
リスト データ 列 明るい グラフ 描画 し その 色 黒く する	plt.plot(xdata, ydata, linestyle='bright', color='k')
データ フレーム リスト カラム 相関 行列 スピアマン 相関 係数 計算 する	df[aList].corr(method='spearman')
日付 時刻 データ 日付 時刻 データ 時間 差 秒 数 求める	(aDatetime - aDatetime2).total_seconds()
オプション グラフ 色 ペルー 設定 する	color = 'peru'
リスト イテラブル 散布 図 描画 し マーカー 色 暗い 指定 する	plt.plot(xdata, ydata, c='dark')
実数 乗 し 実数 余り	pow(x, n, y)
オプション フクシア 使う	color = 'fuchsia'
カラム 値 正規 表現 一 度 置き換える	ds.replace(pattern, repl, regex=True)
折れ線 グラフ ダイアモンドマーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
データ 列 位 丸め 整数 する	ds.round(-3).astype(int)
配列 配列 破線 描画 し その 色 淡い 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
配列 差	aArray - aArray2
ヒストグラム 描画 し 色 ローン グリーン 指定 する	plt.hist(データ列, color='lawngreen')
明るい 色 青色 設定 する	plt.plot(xdata, ydata, linestyle='bright', color='b')
配列 数列 散布 図 カラー コード 三角 マーカー 描画 する	plt.plot(xdata, ydata, marker='^', c=rgb)
適用 し た とき なる 配列 要素	itertools.dropwhile(predicateFunc, iterable)
折れ線 グラフ 丸 マーカー 加える	plt.plot(データ列, データ列2, marker='o')
表 データ 列 と列 キー 左 ジョイン する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
数列 データ 列 散布 図 明るい 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
線 グラフ 描画 し 色 スプリング グリーン 設定 する	plt.plot(データ列, データ列2, color='springgreen')
データ フレーム カラム 丸める	df[col].round()
日付 時刻 データ 曜日 整数 求める	aDatetime.weekday()
リスト リスト 散布 図 描画 し その 大き さ 指定 する	plt.scatter(xdata, ydata, s=n)
オプション プラム 色 使う	color = 'plum'
縦 棒グラフ プロット し 中央 寄せ する	plt.bar(ラベル列, データ列, align='center')
赤い 左 三 角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='<', c='r')
データ フレーム 表示 する とき 表示 可能 な 列 数 最大 値 設定 する	pd.set_option('display.max_columns', n)
ファイル 全部 読む	f.read()
複数 カラム 関係 性 一 度 プロット する	sns.pairplot(df[[column, column2, column3]])
辞書 全 エントリ 消去 する	aDict.clear()
二つ 文字 列 等しく ない	s != s2
リスト 空 で ない	len(aList) != 0
安全 文字 列 接尾 辞 部分 文字 列 消す	s.removesuffix(sub)
濃い グラフ 描き その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
データ フレーム 列 丸め 整数 型 する	df[col].round().astype(int)
リスト リスト 黒い 明るい グラフ 描画 する	plt.plot(xdata, ydata, linestyle='bright', color='k')
整数	math.lcm(n, n2)
カウンタ 最も 頻出 な 要素 件数	aCounter.most_common()[1]
濃い 折れ線 グラフ 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
オプション スラッシュ 区切り 使う	sep = '/'
リスト 個 等間隔 ビニング し ラベル つける	pd.cut(aList, n, labels=names)
データ フレーム 各 列 毎 グループ 化 し 列 分散 求める	df.groupby(column)[column2].var()
オプション ブール 型 用いる	dtype = np.int32
文字 列 先頭 部分 文字 列	s.startswith(sub)
三つ 文字 列 順に プリント する	print(value, value2, value3)
黒い 三角 マーカー リスト リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c='k')
折れ線 グラフ 色 ネイビー 指定 する	plt.plot(データ列, データ列2, color='navy')
二つ 表 データ 横向き マージ する	pd.merge(df, df2)
文字 列 全て 識別子 名 調べる	s.isidentifier()
暗い グラフ 色 青色 設定 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
文字 列 示す 文字 コード 追加 できる よう 既存 ファイル オープン する	open(filepath, mode='a', encoding=s)
それぞれ 設定 する	x, y, z = n, n2, n3
データ フレーム リスト カラム 正規 分布 どの 程度 尖っ いる 見る	df[aList].skew()
型 名前 付き タプル 調べる	issubclass(C, tuple)
新しい 文字 列 正規 表現 マッチ し た 文字 列 置換 する	re.sub(pattern, newsub, s)
折れ線 グラフ 色 ダーク ブルー 設定 する	plt.plot(データ列, データ列2, color='darkblue')
データ フレーム 破壊 的 重複 削除 する	df.drop_duplicates(inplace=True)
ヒストグラム 描画 し その 色 ライト グレー 設定 する	plt.hist(データ列, color='lightgrey')
リスト リスト 散布 図 明るい 色 描く	plt.plot(xdata, ydata, c='bright')
バイト オーダ	sys.byteorder
データ フレーム リスト 列 丸める	df[aList].round()
データ フレーム 行 一覧 使う	df.index
データ フレーム 位 丸め 整数 型 する	df.round(-1).astype(int)
何 回 再帰 できる 知る	sys.getrecursionlimit()
折れ線 グラフ 描画 し マーカー ダイアモンド 印 する	plt.plot(データ列, データ列2, marker='D')
リスト 末尾 リスト 追加 し 拡張 する	aList.extend(aList2)
実行 結果 太 文字 する	f'\033[1m{value}\033[0m'
データ フレーム 尖 度	df.skew()
カウンタ 列挙 する	aCounter.most_common(k)
ヒストグラム 色 黄色 指定 する	plt.hist(データ列, color='yellow')
データ 列 ラベル 指定 し 棒 描画 する	plt.bar(ラベル列, データ列)
日付 データ 何 曜日 知る	aDate.weekday()
要素 ひとつ タプル 作る	(element,)
リスト 先頭 除く	aList[1:]
オブジェクト 回 繰り返す 列	itertools.repeat(element, n)
ファイル ベース ファイル 名 求める	os.path.splitext(os.path.basename(filepath))[0]
データ フレーム 列 昇順 ソート し 更新 する	df.sort_values(by=column, ascending=True, inplace=True)
文字 列 全体 正規 表現 複数 行 対応 マッチ する 確認 する	re.fullmatch(pattern, s, flags=re.MULTILINE)
オプション ライト シアン 色 使う	color = 'lightcyan'
オプション オー キッド グラフ 色 設定 する	color = 'orchid'
パステル 調 折れ線 グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
データ フレーム リスト カラム 歪 度	df[aList].kurt()
実数 双曲線 余弦 逆数	math.acosh(x)
ヒストグラム する	plt.hist(データ列, range=(start, end))
オプション バイオレット 色 使う	color = 'violet'
データ 列 変更 する	ds.fillna(x)
透明 度 折れ線 プロット する	plt.plot(xdata, ydata, alpha=alpha)
組 引数 展開 し 表示 する	print(*aTuple)
文字 列 全て 大文字 する	s.upper()
文字 列 開始 位置 終了 位置 間 部分 文字 列 カウント する	s.count(sub, start, end)
折れ線 グラフ ダイアモンドマーカー 用いる	plt.plot(データ列, データ列2, marker='D')
文字 列 日付 時刻 変換 する	datetime.datetime.fromisoformat(日付の書かれた文字列)
日付 データ 変換 する	pd.to_datetime(dateString)
ヒストグラム 色 レベッカパープル セット する	plt.hist(データ列, color='rebeccapurple')
ダーク グリーン ヒストグラム 色 変更 する	plt.hist(データ列, color='darkgreen')
オプション 大 バツ マーカー 使う	marker = 'X'
折れ線 グラフ 色 ダーク シアン 指定 する	plt.plot(データ列, データ列2, color='darkcyan')
データ フレーム 指定 さ れ た 列 抽出 する	df[[column, column2]]
破線 色 明るい 設定 する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
ヒストグラム 色 カーキ セット する	plt.hist(データ列, color='khaki')
データ フレーム 破壊 的 重複 ドロップ する	df.drop_duplicates(inplace=True)
リスト リスト 散布 図 マーカー 描画 する	plt.plot(xdata, ydata, marker='v')
改行 なし 文字 列 プリント する	print(value, end='')
オプション アイボリー 使う	color = 'ivory'
リスト 番目 削除 する	del aList[n]
データ フレーム カラム 日 見る	df[col].dt.day
英字 大文字 列	string.ascii_uppercase
プログラム 実行 異常 終える	sys.exit(1)
ベージュ ヒストグラム 色 セット する	plt.hist(データ列, color='beige')
折れ線 グラフ 左 三 角 マーカー 赤く する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
線 グラフ 描画 し 色 ゴールデン ロッド 設定 する	plt.plot(データ列, データ列2, color='goldenrod')
原点 実数 距離	math.hypot(x, y)
等しい	n == n2
重 見やすく 明るい 色 散布 図 描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
データ フレーム 列 削除 する	df.drop(column, axis=1)
折れ線 グラフ 描画 し その 色 ダークマゼンタ 変更 する	plt.plot(データ列, データ列2, color='darkmagenta')
データ フレーム ファイル 書き込む	df.to_csv(filename, encoding='shift_jis')
破線 折れ線 グラフ 変更 する	plt.plot(データ列, データ列2, linestyle='dashed')
ハロー ワールド プリント する	print('Hello World')
小数点 以下 桁 プリント する	print(':.1f'.format(x))
セット ひとつ 調べる	n in aSet
ヒストグラム 描画 し その 色 パレットトルコイズ 変更 する	plt.hist(データ列, color='paleturquoise')
オブジェクト 文字 列 型	isinstance(obj, str)
マップ キー その 項目 ペア 取り出す	aDict.items()
以下 どう	n <= n2
凡例 文字 列 文字 列 入れる	plt.legend([s, s2])
カウンタ 最 頻出 な 項目 件数	aCounter.most_common()[1]
データ フレーム 列 ソート し 先頭 する	df.sort_values(by=column, na_position='first')
プラム 色 ヒストグラム 描画 する	plt.hist(データ列, color='plum')
文字 列 カタカナ どう 調べる	('ァ' <= ch <= 'ン')
ヒストグラム 色 ダーク グリーン 設定 する	plt.hist(データ列, color='darkgreen')
後 値 データ フレーム カラム 埋める	df[col].fillna(method='bfill')
線 グラフ 描画 し その 色 ダーク サーモン 設定 する	plt.plot(データ列, データ列2, color='darksalmon')
黒い 星 マーカー 配列 リスト 散布 図 描画 する	plt.plot(xdata, ydata, marker='*', c='k')
リスト リスト 淡い グラフ 描画 し その 色 黒 する	plt.plot(xdata, ydata, linestyle='muted', color='k')
折れ線 グラフ 色 オールド レース 指定 する	plt.plot(データ列, データ列2, color='oldlace')
ヒストグラム 描画 し その 色 ダークゴールデンロッド 指定 する	plt.hist(データ列, color='darkgoldenrod')
カラー コード マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='^', c=rgb)
標準 出力 バッファ フラッシュ する	sys.stdout.flush()
ヒストグラム 色 ビスク 設定 する	plt.hist(データ列, color='bisque')
オプション 色 グリーン 変更 する	color = 'green'
文字 列 型 変換 する	pd.to_datetime(s)
ファイル 入力 ストリーム 使う	open(filepath)
切り捨て 分の 一 する	n //= n2
グラフ 使える 色 名 一覧 使う	matplotlib.colors.cnames
アリス ブルー ヒストグラム 色 変更 する	plt.hist(データ列, color='aliceblue')
データ フレーム 列 ヒストグラム 描画 する	plt.hist(df[column])
データ フレーム 各 列 毎 グループ 化 し 列 最大 値 求める	df.groupby(column)[column2].max()
折れ線 グラフ ダイアモンドマーカー 青色 する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
文字 列 全て 印字 できる 確認 する	s.isprintable()
ヒストグラム 実線 描画 する	plt.hist(データ列, linestyle='solid')
文字 列 マゼンタ する	f'\033[35m{value}\033[0m'
行列 行 ごと 標準 偏差	np.std(aArray, axis=1)
線 グラフ 色 コーンフラワーブルー 設定 する	plt.plot(データ列, データ列2, color='cornflowerblue')
文字 列 バイト 列 変換 する	bytes(s)
ミディアムスレートブルー 色 ヒストグラム 描画 する	plt.hist(データ列, color='mediumslateblue')
データ 列 等しい 量 なる よう 分割 数 ビン 分割 する	pd.qcut(ds, n)
文字 列 全体 複数 行 対応 正規 表現 マッチ さ せる	re.fullmatch(pattern, s, flags=re.MULTILINE)
両端 キュー 中 値 インデックス 使う	deq.index(element)
符号 なし ビット 整数 型 全 要素 初期 化 し た 行列	np.zeros(行数, 列数, dtype=np.uint8)
数字 全部 使う	string.digits
オブジェクト 属性 ある 調べる	hasattr(obj, プロパティ名)
ファイル バイナリ ストリーム 開い する	f = open(filepath, mode='rb')
カウンタ 辞書 更新 する	aCounter.update(aDict)
カラー コード 右 三 角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='>', c=rgb)
折れ線 グラフ 描画 し その 色 レベッカパープル 指定 する	plt.plot(データ列, データ列2, color='rebeccapurple')
列 データ フレーム グループ 化 し 合計 求める	df.groupby(column).sum()
リスト リスト 散布 図 描画 し マーカー 星 設定 する	plt.plot(xdata, ydata, marker='*')
パターン 文字 列 日付 時刻 変換 する	datetime.datetime.strptime(日付の書かれた文字列, format)
上限 長 両端 キュー イテラブル 作成 する	collections.deque(iterable, maxlen=n)
スクリプト ファイル フォルダ 名	os.path.dirname(os.path.abspath(__file__))
文字 列 走査 し 正規 表現 大文字 小文字 無視 し マッチ する 調べる	re.search(pattern, s, flags=re.IGNORECASE)
日付 データ 日 減らす	aDate - datetime.timedelta(days=n)
オプション グラフ 色 ダークスレートブルー セット する	color = 'darkslateblue'
データ フレーム 複数 列 昇順 並べ 直す	df.sort_values(by=column, ascending=True)
折れ線 グラフ 描画 し その 色 紺 設定 する	plt.plot(データ列, データ列2, color='darkblue')
オプション 色 シーグリーン 設定 する	color = 'seagreen'
日付 データ 何 年 知る	aDate.year
リスト データ 列 散布 図 マーカー プロット する	plt.plot(xdata, ydata, marker='v')
全 要素 初期 化 さ れ た 論理 値 型 行列	np.zeros(行数, 列数, dtype=np.int32)
小数点 以下 桁 文字 列 変換 する	':.3f'.format(x)
タイムスタンプデータ 秒 加算 する	aDatetime + datetime.timedelta(seconds=n)
折れ線 グラフ 下 三角 マーカー 線 幅 設定 する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
実数 実数 割っ 切り捨てる	x // y
オプション 色 スノー 変更 する	color = 'snow'
列 名 列挙 する	df.columns
文字 列 中 ひとつ 非 数字 含ま れる 調べる	any(not c.isdigit() for c in s)
文字 列 キーワード 調べる	keyword.iskeyword(s)
データ 列 中 存在 する 文字 列 個数 カウント する	ds.isin([value]).sum()
整数 バイト 列 変換 する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
折れ線 グラフ 菱形 マーカー 線 幅 セット する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
データ フレーム 列 文字 列 始まら ない データ 抽出 する	df[not df[column].str.startswith(s)]
文字 列 タイトル ケース	s.istitle()
オプション 丸 マーカー 加える	marker = 'o'
年 月 日 時 日付 時刻 変換 する	datetime.datetime(year=year, month=month, day=day, hour=hour)
折れ線 グラフ 描画 し その 色 バイオレット 設定 する	plt.plot(データ列, データ列2, color='violet')
データ フレーム 表示 する とき 最大 行 数 増やす	pd.set_option('display.max_rows', n)
文字 列 白色 する	f'\033[37m{value}\033[0m'
オプション オレンジ 色 使う	color = 'orange'
ファイル 文字 列 示す エン コーディング 用い 書き込み できる よう オープン する	open(filepath, mode='w', encoding=s)
パターン コンパイル する	re.compile(pattern)
データ フレーム 重複 し い ない 行 選ぶ	df[not df.duplicated(keep=False)]
暗い 折れ線 グラフ 色 赤 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
グラフ 使う フォント 指定 する	sns.set(font=fontName)
散布 図 上 三 角 マーカー 使用 する	plt.plot(xdata, ydata, marker='^')
プロット 色 指定 する	sns.set(pallete=palleteName)
逆 双曲線 正弦 求める	math.asinh(x)
明るい パレット グラフ 描画 使う	sns.set(pallete='bright')
データ フレーム 指定 さ れ た 列 抽出 する	df[[column, column2, column3, column4]]
浮動 小数点 数 実数 除 し た 余り	x % y
折れ線 グラフ 描画 し 色 オレンジ レッド 指定 する	plt.plot(データ列, データ列2, color='orangered')
オプション 貝殻 使う	color = 'seashell'
オプション 改行 分割 記号 使う	sep = '\n'
整数 変換 する	int(x)
線 グラフ 描画 し 色 スレート ブルー 設定 する	plt.plot(データ列, データ列2, color='slateblue')
原点 点 距離	math.hypot(x, y)
データ フレーム 中 欠損 値 ある 行 削除 する	df.dropna()
オプション 読み込ま ない フッタ する	skipfooter = n
折れ線 グラフ 色 ラベンダー 変更 する	plt.plot(データ列, データ列2, color='lavender')
ヒストグラム 色 真紅 指定 する	plt.hist(データ列, color='crimson')
オプション グラフ 色 レベッカパープル 変更 する	color = 'rebeccapurple'
折れ線 グラフ 色 青 変更 する	plt.plot(データ列, データ列2, color='blue')
カテゴリー データ 出現 頻度 順 並べ 直す	df['A'].value_counts().sort_index().index
ヒストグラム 色 インディアン レッド 変更 する	plt.hist(データ列, color='indianred')
ヒストグラム 色 ミスティローズ 変更 する	plt.hist(データ列, color='mistyrose')
文字 列 順に プリント する	print(value, value2, value3)
文字 コード ファイル パス オープン する	open(filepath, encoding=text)
整数 進数 文字 列 変換 する	hex(n)[2:]
リスト リスト 折れ線 グラフ 描画 し 透明 度 する	plt.plot(xdata, ydata, alpha=alpha)
オプション グラフ 色 グリーン イエロー 設定 する	color = 'greenyellow'
ヒストグラム 描画 し 透明 度 設定 する	plt.hist(データ列, alpha=x)
ヒストグラム 描画 し その 色 ライトゴールドロディイエロー 変更 する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラム 描画 し 色 スレート ブルー 変更 する	plt.hist(データ列, color='slateblue')
オプション アリス ブルー 使う	color = 'aliceblue'
空白 文字 列 分割 し 列挙 する	s.split()
ヒストグラム 描画 し その 色 ダーク グレー 設定 する	plt.hist(データ列, color='darkgrey')
リスト データ 列 カラー コード 明るい グラフ 描く	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
数列 データ 列 散布 図 淡い 色 重 見 やすく 描く	plt.plot(xdata, ydata, c='muted', alpha=0.5)
配列 次元 列 変形 する	aArray.reshape(-1, 1)
文字 列 開始 位置 以降 部分 文字 列 含ま れ ない 調べる	s.find(sub, start) == -1
文字 列 先頭 求める	s[0]
項目 名 指定 さ れ た 項目 辞書 ポップ する	aDict.pop(key)
暗い 赤色 ヒストグラム 描画 する	plt.hist(データ列, color='darkred')
ファイル ベース 名 拡張 子 分割 する	os.path.splitext(filepath)
線 グラフ 色 グレー 設定 する	plt.plot(データ列, データ列2, color='grey')
ライム グリーン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='limegreen')
オプション ピーチ パフ 色 設定 する	color = 'peachpuff'
リスト リスト 散布 図 黒い 左 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='<', c='k')
オプション 色 ディムグレー 指定 する	color = 'dimgrey'
オプション グラフ 色 ナバホホワイト 変更 する	color = 'navajowhite'
データ 列 一意 な 値	ds.unique()
ファイル ストリーム 読み込み する	file = open(filepath)
タプル カウンタ 変換 する	collections.Counter(aDict)
二つ オブジェクト 同 一 参照 調べる	obj is obj2
値 緑色 表示 する	print(f'\033[32m{value}\033[0m')
青い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
折れ線 グラフ 色 ミディアムオーキッド 設定 する	plt.plot(データ列, データ列2, color='mediumorchid')
数列 リスト 散布 図 カラー コード 四角 マーカー 描画 する	plt.plot(xdata, ydata, marker='s', c=rgb)
ファイル ファイル 入力 読み込ん する	data = json.load(fin)
ヒストグラム 描画 し 色 シャルトリューズ 設定 する	plt.hist(データ列, color='chartreuse')
折れ線 グラフ 色 ライト シアン 指定 する	plt.plot(データ列, データ列2, color='lightcyan')
ライト グレー ヒストグラム 色 設定 する	plt.hist(データ列, color='lightgrey')
折れ線 グラフ 色 スチール ブルー 設定 する	plt.plot(データ列, データ列2, color='steelblue')
暗い 色 折れ線 グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リスト リスト 濃い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
オプション グラフ 色 ダークスレートブルー 変更 する	color = 'darkslateblue'
ヒストグラム 色 ライム グリーン 変更 する	plt.hist(データ列, color='limegreen')
全 要素 初期 化 し た 配列	np.zeros(要素数)
ビスク ヒストグラム 色 変更 する	plt.hist(データ列, color='bisque')
名前 付き タプル 定義 する	C = collections.namedtuple('クラス名', プロパティ名)
線 グラフ 色 ミディアムブルー 設定 する	plt.plot(データ列, データ列2, color='mediumblue')
整数 実数 整数 除算 する	x // y
ファイル 書き込み 用 オープン する	open(filepath, mode='w', encoding='utf-8')
オプション インデックス 自動的 な 連 番 変更 する	index_col = None
プロット 色 パステル 調 する	sns.set(pallete='pastel')
大文字 全部 使う	string.ascii_uppercase
ヒストグラム 描画 し その 色 ダーク オレンジ 設定 する	plt.hist(データ列, color='darkorange')
タプル 要素 逆順 する	aTuple[::-1]
無限 バージョン	itertools.count(start=n, step=step)
折れ線 グラフ 描画 し その 色 タン 設定 する	plt.plot(データ列, データ列2, color='tan')
オプション グラフ 色 ホワイト 設定 する	color = 'white'
二乗 計算 する	n ** 2
データ フレーム 列 昇順 破壊 的 ソート する	df.sort_values(by='A', ascending=True, inplace=True)
オプション ナバホホワイト 色 使う	color = 'navajowhite'
ファイル パス 文字 コード 使っ 追加 できる よう 開く	open(filepath, mode='a', encoding=text)
日付 データ 日付 データ 同時 どう 調べる	aDate == aDate2
オプション どの カラム インデックス 設定 し ない	index_col = None
データ フレーム 列 用い 降順 整列 する	df.sort_values(by='A', ascending=False)
使う	import math
カーキ 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='khaki')
データ 列 数列 散布 図 描画 し その 大き さ 設定 する	plt.scatter(xdata, ydata, s=n)
タイム スタンプ データ フレーム カラム インデックス する	df.index = pd.DatetimeIndex(df[col])
ヒストグラム 描画 し 色 紺 設定 する	plt.hist(データ列, color='darkblue')
文字 列 イテラブル 変換 し 空白 連結 する	' '.join(map(str, iterable))
リスト データ 列 淡い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
線 グラフ 描画 し その 色 ミディアムオーキッド セット する	plt.plot(データ列, データ列2, color='mediumorchid')
数 小数点 以下 丸める	round(x)
暗い 折れ線 リスト リスト 描画 し 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='dark', color='r')
配列 リスト 散布 図 ポイント マーカー プロット する	plt.plot(xdata, ydata, marker='.')
集合 別 集合 取り除く	aSet.difference_update(aSet2)
散布 図 四角 マーカー 使用 する	plt.plot(xdata, ydata, marker='s')
整数 進 表記 変換 する	oct(n)
ファイル データ フレーム 読み込む	pd.read_csv(filename, sep=',')
データ フレーム 行 ランダムサンプリング する	df.sample(n)
列 と列 つなぐ	itertools.chain(iterable, iterable2)
形式 ファイル データ フレーム 読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
小数点 以下 桁 文字 列 変換 する	':.2f'.format(x)
データ 列 リスト 黒い 濃い グラフ 描く	plt.plot(xdata, ydata, linestyle='deep', color='k')
ファイル パス 拡張 子 付き ファイル 名 取り出す	os.path.basename(filepath)
底 する 実数 対数 計算 する	math.log10(x)
オプション オリーブ色 使う	color = 'olive'
配列 リスト 境界 値 ビンニング する	pd.cut(aArray, aList)
タイムスタンプデータ タプル 変換 する	aDatetime.timetuple()
データ フレーム グループ 化 し それぞれ 列 標準 偏差 求める	df.groupby(column)[column2].std()
オプション グラフ 色 パープル 設定 する	color = 'purple'
データ フレーム 重複 し た 行 数える	df.duplicated().sum()
タプル 先頭 要素 取り除く	aTuple[n:]
ベクトル 演算 する	import numpy as np
複数 データ フレーム 横 方向 合体 さ せる	pd.concat([df, df2, df3], axis=1)
表 データ 中 列 と列 重複 ある 確認 する	df.duplicated(subset=[column, column2])
データ フレーム リスト カラム 補う	df[aList].fillna(x)
日付 データ 木曜日 調べる	aDate.weekday() == 3
折れ線 グラフ 描画 し その 色 ミディアムパープル 設定 する	plt.plot(データ列, データ列2, color='mediumpurple')
数式 パラメータ 階 微分 する	sympy.diff(e, z, n)
散布 図 カラー コード 三角 マーカー 使う	plt.plot(xdata, ydata, marker='^', c=rgb)
配列 リスト 折れ線 グラフ 描く	plt.plot(xdata, ydata)
折れ線 グラフ ダイアモンドマーカー 線 幅 指定 する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
データ フレーム 中 列 等量 ビン 数 ビニング する	pd.qcut(df[col], n)
配列 リスト 散布 図 黒色 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c='k')
配列 数列 散布 図 パステル 調 色 重 見やすく 描画 する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
変数 黒色 プリント できる 文字 列 する	f'\033[30m{value}\033[0m'
データ フレーム 列 文字 列 終わら ない 行 抽出 する	df[not df[column].str.endswith(s)]
グラフ 日本語 表示 できる よう する	sns.set(font='IPAexGothic')
折れ線 グラフ バツ マーカー 使う	plt.plot(データ列, データ列2, marker='x')
一 点 鎖線 つける	plt.axhline(y=0, linestyle='dashbot')
文字 列 赤色 する	f'\033[31m{value}\033[0m'
辞書 コピー 作る	dict(aDict)
折れ線 グラフ 色 アリスブルー 指定 する	plt.plot(データ列, データ列2, color='aliceblue')
オプション 文字 コード 文字 列 示す 文字 コード 設定 する	encoding = s
タプル フォーマット 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False)
文字 列 空白 区切り 整数 リスト 変換 する	map(int, s.split())
ヒストグラム 色 ライトスレイグレー 変更 する	plt.hist(データ列, color='lightslategrey')
文字 列 イテラブル 連結 する	''.join(map(str, iterable))
論文 グラフ 用途 設定 する	sns.set(context='paper')
グレー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='grey')
論理 和	n | n2
オプション 二 ビット 整数 型 使う	dtype = np.int16
ピンク色 ヒストグラム 描画 する	plt.hist(データ列, color='pink')
黒い クロス マーカー リスト 配列 散布 図 描画 する	plt.plot(xdata, ydata, marker='x', c='k')
明るい グラフ 色 カラー コード 設定 する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リスト リスト 結合 する	aList + aList2
列 中央 値 埋める	ds.fillna(ds.median())
オブジェクト リスト タプル どう 調べる	isinstance(obj, (list)
数 複素数	complex(x)
ファイル パス ディレクトリ 名 使う	os.path.dirname(filepath)
オプション オレンジ レッド 色 使う	color = 'orangered'
文字 列 接頭 辞 部分 文字 列	s.startswith(sub)
リスト 回 連結 する	aList * n
線 グラフ 描画 し その 色 黄色 変更 する	plt.plot(データ列, データ列2, color='yellow')
リスト 要素 ソート する	sorted(aList)
オプション 出力 先 ファイル 変更 する	file = sys.open(filename, 'w')
日付 時刻 データ 月数	aDatetime.month
オプション グラフ 色 ライトスレイグレー 指定 する	color = 'lightslategrey'
データ フレーム 列 ソート し 行 振り 直す	df.sort_values(columns).reset_index(drop=True)
散布 図 マーカー 大き さ 指定 する	plt.scatter(xdata, ydata, s=n)
リスト 個数 繰り返す	range(len(aList))
ヒストグラム 色 ミディアムスレートブルー 設定 する	plt.hist(データ列, color='mediumslateblue')
散布 図 赤い 星 マーカー 使用 する	plt.plot(xdata, ydata, marker='*', c='r')
オプション 使用 する	color = 'darkslategrey'
スレート ブルー ヒストグラム 色 設定 する	plt.hist(データ列, color='slateblue')
空 カウンタ	collections.Counter()
ヒストグラム 破線 設定 する	plt.hist(データ列, linestyle='dashed')
文字 列 大文字 小文字 逆 する	s.swapcase()
自然 数 順列 総数 求める	math.perm(n)
列 ベクトル する	pd.get_dummies(iterable)
変数 緑色 化 する	f'\033[32m{value}\033[0m'
折れ線 グラフ 菱形 印 赤く する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
エポック 秒 データ 列 日付 データ 変換 する	pd.to_datetime(ds, unit='s', utc=True)
データ フレーム 行 条件 消す	df[(df[column] == x) & (df[column2] == x2)]
データ 列 月	ds.dt.month
既存 ファイル パス 付き 追加 できる よう オープン する	open(filepath, mode='a', encoding='utf_8_sig')
列 キー し データ フレーム 整列 する	df.sort_values(by=column)
文字 列 最後 部分 文字 列 使っ 二分 する	s.rpartition(sub)
カラー パレット 全般 的 暗く する	sns.set(pallete='dark')
散布 図 ポイント マーカー 描画 する	plt.plot(xdata, ydata, marker='.')
オプション 色 パールゴールデンロッド セット する	color = 'palegoldenrod'
データ フレーム リスト 列 空文字 未 入力 値 変換 し ドロップ する	df[aList].replace('', np.nan).dropna()
折れ線 グラフ 四角 印 線 幅 設定 する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
グラフ 中 軸 軸 ラベル 指定 する	plt.ylabel(untitled)
ヒストグラム 色 オレンジ レッド 設定 する	plt.hist(データ列, color='orangered')
書き込み できる よう ファイル パス オープン する	open(filepath, mode='w')
項目 名 辞書 存在 する	key in aDict
オプション 紺色 使う	color = 'darkblue'
リスト データ 列 淡い グラフ プロット し 色 青 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
データ フレーム 関数 値 グループ 化 し 要約 統計 量 求める	df.groupby(関数).describe()
グラフ 実線 付ける	plt.axvline(x=0, linestyle='solid')
イテラブル 文字 列 変換 し 連結 する	''.join(map(str, iterable))
散布 図 ポイント マーカー 使う	plt.plot(xdata, ydata, marker='.')
オプション フクシア 色 用いる	color = 'fuchsia'
ケン ドール 相関 係数 データ フレーム 相関 行列 求める	df.corr(method='kendall')
ヒストグラム 色 ライトスチールブルー 設定 する	plt.hist(データ列, color='lightsteelblue')
データ フレーム リスト カラム 平均 値	df[aList].mean()
カウンタ 間	aCounter | aCounter2
データ フレーム 指定 さ れ た 三つ 列 抽出 する	df[[column, column2, column3]]
黒色 下 三角 マーカー 散布 図 描く	plt.plot(xdata, ydata, marker='v', c='k')
オプション グラフ 色 ミディアムスプリンググリーン 指定 する	color = 'mediumspringgreen'
文字 列 全て 小文字	s.islower()
文字 列 中 ひとつ 非 大文字 含ま れる 調べる	any(not c.isupper() for c in s)
データ フレーム リスト カラム 値 まとめ 置き換える	df[aList].replace(ValueMap)
割り切れ ない	n % n2 != 0
折れ線 グラフ 色 小麦色 指定 する	plt.plot(データ列, データ列2, color='wheat')
プログラム 実行 正しく 終える	sys.exit(0)
ミディアムスレートブルー ヒストグラム 色 指定 する	plt.hist(データ列, color='mediumslateblue')
セット 全 要素 消す	aSet.clear()
配列 リスト 境界 値 ビン 分割 する	pd.cut(aArray, aList)
ヒストグラム 描画 し その 色 ハニーデュー 変更 する	plt.hist(データ列, color='honeydew')
折れ線 グラフ 描画 し その 色 ライトスレイグレー 変更 する	plt.plot(データ列, データ列2, color='lightslategrey')
データ フレーム リスト カラム 中 存在 する 文字 列 合計 数える	df[aList].isin([value, value2]).sum()
データ フレーム 欠損 値 最大 値 補う	df.fillna(df.max())
文字 列 先頭 大文字 小文字 無視 し 正規 表現 マッチ さ せる	re.match(pattern, s, flags=re.IGNORECASE)
横 棒グラフ 幅 設定 する	plt.barh(ラベル列, データ列, width=x)
データ フレーム カラム 値 未 入力 値 調べる	df[col].isna()
線 グラフ 色 トマト 設定 する	plt.plot(データ列, データ列2, color='tomato')
マッピング 項目 名 値	aDict.get(key)
区間 度数 分布 図 用い リスト 描画 する	plt.hist(データ列, range=(start, end))
グラフ 色 全般 的 明るく する	sns.set(pallete='bright')
オプション 線 種 一 点 鎖線 設定 する	linestyle = 'dashbot'
実数 整数 する	int(x)
ヒストグラム 色 ミディアムスプリンググリーン 指定 する	plt.hist(データ列, color='mediumspringgreen')
オプション ゴールデン ロッド 色 使う	color = 'goldenrod'
文字 列 パターン タイム スタンプ 変換 する	datetime.datetime.strptime(日付の書かれた文字列, format)
無限 続く イテラブル	itertools.repeat(n)
十 六 進 数字 全て 使う	string.hexdigits
数式 変数 数式 代入 する	e.subs(z, e2)
ビン 数 設定 し ヒストグラム 描画 する	plt.hist(データ列, bins=n)
オプション ミント クリーム 色 使用 する	color = 'mintcream'
データ 列 中央 値	ds.median()
データ フレーム 列 並べ インデックス 振り 直す	df.sort_values(columns).reset_index(drop=True)
データ フレーム 中 カラム 等量 個 ビンニング する	pd.qcut(df[col], n)
かける	n * n2
日付 データ 秒 分 加算 する	aDate + datetime.timedelta(seconds=n)
リスト データ 列 散布 図 大 バツ マーカー 描画 する	plt.plot(xdata, ydata, marker='X')
文字 列 全て 英数字 調べる	s.isalnum()
折れ線 グラフ 大き さ 四角 マーカー 描画 する	plt.plot(データ列, データ列2, marker='s', markersize=n)
リスト リスト 青い 濃い グラフ プロット する	plt.plot(xdata, ydata, linestyle='deep', color='b')
カラー コード マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='v', c=rgb)
オプション 使う	encoding = 'shift_jis'
散布 図 カラー コード バツ マーカー 使う	plt.plot(xdata, ydata, marker='x', c=rgb)
ヒストグラム 描画 し その 色 ローン グリーン 設定 する	plt.hist(データ列, color='lawngreen')
リスト リスト 淡い グラフ 描画 し その 色 青 する	plt.plot(xdata, ydata, linestyle='muted', color='b')
ファイル パス 拡張 子 付き ファイル 名	os.path.basename(filepath)
小数点 数 小数 部 求める	math.modf(x)[0]
文字 列 組 要素 で ない どう 調べる	element not in aTuple
データ フレーム リスト カラム 中 いくつ 欠損 値 含ま れる 求める	df[aList].isna().sum()
オプション 色 コーラル 設定 する	color = 'coral'
文字 列 リスト 結合 する	''.join(aStringList)
折れ線 グラフ 描画 し その 色 チョコレート 変更 する	plt.plot(データ列, データ列2, color='chocolate')
列 と列 連結 する	itertools.chain(iterable, iterable2)
降順 列 データ フレーム 破壊 的 並べる	df.sort_values(by='A', ascending=False, inplace=True)
三 自然 数 最大公約数 計算 する	math.gcd(n, n2, n3)
ヒストグラム 色 スレート ブルー 設定 する	plt.hist(データ列, color='slateblue')
ファイル パス 文字 列 示す エン コーディング 書き込み できる よう 開く	open(filepath, mode='w', encoding=s)
データ 列 歪 度	ds.kurt()
オプション スカイ ブルー 色 指定 する	color = 'skyblue'
ヒストグラム 描画 し ビン 数 設定 する	plt.hist(データ列, bins=n)
ファイル ファイル 名 調べる	filename.endswith('.tsv')
本日 木曜日 どう 調べる	datetime.datetime.today().weekday() == 3
オプション レモン シフォン 色 使う	color = 'lemonchiffon'
オプション 複素数 型 用いる	dtype = bool
ヒストグラム 描画 し その 色 ダーク バイオレット 設定 する	plt.hist(データ列, color='darkviolet')
データ フレーム 位 四捨五入 し 整数 型 する	df.round(-2).astype(int)
パラメータ 無限 大 近づく 時 数式 極限 値 求める	sympy.limit(e, z, oo)
オプション オリベドラブ 色 使う	color = 'olivedrab'
デフォルト 適用 する	sns.set()
オプション 色 ディムグレー 設定 する	color = 'dimgray'
配列 リスト 散布 図 描画 し マーカー 右 三 角 設定 する	plt.plot(xdata, ydata, marker='>')
エラー なく 集合 値 取り除く	aSet.discard(element)
範囲 指定 し 整数 乱数 計算 する	random.randint(最小値, 最大値)
線 グラフ 描画 し その 色 ビスク 変更 する	plt.plot(データ列, データ列2, color='bisque')
折れ線 グラフ 色 ダーク カーキ 設定 する	plt.plot(データ列, データ列2, color='darkkhaki')
日付 データ データ 列 データ フレーム インデックス する	df.index = pd.DatetimeIndex(ds)
ヒストグラム 描画 し その 色 パウダー ブルー 設定 する	plt.hist(データ列, color='powderblue')
双方向 キュー 先頭 要素 取り除く	deq.popleft()
日付 データ 日付 データ 時間 差 秒 数 算出 する	(aDate - aDate2).total_seconds()//60
オプション オリベドラブ 使用 する	color = 'olivedrab'
リスト リスト 散布 図 星 マーカー 描く	plt.plot(xdata, ydata, marker='*')
列 値 データ フレーム グループ 化 し 記述 統計 量 求める	df.groupby('A').describe()
オプション グラフ 色 ミディアムアクアマリン セット する	color = 'mediumaquamarine'
線 グラフ 描画 し その 色 ビスク 設定 する	plt.plot(データ列, データ列2, color='bisque')
ヒストグラム 描画 し 色 紺 変更 する	plt.hist(データ列, color='darkblue')
辞書 全 値 クリア する	aDict.clear()
日付 時刻 データ 時間	aDatetime.time()
方程式 解	sympy.solve(e)
オプション 青 紫色 使う	color = 'violet'
折れ線 グラフ 描画 し その 色 ミディアムアクアマリン 設定 する	plt.plot(データ列, データ列2, color='mediumaquamarine')
列 データ フレーム グループ 化 し 列 要約 統計 量 求める	df.groupby(column).describe()[column2]
折れ線 グラフ バツ マーカー 黒く する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
シーグリーン 色 ヒストグラム 描画 する	plt.hist(データ列, color='seagreen')
濃い グラフ 色 赤 する	plt.plot(xdata, ydata, linestyle='deep', color='r')
前もって パターン コンパイル する	re.compile(pattern)
データ フレーム カラム 分散 計算 する	df[col].var()
データ フレーム カラム 中 ある 合計 数える	df[col].isin([value]).sum()
列 用い データ フレーム 昇順 ソート する	df.sort_values(by=column, ascending=True)
黒い バツ 印 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
データ フレーム 列 名 指定 さ れ た 名前 リスト 置き換える	df.columns = columns
折れ線 グラフ 左 三 角 印 線 幅 設定 する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
マッピング マッピング 項目 更新 する	aDict.update(aDict2)
オプション 色 アンティーク ホワイト する	color = 'antiquewhite'
カラー コード 大 バツ マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='X', c=rgb)
つ 変数 コロン 区切っ プリント する	print(value, value2, sep=':')
タプル 引数 展開 し 表示 する	print(*aTuple)
シアン 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='cyan')
ヒストグラム 描画 し 色 ブラック 設定 する	plt.hist(データ列, color='black')
線 グラフ 描画 し その 色 ライム グリーン 設定 する	plt.plot(データ列, データ列2, color='limegreen')
複数 列 データ フレーム 並べ 先頭 来る よう する	df.sort_values(by=column, na_position='first')
要素 集合 含ま れる 調べる	element in aSet
緑色 値 プリント する	print(f'\033[32m{value}\033[0m')
データ フレーム 中 何 行 重複 する 見る	df.duplicated().sum()
折れ線 グラフ 色 設定 する	plt.plot(データ列, データ列2, color='darkslategrey')
形式 ファイル 入力 読み込ん する	data = json.load(fin)
オプション グラフ 色 クリムゾン する	color = 'crimson'
データ 列 ラベル 列 指定 し 積み上げ 横 棒グラフ 描画 する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
リスト リスト 青い 色 差別 ない グラフ 描画 する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
配列 リスト 淡い 描い その 線 幅 指定 する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
二つ 集合 セット 交わり 持た ない どう 調べる	aSet.isdisjoint(aSet2)
折れ線 グラフ 黄色い 印 描画 する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
改行 付き 辞書 文字 列 変換 する	json.dumps(aDict, ensure_ascii=False, indent=n)
オプション ミディアムスレートブルー 使う	color = 'mediumslateblue'
実数 乗 する	x ** 3
折れ線 グラフ ポイント マーカー 赤色 する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
スチール ブルー 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='steelblue')
タイムスタンプデータ 日付 時刻 データ 前 調べる	aDatetime < aDatetime2
オプション ネイビー 色 用いる	color = 'navy'
ヒストグラム 描画 し その 色 ミディアムスプリンググリーン 設定 する	plt.hist(データ列, color='mediumspringgreen')
データ フレーム 関数 グループ 化 し 要約 統計 量 算出 する	df.groupby(関数).describe()
リスト 出力 改行 せ ず 行う	print(value, end='')
文字 列 小文字	s.islower()
折れ線 グラフ バツ マーカー 青色 する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
ヒストグラム 色 スラグレー 変更 する	plt.hist(データ列, color='slategray')
黒い 上 三 角 マーカー 折れ線 グラフ 描画 する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
ポスター グラフ 用途 指定 する	sns.set(context='poster')
現在 日数	datetime.datetime.today().day
黒い 大 バツ マーカー 用い 散布 図 プロット する	plt.plot(xdata, ydata, marker='X', c='k')
グラフ 描画 パステル 調 パレット 使う	sns.set(pallete='pastel')
濃い 色 折れ線 グラフ 描い その 線 幅 設定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
ヒストグラム 色 ミディアムスプリンググリーン 変更 する	plt.hist(データ列, color='mediumspringgreen')
オプション ライトスチールブルー 使う	color = 'lightsteelblue'
オプション バツ マーカー 加える	marker = 'x'
リスト イテラブル 散布 図 黒色 星 マーカー 描く	plt.plot(xdata, ydata, marker='*', c='k')
データ フレーム 列 昇順 ソート する	df.sort_values(by='A', ascending=True)
ふたつ 集合 集合 交わり 持た ない	aSet.isdisjoint(aSet2)
ヒストグラム 描画 し 色 ダーク オレンジ 指定 する	plt.hist(データ列, color='darkorange')
二 点 間 ユークリッド 距離	math.dist(point, point2)
折れ線 グラフ 描画 し マーカー 右 三 角 印 する	plt.plot(データ列, データ列2, marker='>')
文字 列 トリム する	s.strip()
データ フレーム カラム どれ 分散 し いる 見る	df[col].var()
コーラル ヒストグラム 色 セット する	plt.hist(データ列, color='coral')
ライム グリーン ヒストグラム 色 設定 する	plt.hist(データ列, color='limegreen')
データ フレーム 中 存在 する 文字 列 文字 列 合計 求める	df.isin([value, value2]).sum()
青い 明るい プロット する	plt.plot(xdata, ydata, linestyle='bright', color='b')
ヒストグラム 描画 し 色 ロージーブラウン 設定 する	plt.hist(データ列, color='rosybrown')
ヒストグラム 色 インディアン レッド セット する	plt.hist(データ列, color='indianred')
折れ線 グラフ 描画 し その 色 ディムグレー 設定 する	plt.plot(データ列, データ列2, color='dimgrey')
色 差別 ない 折れ線 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
データ フレーム リスト 列 中 いくつ 文字 列 含ま れる 数える	df[aList].isin([value]).sum()
かつ	n and n2
散布 図 黒い ポイント マーカー 使う	plt.plot(xdata, ydata, marker='.', c='k')
折れ線 グラフ 描画 し その 色 インディゴ セット する	plt.plot(データ列, データ列2, color='indigo')
日付 時刻 データ 分 加算 する	aDatetime + datetime.timedelta(minutes=n)
二 次元 リスト 転置 行列 求める	[list(x) for x in list(zip(*aList))]
サドル ブラウン 色 ヒストグラム 描画 する	plt.hist(データ列, color='saddlebrown')
横 並べ ヒストグラム 描画 する	plt.hist([データ列, データ列2], color=['b', 'r'])
データ フレーム カラム 正規 分布 どの 程度 尖っ いる 見る	df[col].skew()
折れ線 グラフ マーカー 菱形 する	plt.plot(データ列, データ列2, marker='D')
行列 ユニーク な 要素 その 個数	u, counts = np.unique(aArray, return_counts=True)
折れ線 グラフ 色 ゴースト ホワイト 設定 する	plt.plot(データ列, データ列2, color='ghostwhite')
余弦 逆数 計算 する	math.acos(x)
折れ線 グラフ 色 オーキッド 設定 する	plt.plot(データ列, データ列2, color='orchid')
つ 文字 列 カンマ 区切っ 出力 する	print(value, value2, sep=',')
カラー バー プロット する	plt.colorbar()
ヒストグラム 透明 度 指定 する	plt.hist(データ列, alpha=x)
ファイル ディレクトリ 名 使う	os.path.dirname(filepath)
ヒストグラム 色 ダークターコイズ 設定 する	plt.hist(データ列, color='darkturquoise')
ヒストグラム 描画 し その 色 イエロー グリーン 設定 する	plt.hist(データ列, color='yellowgreen')
カラム どの 程度 分散 し いる 見る	ds.var()
加える	n + n2
文字 列 リスト 含ま れる 調べる	element in aList
文字 列 中 複数 行 対応 正規 表現 全て マッチ 使う	re.findall(pattern, s, flags=re.MULTILINE)
折れ線 グラフ 描画 し 色 ネイビー 設定 する	plt.plot(データ列, データ列2, color='navy')
ヒストグラム 描い 半 透明 化 する	plt.hist(データ列, alpha=0.5)
オプション グラフ 色 ダーク グレー 設定 する	color = 'darkgray'
アルファベット 一つ ランダム 選ぶ	random.choice(string.ascii_uppercase)
八 進 リテラル 変換 する	oct(n)
名前 付き タプル パラメータ インスタンス 化 する	C._make(パラメータ)
ライト グレー ヒストグラム 色 設定 する	plt.hist(データ列, color='lightgray')
折れ線 グラフ 描画 し その 色 セット する	plt.plot(データ列, データ列2, color='darkslategrey')
日付 データ 週間 分 加える	aDate + datetime.timedelta(weeks=n)
イテラブル イテラブル 直積	itertools.product(iterable, iterable2)
ひとつ 小文字 文字 列 内 含ま れる どう 調べる	any(c.islower() for c in s)
ヒストグラム 描画 し その 色 ディムグレー 設定 する	plt.hist(データ列, color='dimgray')
本日 日曜日 調べる	datetime.datetime.today().weekday() == 6
データ フレーム 列 用い 並べて 更新 する	df.sort_values(by=column, inplace=True)
データ 列 データ 列 折れ線 グラフ カラー コード 描画 する	plt.plot(xdata, ydata, color=rgb)
耐火 レンガ ヒストグラム 色 セット する	plt.hist(データ列, color='firebrick')
タイムスタンプデータ 時間 分 加算 する	aDatetime + datetime.timedelta(hours=n)
折れ線 グラフ 色 イエロー グリーン 変更 する	plt.plot(データ列, データ列2, color='yellowgreen')
リスト 配列 散布 図 黒い 右 三 角 マーカー 描画 する	plt.plot(xdata, ydata, marker='>', c='k')
オプション 文字 列 示す 文字 コード 使う	encoding = s
ヒストグラム 描画 し その 色 フクシア 設定 する	plt.hist(データ列, color='fuchsia')
年 月 日 時 分 タイム スタンプ	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
ファイル パス バイナリ 書き込み できる よう オープン する	open(filepath, mode='wb')
文字 列 最後 部分 文字 列 二分 し 残り 文字 列 見る	s.rpartition(sub)[-1]
オプション グラフ 色 ライム グリーン 設定 する	color = 'limegreen'
データ 列 個 ビン 分割 し ラベル つける	pd.cut(ds, n, labels=names)
淡い グラフ 描画 し その 線 幅 設定 する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
データ 列 欠損 値 最小 値 設定 する	ds.fillna(ds.min())
変数 数式 微分 計算 する	sympy.diff(e, z)
赤い 四角 マーカー 散布 図 描画 する	plt.plot(xdata, ydata, marker='s', c='r')
ヒストグラム 描画 し その 色 暗い 赤 指定 する	plt.hist(データ列, color='darkred')
実数 整数 どう	x.is_integer()
文字 列 シアン 表示 できる 文字 列 変換 する	f'\033[36m{value}\033[0m'
データ フレーム 標本 標準 偏差 求める	df.std()
オプション 下 三角 マーカー 使う	marker = 'v'
折れ線 グラフ 描画 し 色 カデット ブルー セット する	plt.plot(データ列, データ列2, color='cadetblue')
データ フレーム 欠損 値 する	df.fillna(x)
実数 双曲線 正弦 逆数	math.asinh(x)
コンビネーション	math.comb(n, k)
色 差別 ない 色 折れ線 グラフ 描い その 線 幅 変更 する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
オプション リネン グラフ 色 設定 する	color = 'linen'
データ フレーム 中 ある 文字 列 文字 列 合計 求める	df.isin([value, value2]).sum()
文字 列 組 含ま れる 調べる	element in aTuple
配列 次元 変形 する	aArray.reshape(行数, 列数)
暗い グラフ 色 青 する	plt.plot(xdata, ydata, linestyle='dark', color='b')
データ フレーム 配列 変換 する	df.values
データ フレーム リスト カラム 中 文字 列 いくつ 存在 する 数える	df[aList].isin([value, value2]).sum()
データ フレーム リスト カラム 平均 値 計算 する	df[aList].mean()
正方 単位 行列	np.identity(N)
つ データ フレーム ジョイン する	pd.merge(df, df2)
オプション 文字 列 セパレータ 使う	sep = s
実数 有限	math.isfinite(x)
マップ 値 一覧	aDict.values()
オプション 整数 型 使う	dtype = np.int
オブジェクト プロパティ 持つ	hasattr(obj, プロパティ名)
日付 データ 日 分 加える	aDate + datetime.timedelta(days=n)
ファイル ストリーム 使う	open(filepath)
オプション 色 スカイ ブルー 指定 する	color = 'skyblue'
リスト 配列 散布 図 プロット し マーカー 色 淡い 設定 する	plt.plot(xdata, ydata, c='muted')
折れ線 グラフ 色 ピンク 指定 する	plt.plot(データ列, データ列2, color='pink')
コマンド ライン 引数	sys.argv
列 用い データ フレーム 並べ 更新 する	df.sort_values(by=column, inplace=True)
ヒストグラム 描画 し その 色 青 紫 設定 する	plt.hist(データ列, color='violet')
オプション オレンジ レッド 色 使用 する	color = 'orangered'
列 コンビネーション 得る	itertools.combinations(iterable, n)
プロット 全般 的 パステル 調 する	sns.set(pallete='pastel')
データ 列 値 どう 確認 する	ds.isna()
ヒストグラム 描画 し 色 ロイヤル ブルー 設定 する	plt.hist(データ列, color='royalblue')
両端 キュー 文字 列 プッシュ する	deq.append(element)
列 等量 個 ビン 分割 する	pd.qcut(ds, n)
オプション パレットトルコイズ グラフ 色 設定 する	color = 'paleturquoise'
範囲 指定 し 整数 乱数 得る	random.randint(最小値, 最大値)
イテラブル イテラブル 散布 図 描画 し 星 マーカー 色 カラー コード 設定 する	plt.plot(xdata, ydata, marker='*', c=rgb)
折れ線 グラフ 色 ライトスレイグレー 指定 する	plt.plot(データ列, データ列2, color='lightslategrey')
キー 辞書 ある いる どう テスト する	key not in aDict
文字 列 内 ひとつ 数字 含ま れる どう 調べる	any(c.isdigit() for c in s)
文字 列 全て 空白 調べる	s.isspace()
データ フレーム エクセルファイルファイル ファイル 保存 する	df.to_excel(filename)
折れ線 グラフ 大 バツ 印 赤色 する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
データ フレーム 各 列 毎 グループ 化 し 列 標準 偏差 求める	df.groupby(column)[column2].std()
データ フレーム 列 小さい 行 抽出 する	df[df[column] < x]
折れ線 グラフ 色 グリーン イエロー セット する	plt.plot(データ列, データ列2, color='greenyellow')
配列 座標 指定 し 折れ線 グラフ 描画 する	plt.plot(range(len(xdata)), xdata)
オプション ピーチ パフ 用いる	color = 'peachpuff'
列 用い 破壊 的 データ フレーム 並べる	df.sort_values(by='A', inplace=True)
ビン 数 リスト ビン 分割 し ラベル つける	pd.cut(aList, n, labels=names)
昇順 リスト 要素 並べる	sorted(aList, reverse=False)
数列 配列 青色 パステル 調 の 描画 する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リスト 配列 散布 図 プロット し マーカー 大 バツ 指定 する	plt.plot(xdata, ydata, marker='X')
散布 図 赤い 下 三角 マーカー 使う	plt.plot(xdata, ydata, marker='v', c='r')
真 なる イテラブル 要素	itertools.dropwhile(predicateFunc, iterable)
ヒストグラム 色 青 設定 する	plt.hist(データ列, color='blue')
折れ線 グラフ 下 三角 マーカー 使用 する	plt.plot(データ列, データ列2, marker='v')
列 配列 変換 する	df[column].values
もしくは もしくは 等しい 調べる	n == 1 or n == 2 or n == 3
データ フレーム カラム 日付 データ 変換 し データ フレーム インデックス する	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
全 要素 初期 化 さ れ た 符号 なし ビット 整数 型 行列 初期 化 する	np.zeros(行数, 列数, dtype=np.uint8)
集合 空 で ない どう	len(aSet) != 0
ヒストグラム 描画 し その 色 デピンク 設定 する	plt.hist(データ列, color='deeppink')
文字 列 内 ひとつ 空白 含ま れる どう	any(c.isspace() for c in s)
スピアマン 相関 係数 データ フレーム 相関 行列 求める	df.corr(method='spearman')
タイム スタンプ 型 変換 する	pd.to_datetime(dateString)
ゴールド 色 線 グラフ 描画 する	plt.plot(データ列, データ列2, color='gold')
カラム 未 入力 値 最大 値 補う	ds.fillna(ds.max())
データ フレーム 列 破壊 的 並べる	df.sort_values(by='A', inplace=True)
破壊 的 データ フレーム 二つ 列 用い 降順 ソート する	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
オプション ピンク 用いる	color = 'deeppink'
マスク さ れ た シーケンス 要素 取り出す	itertools.compress(iterable, selectors=iterable2)
二乗 求める	n ** 2
列 各 要素 適用 真 で あれ その 要素 出力 する	itertools.takewhile(predicateFunc, iterable)
行 列 次元 リスト	[[0] * n for _ in range(n2)]
列 昇順 データ フレーム ソート する	df.sort_values(by=['A', 'B'], ascending=True)
文字 列 大文字 小文字 無視 し 同じ	s.casefold() == s2.casefold()
現在 年数	datetime.datetime.today().year
データ フレーム カラム 中 欠損 値 数 求める	df[col].isna().sum()
底 する 実数 対数	math.log(x, k)
データ フレーム データ 列 連結 する	pd.concat([df, ds], axis=1)
データ フレーム カラム 中 文字 列 いくつ ある 数える	df[col].isin([value, value2]).sum()
データ フレーム 関数 値 グループ 化 する	df.groupby(関数)
プログラム ファイル 名前	sys.argv[0]
ヒストグラム 色 オリーブ 設定 する	plt.hist(データ列, color='olive')
線 グラフ 描画 し 色 ダークスラテグレー 変更 する	plt.plot(データ列, データ列2, color='darkslategray')
ヒストグラム 描画 し 色 青 紫 変更 する	plt.hist(データ列, color='violet')
数値 パラメータ 解 方程式 計算 する	sympy.solve(e, z)
実行 環境 再帰 最大 回数	sys.getrecursionlimit()
オプション グラフ 色 ライト ブルー 設定 する	color = 'lightblue'
イテラブル リスト 濃い 色 折れ線 グラフ 描い その 線 幅 指定 する	plt.plot(xdata, ydata, linewidth=n, color='deep')
ヒストグラム 描画 し その 色 ブランチドアーモンド 設定 する	plt.hist(データ列, color='blanchedalmond')
折れ線 グラフ 描画 し 色 インディアン レッド 変更 する	plt.plot(データ列, データ列2, color='indianred')
